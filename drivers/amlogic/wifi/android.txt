AP6xxx/dhd_cfg80211.c:557:#endif /* OEM_ANDROID */
AP6xxx/dhd_cfg80211.c:619:#endif /* OEM_ANDROID */
AP6xxx/wl_cfg80211.c:61:#include <wl_android.h>
AP6xxx/wl_cfg80211.c:3484:#endif /* (OEM_ANDROID) */
AP6xxx/wl_cfg80211.c:3493:	/* android has special hooks to change pm when kernel suspended */
AP6xxx/wl_cfg80211.c:6466:				/* WLAN_REASON_UNSPECIFIED is used for hang up event in Android */
AP6xxx/wl_cfgp2p.c:48:#include <wl_android.h>
AP6xxx/wl_cfgp2p.c:2322:	 * not Handle any IOCTL cmds on p2p0 other than ANDROID PRIVATE CMDs.
AP6xxx/wl_cfgp2p.c:2323:	 * For Android PRIV CMD handling map it to primary I/F
AP6xxx/wl_cfgp2p.c:2326:		ret = wl_android_priv_cmd(ndev, ifr, cmd);
AP6xxx/wl_android.c:2: * Linux cfg80211 driver - Android related functions
AP6xxx/wl_android.c:24: * $Id: wl_android.c 372668 2012-12-04 14:07:12Z $
AP6xxx/wl_android.c:30:#include <wl_android.h>
AP6xxx/wl_android.c:61:#define ANDROID_ERROR_LEVEL	0x0001
AP6xxx/wl_android.c:62:#define ANDROID_TRACE_LEVEL	0x0002
AP6xxx/wl_android.c:63:#define ANDROID_INFO_LEVEL	0x0004
AP6xxx/wl_android.c:65:uint android_msg_level = ANDROID_ERROR_LEVEL;
AP6xxx/wl_android.c:67:#define ANDROID_ERROR(x) \
AP6xxx/wl_android.c:69:		if (android_msg_level & ANDROID_ERROR_LEVEL) { \
AP6xxx/wl_android.c:70:			printk(KERN_ERR "ANDROID-ERROR) ");	\
AP6xxx/wl_android.c:74:#define ANDROID_TRACE(x) \
AP6xxx/wl_android.c:76:		if (android_msg_level & ANDROID_TRACE_LEVEL) { \
AP6xxx/wl_android.c:77:			printk(KERN_ERR "ANDROID-TRACE) ");	\
AP6xxx/wl_android.c:81:#define ANDROID_INFO(x) \
AP6xxx/wl_android.c:83:		if (android_msg_level & ANDROID_INFO_LEVEL) { \
AP6xxx/wl_android.c:84:			printk(KERN_ERR "ANDROID-INFO) ");	\
AP6xxx/wl_android.c:90: * Android private command strings, PLEASE define new private commands here
AP6xxx/wl_android.c:153:typedef struct android_wifi_priv_cmd {
AP6xxx/wl_android.c:157:} android_wifi_priv_cmd;
AP6xxx/wl_android.c:197: * wl_android_wifi_on
AP6xxx/wl_android.c:204:static int wl_android_get_link_speed(struct net_device *net, char *command, int total_len)
AP6xxx/wl_android.c:214:	/* Convert Kbps to Android Mbps */
AP6xxx/wl_android.c:217:	ANDROID_INFO(("%s: command result is %s\n", __FUNCTION__, command));
AP6xxx/wl_android.c:221:static int wl_android_get_rssi(struct net_device *net, char *command, int total_len)
AP6xxx/wl_android.c:239:		ANDROID_ERROR(("%s: wldev_get_ssid failed\n", __FUNCTION__));
AP6xxx/wl_android.c:245:	ANDROID_INFO(("%s: command result is %s (%d)\n", __FUNCTION__, command, bytes_written));
AP6xxx/wl_android.c:249:static int wl_android_set_suspendopt(struct net_device *dev, char *command, int total_len)
AP6xxx/wl_android.c:263:			ANDROID_INFO(("%s: Suspend Flag %d -> %d\n",
AP6xxx/wl_android.c:266:			ANDROID_ERROR(("%s: failed %d\n", __FUNCTION__, ret));
AP6xxx/wl_android.c:271:static int wl_android_set_suspendmode(struct net_device *dev, char *command, int total_len)
AP6xxx/wl_android.c:284:		ANDROID_INFO(("%s: Suspend Mode %d\n",__FUNCTION__,suspend_flag));
AP6xxx/wl_android.c:286:		ANDROID_ERROR(("%s: failed %d\n",__FUNCTION__,ret));
AP6xxx/wl_android.c:291:static int wl_android_get_band(struct net_device *dev, char *command, int total_len)
AP6xxx/wl_android.c:305:static int wl_android_set_pno_setup(struct net_device *dev, char *command, int total_len)
AP6xxx/wl_android.c:338:	ANDROID_INFO(("%s: command=%s, len=%d\n", __FUNCTION__, command, total_len));
AP6xxx/wl_android.c:341:		ANDROID_ERROR(("%s argument=%d less min size\n", __FUNCTION__, total_len));
AP6xxx/wl_android.c:369:			ANDROID_ERROR(("SSID is not presented or corrupted ret=%d\n", nssid));
AP6xxx/wl_android.c:373:				ANDROID_ERROR(("%s scan duration corrupted field size %d\n",
AP6xxx/wl_android.c:379:			ANDROID_INFO(("%s: pno_time=%d\n", __FUNCTION__, pno_time));
AP6xxx/wl_android.c:383:					ANDROID_ERROR(("%s pno repeat : corrupted field\n",
AP6xxx/wl_android.c:389:				ANDROID_INFO(("%s :got pno_repeat=%d\n", __FUNCTION__, pno_repeat));
AP6xxx/wl_android.c:391:					ANDROID_ERROR(("%s FREQ_EXPO_MAX corrupted field size\n",
AP6xxx/wl_android.c:397:				ANDROID_INFO(("%s: pno_freq_expo_max=%d\n",
AP6xxx/wl_android.c:402:		ANDROID_ERROR(("%s get wrong TLV command\n", __FUNCTION__));
AP6xxx/wl_android.c:413:static int wl_android_get_p2p_dev_addr(struct net_device *ndev, char *command, int total_len)
AP6xxx/wl_android.c:426: * Global function definitions (declared in wl_android.h)
AP6xxx/wl_android.c:429:int wl_android_wifi_on(struct net_device *dev)
AP6xxx/wl_android.c:436:		ANDROID_ERROR(("%s: dev is null\n", __FUNCTION__));
AP6xxx/wl_android.c:447:			ANDROID_ERROR(("\nfailed to power up wifi chip, retry again (%d left) **\n\n",
AP6xxx/wl_android.c:452:			ANDROID_ERROR(("\nfailed to power up wifi chip, max retry reached **\n\n"));
AP6xxx/wl_android.c:473:int wl_android_wifi_off(struct net_device *dev)
AP6xxx/wl_android.c:479:		ANDROID_TRACE(("%s: dev is null\n", __FUNCTION__));
AP6xxx/wl_android.c:498:static int wl_android_set_fwpath(struct net_device *net, char *command, int total_len)
AP6xxx/wl_android.c:505:		ANDROID_INFO(("GOT APSTA FIRMWARE\n"));
AP6xxx/wl_android.c:508:		ANDROID_INFO(("GOT STA FIRMWARE\n"));
AP6xxx/wl_android.c:515:wl_android_set_pmk(struct net_device *dev, char *command, int total_len)
AP6xxx/wl_android.c:528:		ANDROID_ERROR(("Failed to set PMK for OKC, error = %d\n", error));
AP6xxx/wl_android.c:531:	ANDROID_ERROR(("PMK is "));
AP6xxx/wl_android.c:533:		ANDROID_ERROR(("%02X ", pmk[i]));
AP6xxx/wl_android.c:535:	ANDROID_ERROR(("\n"));
AP6xxx/wl_android.c:541:wl_android_okc_enable(struct net_device *dev, char *command, int total_len)
AP6xxx/wl_android.c:549:		ANDROID_ERROR(("Failed to %s OKC, error = %d\n",
AP6xxx/wl_android.c:556:int wl_android_set_roam_mode(struct net_device *dev, char *command, int total_len)
AP6xxx/wl_android.c:562:		ANDROID_ERROR(("%s: Failed to get Parameter\n", __FUNCTION__));
AP6xxx/wl_android.c:568:		ANDROID_ERROR(("%s: Failed to set roaming Mode %d, error = %d\n",
AP6xxx/wl_android.c:573:		ANDROID_ERROR(("%s: succeeded to set roaming Mode %d, error = %d\n",
AP6xxx/wl_android.c:578:int wl_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd)
AP6xxx/wl_android.c:584:	android_wifi_priv_cmd priv_cmd;
AP6xxx/wl_android.c:592:	if (copy_from_user(&priv_cmd, ifr->ifr_data, sizeof(android_wifi_priv_cmd))) {
AP6xxx/wl_android.c:598:		ANDROID_ERROR(("%s: too long priavte command\n", __FUNCTION__));
AP6xxx/wl_android.c:604:		ANDROID_ERROR(("%s: failed to allocate memory\n", __FUNCTION__));
AP6xxx/wl_android.c:613:	ANDROID_INFO(("%s: Android private cmd \"%s\" on %s\n", __FUNCTION__, command, ifr->ifr_name));
AP6xxx/wl_android.c:616:		ANDROID_INFO(("%s, Received regular START command\n", __FUNCTION__));
AP6xxx/wl_android.c:617:		bytes_written = wl_android_wifi_on(net);
AP6xxx/wl_android.c:620:		bytes_written = wl_android_set_fwpath(net, command, priv_cmd.total_len);
AP6xxx/wl_android.c:624:		ANDROID_ERROR(("%s: Ignore private cmd \"%s\" - iface %s is down\n",
AP6xxx/wl_android.c:631:		bytes_written = wl_android_wifi_off(net);
AP6xxx/wl_android.c:640:		bytes_written = wl_android_get_rssi(net, command, priv_cmd.total_len);
AP6xxx/wl_android.c:643:		bytes_written = wl_android_get_link_speed(net, command, priv_cmd.total_len);
AP6xxx/wl_android.c:682:		bytes_written = wl_android_set_suspendopt(net, command, priv_cmd.total_len);
AP6xxx/wl_android.c:685:		bytes_written = wl_android_set_suspendmode(net, command, priv_cmd.total_len);
AP6xxx/wl_android.c:701:		bytes_written = wl_android_get_band(net, command, priv_cmd.total_len);
AP6xxx/wl_android.c:715:		bytes_written = wl_android_set_pno_setup(net, command, priv_cmd.total_len);
AP6xxx/wl_android.c:723:		bytes_written = wl_android_get_p2p_dev_addr(net, command, priv_cmd.total_len);
AP6xxx/wl_android.c:749:		bytes_written = wl_android_set_pmk(net, command, priv_cmd.total_len);
AP6xxx/wl_android.c:751:		bytes_written = wl_android_okc_enable(net, command, priv_cmd.total_len);
AP6xxx/wl_android.c:753:		bytes_written = wl_android_set_roam_mode(net, command, priv_cmd.total_len);
AP6xxx/wl_android.c:755:		ANDROID_ERROR(("Unknown PRIVATE command %s - ignored\n", command));
AP6xxx/wl_android.c:764:			ANDROID_ERROR(("%s: bytes_written = %d\n", __FUNCTION__, bytes_written));
AP6xxx/wl_android.c:771:			ANDROID_ERROR(("%s: failed to copy data to user buffer\n", __FUNCTION__));
AP6xxx/wl_android.c:788:int wl_android_init(void)
AP6xxx/wl_android.c:803:int wl_android_exit(void)
AP6xxx/wl_android.c:810:void wl_android_post_init(void)
AP6xxx/wl_android.c:830:		ANDROID_INFO(("%s: Free %d with BSSID %pM\n",
AP6xxx/wl_android.c:864:			ANDROID_INFO(("%s: Del %d with BSSID %pM\n",
AP6xxx/wl_android.c:915:			ANDROID_INFO(("%s: Update %d with BSSID %pM, RSSI=%d\n",
AP6xxx/wl_android.c:949:				ANDROID_INFO(("%s: Update %d with BSSID %pM, RSSI=%d, SSID \"%s\"\n",
AP6xxx/wl_android.c:967:			ANDROID_ERROR(("%s: Memory alloc failure %d\n",
AP6xxx/wl_android.c:971:		ANDROID_INFO(("%s: Add %d with cached BSSID %pM, RSSI=%d, SSID \"%s\" in the leaf\n",
AP6xxx/wl_android.c:1011:		ANDROID_ERROR(("%s: BSSID %pM does not in RSSI cache\n",
AP6xxx/wl_android.c:1052:	ANDROID_TRACE(("%s called\n", __FUNCTION__));
AP6xxx/wl_android.c:1058:		ANDROID_TRACE(("%s: Free %d with BSSID %pM\n",
AP6xxx/wl_android.c:1087:			ANDROID_TRACE(("%s: Del %d with BSSID %pM, RSSI=%d, SSID \"%s\"\n",
AP6xxx/wl_android.c:1141:					ANDROID_ERROR(("%s: Memory alloc failure %d and keep old BSS info\n",
AP6xxx/wl_android.c:1151:				ANDROID_TRACE(("%s: Update %d with BSSID %pM, RSSI=%d, SSID \"%s\"\n",
AP6xxx/wl_android.c:1173:			ANDROID_ERROR(("%s: Memory alloc failure %d\n", __FUNCTION__,
AP6xxx/wl_android.c:1177:		ANDROID_TRACE(("%s: Add %d with cached BSSID %pM, RSSI=%d, SSID \"%s\" in the leaf\n",
AP6xxx/wl_android.c:1205:			ANDROID_TRACE(("%s: timer starts\n", __FUNCTION__));
AP6xxx/wl_android.c:1208:			ANDROID_TRACE(("%s: timer stops\n", __FUNCTION__));
AP6xxx/wl_android.c:1219:	ANDROID_TRACE(("%s called\n", __FUNCTION__));
AP6xxx/wl_android.c:1225:	ANDROID_TRACE(("%s:\n", __FUNCTION__));
AP6xxx/wl_android.c:1236:	ANDROID_TRACE(("%s:\n", __FUNCTION__));
AP6xxx/wl_android.c:1241:		ANDROID_ERROR(("%s: Memory alloc failure\n", __FUNCTION__ ));
AP6xxx/wl_android.c:1251: * Functions for Android WiFi card detection
AP6xxx/wl_android.c:1263:int wl_android_wifictrl_func_add(void)
AP6xxx/wl_android.c:1270:		ANDROID_ERROR(("%s: platform_driver_register failed\n", __FUNCTION__));
AP6xxx/wl_android.c:1278:		ANDROID_ERROR(("%s: platform_driver_register timeout\n", __FUNCTION__));
AP6xxx/wl_android.c:1284:void wl_android_wifictrl_func_del(void)
AP6xxx/wl_android.c:1293:void* wl_android_prealloc(int section, unsigned long size)
AP6xxx/wl_android.c:1299:			ANDROID_INFO(("success alloc section %d\n", section));
AP6xxx/wl_android.c:1306:	ANDROID_ERROR(("can't alloc section %d\n", section));
AP6xxx/wl_android.c:1325:	ANDROID_ERROR(("%s = %d\n", __FUNCTION__, on));
AP6xxx/wl_android.c:1337:	ANDROID_ERROR(("%s\n", __FUNCTION__));
AP6xxx/wl_android.c:1350:	ANDROID_TRACE(("%s\n", __FUNCTION__));
AP6xxx/wl_android.c:1362:	ANDROID_ERROR(("%s = %d\n", __FUNCTION__, on));
AP6xxx/wl_android.c:1391:	ANDROID_ERROR(("## %s\n", __FUNCTION__));
AP6xxx/wl_android.c:1403:	ANDROID_TRACE(("##> %s\n", __FUNCTION__));
AP6xxx/wl_android.c:1416:	ANDROID_TRACE(("##> %s\n", __FUNCTION__));
AP6xxx/wl_android.c:1447:	ANDROID_TRACE(("## Calling platform_driver_register\n"));
AP6xxx/wl_android.c:1458:	ANDROID_TRACE(("## Unregister platform_driver_register\n"));
AP6xxx/dhd_linux.c:118:#include <wl_android.h>
AP6xxx/dhd_linux.c:369:module_param(android_msg_level, int, 0);
AP6xxx/dhd_linux.c:2390:		ret = wl_android_priv_cmd(net, ifr, cmd);
AP6xxx/dhd_linux.c:2646:			wl_android_wifi_off(net);
AP6xxx/dhd_linux.c:2719:			ret = wl_android_wifi_on(net);
AP6xxx/dhd_linux.c:2740:		/* dhd_prot_init has been called in dhd_bus_start or wl_android_wifi_on */
AP6xxx/dhd_linux.c:3329:/* From Android JerryBean release, the concurrent mode is enabled by default and the firmware
AP6xxx/dhd_linux.c:4070:		 * Android sets the locally administered bit to indicate that this is a
AP6xxx/dhd_linux.c:4142:			 * In case of Android cfg80211 driver, the bus is down in dhd_stop,
AP6xxx/dhd_linux.c:4358:	wl_android_wifictrl_func_del();
AP6xxx/dhd_linux.c:4360:	wl_android_exit();
AP6xxx/dhd_linux.c:4382:	wl_android_init();
AP6xxx/dhd_linux.c:4406:		if (wl_android_wifictrl_func_add() < 0) {
AP6xxx/dhd_linux.c:4421:		wl_android_wifictrl_func_del();
AP6xxx/dhd_linux.c:4433:	if (wl_android_wifictrl_func_add() < 0)
AP6xxx/dhd_linux.c:4468://	wl_android_post_init();
AP6xxx/dhd_linux.c:4482:	wl_android_wifictrl_func_del();
AP6xxx/dhd_linux.c:4731:	return (uint8*)wl_android_prealloc(section, size);
AP6xxx/dhd_linux.c:5169:#endif /* (OEM_ANDROID) */
AP6xxx/wl_android.h:2: * Linux cfg80211 driver - Android related functions
AP6xxx/wl_android.h:24: * $Id: wl_android.h 367273 2012-11-07 09:58:55Z $
AP6xxx/wl_android.h:36: * Android platform dependent functions, feel free to add Android specific functions here
AP6xxx/wl_android.h:38: * or cfg, define them as static in wl_android.c
AP6xxx/wl_android.h:42: * wl_android_init will be called from module init function (dhd_module_init now), similarly
AP6xxx/wl_android.h:43: * wl_android_exit will be called from module exit function (dhd_module_cleanup now)
AP6xxx/wl_android.h:45:int wl_android_init(void);
AP6xxx/wl_android.h:46:int wl_android_exit(void);
AP6xxx/wl_android.h:47:void wl_android_post_init(void);
AP6xxx/wl_android.h:48:int wl_android_wifi_on(struct net_device *dev);
AP6xxx/wl_android.h:49:int wl_android_wifi_off(struct net_device *dev);
AP6xxx/wl_android.h:50:int wl_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd);
AP6xxx/wl_android.h:119:int wl_android_wifictrl_func_add(void);
AP6xxx/wl_android.h:120:void wl_android_wifictrl_func_del(void);
AP6xxx/wl_android.h:121:void* wl_android_prealloc(int section, unsigned long size);
AP6xxx/dhd_sdio.c:6536:extern void wl_android_post_init(void); // terence 20120530: fix for preinit function missed called after resume
AP6xxx/dhd_sdio.c:6717:		wl_android_post_init(); // terence 20120530: fix for preinit function missed called after resume
AP6xxx/dhd_common.c:314:		printk("android_msg_level=0x%x\n", android_msg_level);
AP6xxx/dhd_common.c:340:			android_msg_level = int_val;
AP6xxx/dhd_common.c:341:			printk("android_msg_level=0x%x\n", android_msg_level);
AP6xxx/dhd_common.c:1924:#endif /* OEM_ANDROID && PNO_SUPPORT */
AP6xxx/dhd_common.c:1967:/* Android ComboSCAN support */
AP6xxx/wl_cfg80211.h:856:#endif /* OEM_ANDROID */
AP6xxx/include/typedefs.h:98:#ifndef TARGETENV_android
AP6xxx/include/typedefs.h:101:#endif /* TARGETENV_android */
AP6xxx/bcmsdh_sdmmc.c:1457:	/* MSM7201A Android sdio stack has bug with interrupt
AP6xxx/dhd.h:257:	struct mutex 	wl_start_stop_lock; /* lock/unlock for Android start/stop */
AP6xxx/dhd.h:602:extern uint android_msg_level;
AP6xxx/Makefile:20:	bcmsdh_sdmmc.o dhd_custom_gpio.o sbutils.o wldev_common.o wl_android.o
atheros_6102/htc2/AR6000/ar6k.c:245:#ifdef ANDROID_ENV
atheros_6102/os/linux/ar6000_drv.c:85:#ifdef ANDROID_ENV
atheros_6102/os/linux/ar6000_drv.c:88: * variables for only Android case
atheros_6102/os/linux/ar6000_drv.c:94:#if defined(ANDROID_ENV) && defined(CONFIG_PM)
atheros_6102/os/linux/ar6000_drv.c:142:#else /* ! ANDROID_ENV */
atheros_6102/os/linux/ar6000_drv.c:144:#endif /* ANDROID_ENV */
atheros_6102/os/linux/ar6000_drv.c:192:#ifdef ANDROID_ENV
atheros_6102/os/linux/ar6000_drv.c:702:#define ANDROID_WOW_LIST_ID 1
atheros_6102/os/linux/ar6000_drv.c:730:        delWowCmd.filter_list_id = ANDROID_WOW_LIST_ID;
atheros_6102/os/linux/ar6000_drv.c:736:            addWowCmd.filter_list_id = ANDROID_WOW_LIST_ID;
atheros_6102/os/linux/ar6000_drv.c:964:#ifdef ANDROID_ENV
atheros_6102/os/linux/ar6000_drv.c:966:#if defined(ANDROID_ENV) && defined(FORCE_TCMD_MODE)
atheros_6102/os/linux/ar6000_drv.c:970:#if defined(ANDROID_ENV) && defined(FORCE_ART_MODE)
atheros_6102/os/linux/ar6000_drv.c:1029:#if defined(ANDROID_ENV) && defined(CONFIG_PM)
atheros_6102/os/linux/ar6000_drv.c:1071:#ifdef ANDROID_ENV
atheros_6102/os/linux/ar6000_drv.c:1082:#if defined(ANDROID_ENV) && defined(CONFIG_PM)
atheros_6102/os/linux/ar6000_drv.c:1136:#ifdef ANDROID_ENV
atheros_6102/os/linux/ar6000_drv.c:1367:#endif /* ANDROID_ENV */
atheros_6102/os/linux/ar6000_drv.c:1633:#elif defined(ANDROID_ENV)
atheros_6102/os/linux/ar6000_drv.c:1763:#ifdef ANDROID_ENV
atheros_6102/os/linux/ar6000_drv.c:1786:#endif /* ANDROID_ENV */
atheros_6102/os/linux/ar6000_drv.c:1866:#ifdef ANDROID_ENV
atheros_6102/os/linux/ar6000_drv.c:1869:#endif /* ANDROID_ENV */
atheros_6102/os/linux/ar6000_drv.c:3464:#if defined(ANDROID_ENV) && defined(CONFIG_PM)
atheros_6102/os/linux/ioctl.c:33:#ifdef ANDROID_ENV
atheros_6102/os/linux/ioctl.c:309:#ifdef ANDROID_ENV
atheros_6102/os/linux/ioctl.c:337:#ifdef ANDROID_ENV
atheros_6102/os/linux/ioctl.c:358:#ifdef ANDROID_ENV
atheros_6102/os/linux/ioctl.c:1609:#ifdef ANDROID_ENV
atheros_6102/os/linux/ioctl.c:1693:                // Without this, ART application can not run well on 8K Android
atheros_6102/os/linux/ioctl.c:1713:                // Without this, ART application can not run well on 8K Android
atheros_6102/os/linux/ioctl.c:2646:#ifndef ANDROID_ENV
atheros_6102/os/linux/ioctl.c:2648:#endif /* ! ANDROID_ENV */
atheros_6102/os/linux/eeprom.c:382:#ifdef ANDROID_ENV
atheros_6102/os/linux/eeprom.c:652:#endif /* ANDROID_ENV */
atheros_6102/os/linux/include/engine.h:29:#ifndef ANDROID_ENV
atheros_6102/os/linux/include/athtypes_linux.h:32:#ifdef ANDROID
atheros_6102/hif/sdio/linux_sdio/src/hif.c:36:#ifdef ANDROID_ENV
atheros_6102/hif/sdio/linux_sdio/src/hif.c:503:#ifdef ANDROID_ENV
atheros_6102/hif/sdio/linux_sdio/src/hif.c:512:#ifdef ANDROID_ENV
atheros_6102/hif/sdio/linux_sdio/src/hif.c:527:#ifdef ANDROID_ENV
atheros_6102/hif/sdio/linux_sdio/src/hif.c:537:#ifdef ANDROID_ENV
atheros_6102/Makefile:14:EXTRA_CFLAGS +=  -DANDROID_ENV \
atheros_6102/wlan/include/ieee80211_node.h:94:#ifdef ANDROID_ENV
atheros_6302/os/linux/ar6000_drv.c:366:    /* for android builds we call external APIs that handle firmware download and configuration */
atheros_6302/os/linux/ar6000_drv.c:367:#ifdef ANDROID_ENV
atheros_6302/os/linux/ar6000_drv.c:368:/* !!!! Interim android support to make it easier to patch the default driver for
atheros_6302/os/linux/ar6000_drv.c:369: * android use. You must define an external source file ar6000_android.c that handles the following
atheros_6302/os/linux/ar6000_drv.c:371:extern A_STATUS android_ar6k_start(AR_SOFTC_T *ar);
atheros_6302/os/linux/ar6000_drv.c:372:extern void android_module_init(OSDRV_CALLBACKS *osdrvCallbacks);
atheros_6302/os/linux/ar6000_drv.c:373:extern void android_module_exit(void);
atheros_6302/os/linux/ar6000_drv.c:739:#ifdef ANDROID_ENV
atheros_6302/os/linux/ar6000_drv.c:740:    android_module_init(&osdrvCallbacks);
atheros_6302/os/linux/ar6000_drv.c:798:#ifdef ANDROID_ENV    
atheros_6302/os/linux/ar6000_drv.c:799:    android_module_exit();
atheros_6302/os/linux/ar6000_drv.c:2825:#ifdef ANDROID_ENV
atheros_6302/os/linux/ar6000_drv.c:2826:    android_ar6k_start(ar);
atheros_6302/os/linux/ar6000_pm.c:53:#ifdef ANDROID_ENV
atheros_6302/os/linux/ar6000_pm.c:54:extern void android_ar6k_check_wow_status(AR_SOFTC_T *ar, struct sk_buff *skb, A_BOOL isEvent);
atheros_6302/os/linux/ar6000_pm.c:347:#ifdef ANDROID_ENV
atheros_6302/os/linux/ar6000_pm.c:348:        android_ar6k_check_wow_status(ar, skb, isEvent);
atheros_6302/os/linux/wireless_ext.c:2560:#ifdef ANDROID_ENV
atheros_6302/os/linux/wireless_ext.c:2591:#endif /* ANDROID_ENV */
atheros_6302/os/linux/eeprom.c:365:#ifdef ANDROID_ENV
atheros_6302/os/linux/ar6000_android.c:25:#define ATH_MODULE_NAME android
atheros_6302/os/linux/ar6000_android.c:39:static ATH_DEBUG_MASK_DESCRIPTION android_debug_desc[] = {
atheros_6302/os/linux/ar6000_android.c:42:ATH_DEBUG_INSTANTIATE_MODULE_VAR(android,
atheros_6302/os/linux/ar6000_android.c:43:                                 "android",
atheros_6302/os/linux/ar6000_android.c:44:                                 "Android Driver Interface",
atheros_6302/os/linux/ar6000_android.c:46:                                 ATH_DEBUG_DESCRIPTION_COUNT(android_debug_desc),
atheros_6302/os/linux/ar6000_android.c:47:                                 android_debug_desc);
atheros_6302/os/linux/ar6000_android.c:154:int android_logger_lv(void *module, int mask)
atheros_6302/os/linux/ar6000_android.c:182:static int android_readwrite_file(const A_CHAR *filename, A_CHAR *rbuf, const A_CHAR *wbuf, size_t length)
atheros_6302/os/linux/ar6000_android.c:238:int android_request_firmware(const struct firmware **firmware_p, const char *name,
atheros_6302/os/linux/ar6000_android.c:252:        if ( (ret=android_readwrite_file(filename, NULL, NULL, 0)) < 0) {
atheros_6302/os/linux/ar6000_android.c:269:        if ( (ret=android_readwrite_file(filename, (char*)firmware->data, NULL, length)) != length) {
atheros_6302/os/linux/ar6000_android.c:290:void android_release_firmware(const struct firmware *firmware)
atheros_6302/os/linux/ar6000_android.c:299:static A_STATUS ar6000_android_avail_ev(void *context, void *hif_handle)
atheros_6302/os/linux/ar6000_android.c:325:    if (android_readwrite_file("/sys/devices/platform/" MMC_MSM_DEV "/detect_change", 
atheros_6302/os/linux/ar6000_android.c:328:        android_readwrite_file("/sys/devices/platform/" MMC_MSM_DEV "/polling", NULL, buf, length);
atheros_6302/os/linux/ar6000_android.c:334:static void android_early_suspend(struct early_suspend *h)
atheros_6302/os/linux/ar6000_android.c:339:static void android_late_resume(struct early_suspend *h)
atheros_6302/os/linux/ar6000_android.c:345:void android_module_init(OSDRV_CALLBACKS *osdrvCallbacks)
atheros_6302/os/linux/ar6000_android.c:356:    ar6k_early_suspend.suspend = android_early_suspend;
atheros_6302/os/linux/ar6000_android.c:357:    ar6k_early_suspend.resume  = android_late_resume;
atheros_6302/os/linux/ar6000_android.c:363:    osdrvCallbacks->deviceInsertedHandler = ar6000_android_avail_ev;
atheros_6302/os/linux/ar6000_android.c:368:void android_module_exit(void)
atheros_6302/os/linux/ar6000_android.c:379:A_STATUS android_ar6k_start(AR_SOFTC_T *ar)
atheros_6302/os/linux/ar6000_android.c:392:void android_ar6k_check_wow_status(AR_SOFTC_T *ar, struct sk_buff *skb, A_BOOL isEvent)
atheros_6302/os/linux/ar6000_android.c:431:                android_readwrite_file("/sys/power/state", NULL, buf, len);
atheros_6302/os/linux/ar6000_android.c:434:                android_readwrite_file("/sys/class/leds/lcd-backlight/brightness",
atheros_6302/os/linux/include/osapi_linux.h:92:#if defined(ANDROID_ENV) && defined(CONFIG_ANDROID_LOGGER)
atheros_6302/os/linux/include/osapi_linux.h:94:extern int android_logger_lv(void* module, int mask);
atheros_6302/os/linux/include/osapi_linux.h:101:#define A_ANDROID_PRINTF(mask, module, tags, args...) do {  \
atheros_6302/os/linux/include/osapi_linux.h:103:        logger_write(LOG_MAIN_IDX, android_logger_lv(module, mask), tags, args); \
atheros_6302/os/linux/include/osapi_linux.h:110:    A_ANDROID_PRINTF(mask, &GET_ATH_MODULE_DEBUG_VAR_NAME(mod), "ar6k_" A_LOGGER_MODULE_NAME(mod), args);
atheros_6302/os/linux/include/osapi_linux.h:112:#define A_PRINTF(args...) A_ANDROID_PRINTF(ATH_DEBUG_INFO, NULL, "ar6k_driver", args)
atheros_6302/os/linux/include/osapi_linux.h:116:#endif /* ANDROID */
atheros_6302/os/linux/include/osapi_linux.h:222:#ifdef ANDROID_ENV
atheros_6302/os/linux/include/osapi_linux.h:225:int android_request_firmware(const struct firmware **firmware_p, const char *filename,
atheros_6302/os/linux/include/osapi_linux.h:227:void android_release_firmware(const struct firmware *firmware);
atheros_6302/os/linux/include/osapi_linux.h:228:#define A_REQUEST_FIRMWARE(_ppf, _pfile, _dev) android_request_firmware(_ppf, _pfile, _dev)
atheros_6302/os/linux/include/osapi_linux.h:229:#define A_RELEASE_FIRMWARE(_pf) android_release_firmware(_pf)
atheros_6302/os/linux/include/osapi_linux.h:384:#ifdef ANDROID
atheros_6302/os/linux/Makefile:55:ifeq ($(ATH_ANDROID_ENV),yes)
atheros_6302/os/linux/Makefile:56:    EXTRA_CFLAGS += -DANDROID_ENV -D__linux__ $(ATH_ANDROID_BUILD_FLAGS)
atheros_6302/os/linux/Makefile:161:ifeq ($(ATH_ANDROID_ENV),yes)
atheros_6302/os/linux/Makefile:162:   ar6000-objs += ar6000_android.o
atheros_6302/hif/sdio/linux_sdio/src/hif.c:620:#ifdef ANDROID_ENV 
atheros_6302/hif/sdio/linux_sdio/src/hif.c:624:#endif /* ANDROID_ENV */
atheros_6302/Makefile:51:    EXTRA_CFLAGS += -DANDROID_ENV -D__linux__
atheros_6302/Makefile:117:							os/linux/ar6000_android.o
bcm4329/bcmsdio/sys/bcmsdh_sdmmc.c:1284:	/* MSM7201A Android sdio stack has bug with interrupt
bcm4329/include/typedefs.h:82:#ifndef TARGETENV_android
bcm4329/Makefile_module:5:	-DBCMPLATFORM_BUS -DOEM_ANDROID -DEMBEDDED_PLATFORM -DARP_OFFLOAD_SUPPORT \
bcm4329/Makefile_module:51:KSRC := /home/michael/android2.3/m1-kernel-android
bcm4329/Makefile.dat:231:DFLAGS += -DOEM_ANDROID -DEMBEDDED_PLATFORM -DARP_OFFLOAD_SUPPORT -DPKT_FILTER_SUPPORT
bcm4329/Makefile.dat:276:ifeq ($(OEM_ANDROID),1)
bcm4329/Makefile.dat:277:DFLAGS += -DOEM_ANDROID -DEMBEDDED_PLATFORM -DARP_OFFLOAD_SUPPORT -DPKT_FILTER_SUPPORT
bcm4329/Makefile-bak:5:	-DBCMPLATFORM_BUS -DOEM_ANDROID -DEMBEDDED_PLATFORM -DARP_OFFLOAD_SUPPORT \
bcm4329/dhd/exe/GNUmakefile:52:ifneq ($(findstring $(TARGETENV), "linux linuxmips linuxmips_be linuxarm linuxarm_le linuxarm_omap android"),)
bcm4329/dhd/exe/dhdu_linux.c:33:#ifndef TARGETENV_android
bcm4329/dhd/exe/dhdu_linux.c:35:#endif /* TARGETENV_android */
bcm4329/dhd/linux/Makefile:231:DFLAGS += -DOEM_ANDROID -DEMBEDDED_PLATFORM -DARP_OFFLOAD_SUPPORT -DPKT_FILTER_SUPPORT
bcm4329/dhd/linux/Makefile:271:ifeq ($(OEM_ANDROID),1)
bcm4329/dhd/linux/Makefile:272:DFLAGS += -DOEM_ANDROID -DEMBEDDED_PLATFORM -DARP_OFFLOAD_SUPPORT -DPKT_FILTER_SUPPORT
bcm4329/Makefile:5:	-DBCMPLATFORM_BUS -DOEM_ANDROID -DEMBEDDED_PLATFORM -DARP_OFFLOAD_SUPPORT \
broadcm_40181/dhd_cfg80211.c:557:#endif /* OEM_ANDROID */
broadcm_40181/dhd_cfg80211.c:619:#endif /* OEM_ANDROID */
broadcm_40181/wl_cfg80211.c:61:#include <wl_android.h>
broadcm_40181/wl_cfg80211.c:3482:#endif /* (OEM_ANDROID) */
broadcm_40181/wl_cfg80211.c:3491:	/* android has special hooks to change pm when kernel suspended */
broadcm_40181/wl_cfg80211.c:6464:				/* WLAN_REASON_UNSPECIFIED is used for hang up event in Android */
broadcm_40181/wl_cfgp2p.c:48:#include <wl_android.h>
broadcm_40181/wl_cfgp2p.c:2322:	 * not Handle any IOCTL cmds on p2p0 other than ANDROID PRIVATE CMDs.
broadcm_40181/wl_cfgp2p.c:2323:	 * For Android PRIV CMD handling map it to primary I/F
broadcm_40181/wl_cfgp2p.c:2326:		ret = wl_android_priv_cmd(ndev, ifr, cmd);
broadcm_40181/wl_android.c:2: * Linux cfg80211 driver - Android related functions
broadcm_40181/wl_android.c:24: * $Id: wl_android.c 372668 2012-12-04 14:07:12Z $
broadcm_40181/wl_android.c:30:#include <wl_android.h>
broadcm_40181/wl_android.c:61:#define ANDROID_ERROR_LEVEL	0x0001
broadcm_40181/wl_android.c:62:#define ANDROID_TRACE_LEVEL	0x0002
broadcm_40181/wl_android.c:63:#define ANDROID_INFO_LEVEL	0x0004
broadcm_40181/wl_android.c:65:uint android_msg_level = ANDROID_ERROR_LEVEL;
broadcm_40181/wl_android.c:67:#define ANDROID_ERROR(x) \
broadcm_40181/wl_android.c:69:		if (android_msg_level & ANDROID_ERROR_LEVEL) { \
broadcm_40181/wl_android.c:70:			printk(KERN_ERR "ANDROID-ERROR) ");	\
broadcm_40181/wl_android.c:74:#define ANDROID_TRACE(x) \
broadcm_40181/wl_android.c:76:		if (android_msg_level & ANDROID_TRACE_LEVEL) { \
broadcm_40181/wl_android.c:77:			printk(KERN_ERR "ANDROID-TRACE) ");	\
broadcm_40181/wl_android.c:81:#define ANDROID_INFO(x) \
broadcm_40181/wl_android.c:83:		if (android_msg_level & ANDROID_INFO_LEVEL) { \
broadcm_40181/wl_android.c:84:			printk(KERN_ERR "ANDROID-INFO) ");	\
broadcm_40181/wl_android.c:90: * Android private command strings, PLEASE define new private commands here
broadcm_40181/wl_android.c:153:typedef struct android_wifi_priv_cmd {
broadcm_40181/wl_android.c:157:} android_wifi_priv_cmd;
broadcm_40181/wl_android.c:197: * wl_android_wifi_on
broadcm_40181/wl_android.c:204:static int wl_android_get_link_speed(struct net_device *net, char *command, int total_len)
broadcm_40181/wl_android.c:214:	/* Convert Kbps to Android Mbps */
broadcm_40181/wl_android.c:217:	ANDROID_INFO(("%s: command result is %s\n", __FUNCTION__, command));
broadcm_40181/wl_android.c:221:static int wl_android_get_rssi(struct net_device *net, char *command, int total_len)
broadcm_40181/wl_android.c:239:		ANDROID_ERROR(("%s: wldev_get_ssid failed\n", __FUNCTION__));
broadcm_40181/wl_android.c:245:	ANDROID_INFO(("%s: command result is %s (%d)\n", __FUNCTION__, command, bytes_written));
broadcm_40181/wl_android.c:249:static int wl_android_set_suspendopt(struct net_device *dev, char *command, int total_len)
broadcm_40181/wl_android.c:263:			ANDROID_INFO(("%s: Suspend Flag %d -> %d\n",
broadcm_40181/wl_android.c:266:			ANDROID_ERROR(("%s: failed %d\n", __FUNCTION__, ret));
broadcm_40181/wl_android.c:271:static int wl_android_set_suspendmode(struct net_device *dev, char *command, int total_len)
broadcm_40181/wl_android.c:284:		ANDROID_INFO(("%s: Suspend Mode %d\n",__FUNCTION__,suspend_flag));
broadcm_40181/wl_android.c:286:		ANDROID_ERROR(("%s: failed %d\n",__FUNCTION__,ret));
broadcm_40181/wl_android.c:291:static int wl_android_get_band(struct net_device *dev, char *command, int total_len)
broadcm_40181/wl_android.c:305:static int wl_android_set_pno_setup(struct net_device *dev, char *command, int total_len)
broadcm_40181/wl_android.c:338:	ANDROID_INFO(("%s: command=%s, len=%d\n", __FUNCTION__, command, total_len));
broadcm_40181/wl_android.c:341:		ANDROID_ERROR(("%s argument=%d less min size\n", __FUNCTION__, total_len));
broadcm_40181/wl_android.c:369:			ANDROID_ERROR(("SSID is not presented or corrupted ret=%d\n", nssid));
broadcm_40181/wl_android.c:373:				ANDROID_ERROR(("%s scan duration corrupted field size %d\n",
broadcm_40181/wl_android.c:379:			ANDROID_INFO(("%s: pno_time=%d\n", __FUNCTION__, pno_time));
broadcm_40181/wl_android.c:383:					ANDROID_ERROR(("%s pno repeat : corrupted field\n",
broadcm_40181/wl_android.c:389:				ANDROID_INFO(("%s :got pno_repeat=%d\n", __FUNCTION__, pno_repeat));
broadcm_40181/wl_android.c:391:					ANDROID_ERROR(("%s FREQ_EXPO_MAX corrupted field size\n",
broadcm_40181/wl_android.c:397:				ANDROID_INFO(("%s: pno_freq_expo_max=%d\n",
broadcm_40181/wl_android.c:402:		ANDROID_ERROR(("%s get wrong TLV command\n", __FUNCTION__));
broadcm_40181/wl_android.c:413:static int wl_android_get_p2p_dev_addr(struct net_device *ndev, char *command, int total_len)
broadcm_40181/wl_android.c:426: * Global function definitions (declared in wl_android.h)
broadcm_40181/wl_android.c:429:int wl_android_wifi_on(struct net_device *dev)
broadcm_40181/wl_android.c:436:		ANDROID_ERROR(("%s: dev is null\n", __FUNCTION__));
broadcm_40181/wl_android.c:447:			ANDROID_ERROR(("\nfailed to power up wifi chip, retry again (%d left) **\n\n",
broadcm_40181/wl_android.c:452:			ANDROID_ERROR(("\nfailed to power up wifi chip, max retry reached **\n\n"));
broadcm_40181/wl_android.c:473:int wl_android_wifi_off(struct net_device *dev)
broadcm_40181/wl_android.c:479:		ANDROID_TRACE(("%s: dev is null\n", __FUNCTION__));
broadcm_40181/wl_android.c:498:static int wl_android_set_fwpath(struct net_device *net, char *command, int total_len)
broadcm_40181/wl_android.c:505:		ANDROID_INFO(("GOT APSTA FIRMWARE\n"));
broadcm_40181/wl_android.c:508:		ANDROID_INFO(("GOT STA FIRMWARE\n"));
broadcm_40181/wl_android.c:515:wl_android_set_pmk(struct net_device *dev, char *command, int total_len)
broadcm_40181/wl_android.c:528:		ANDROID_ERROR(("Failed to set PMK for OKC, error = %d\n", error));
broadcm_40181/wl_android.c:531:	ANDROID_ERROR(("PMK is "));
broadcm_40181/wl_android.c:533:		ANDROID_ERROR(("%02X ", pmk[i]));
broadcm_40181/wl_android.c:535:	ANDROID_ERROR(("\n"));
broadcm_40181/wl_android.c:541:wl_android_okc_enable(struct net_device *dev, char *command, int total_len)
broadcm_40181/wl_android.c:549:		ANDROID_ERROR(("Failed to %s OKC, error = %d\n",
broadcm_40181/wl_android.c:556:int wl_android_set_roam_mode(struct net_device *dev, char *command, int total_len)
broadcm_40181/wl_android.c:562:		ANDROID_ERROR(("%s: Failed to get Parameter\n", __FUNCTION__));
broadcm_40181/wl_android.c:568:		ANDROID_ERROR(("%s: Failed to set roaming Mode %d, error = %d\n",
broadcm_40181/wl_android.c:573:		ANDROID_ERROR(("%s: succeeded to set roaming Mode %d, error = %d\n",
broadcm_40181/wl_android.c:578:int wl_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd)
broadcm_40181/wl_android.c:584:	android_wifi_priv_cmd priv_cmd;
broadcm_40181/wl_android.c:592:	if (copy_from_user(&priv_cmd, ifr->ifr_data, sizeof(android_wifi_priv_cmd))) {
broadcm_40181/wl_android.c:598:		ANDROID_ERROR(("%s: too long priavte command\n", __FUNCTION__));
broadcm_40181/wl_android.c:604:		ANDROID_ERROR(("%s: failed to allocate memory\n", __FUNCTION__));
broadcm_40181/wl_android.c:613:	ANDROID_INFO(("%s: Android private cmd \"%s\" on %s\n", __FUNCTION__, command, ifr->ifr_name));
broadcm_40181/wl_android.c:616:		ANDROID_INFO(("%s, Received regular START command\n", __FUNCTION__));
broadcm_40181/wl_android.c:617:		bytes_written = wl_android_wifi_on(net);
broadcm_40181/wl_android.c:620:		bytes_written = wl_android_set_fwpath(net, command, priv_cmd.total_len);
broadcm_40181/wl_android.c:624:		ANDROID_ERROR(("%s: Ignore private cmd \"%s\" - iface %s is down\n",
broadcm_40181/wl_android.c:631:		bytes_written = wl_android_wifi_off(net);
broadcm_40181/wl_android.c:640:		bytes_written = wl_android_get_rssi(net, command, priv_cmd.total_len);
broadcm_40181/wl_android.c:643:		bytes_written = wl_android_get_link_speed(net, command, priv_cmd.total_len);
broadcm_40181/wl_android.c:682:		bytes_written = wl_android_set_suspendopt(net, command, priv_cmd.total_len);
broadcm_40181/wl_android.c:685:		bytes_written = wl_android_set_suspendmode(net, command, priv_cmd.total_len);
broadcm_40181/wl_android.c:701:		bytes_written = wl_android_get_band(net, command, priv_cmd.total_len);
broadcm_40181/wl_android.c:715:		bytes_written = wl_android_set_pno_setup(net, command, priv_cmd.total_len);
broadcm_40181/wl_android.c:723:		bytes_written = wl_android_get_p2p_dev_addr(net, command, priv_cmd.total_len);
broadcm_40181/wl_android.c:749:		bytes_written = wl_android_set_pmk(net, command, priv_cmd.total_len);
broadcm_40181/wl_android.c:751:		bytes_written = wl_android_okc_enable(net, command, priv_cmd.total_len);
broadcm_40181/wl_android.c:753:		bytes_written = wl_android_set_roam_mode(net, command, priv_cmd.total_len);
broadcm_40181/wl_android.c:755:		ANDROID_ERROR(("Unknown PRIVATE command %s - ignored\n", command));
broadcm_40181/wl_android.c:764:			ANDROID_ERROR(("%s: bytes_written = %d\n", __FUNCTION__, bytes_written));
broadcm_40181/wl_android.c:771:			ANDROID_ERROR(("%s: failed to copy data to user buffer\n", __FUNCTION__));
broadcm_40181/wl_android.c:788:int wl_android_init(void)
broadcm_40181/wl_android.c:803:int wl_android_exit(void)
broadcm_40181/wl_android.c:810:void wl_android_post_init(void)
broadcm_40181/wl_android.c:830:		ANDROID_INFO(("%s: Free %d with BSSID %pM\n",
broadcm_40181/wl_android.c:864:			ANDROID_INFO(("%s: Del %d with BSSID %pM\n",
broadcm_40181/wl_android.c:915:			ANDROID_INFO(("%s: Update %d with BSSID %pM, RSSI=%d\n",
broadcm_40181/wl_android.c:949:				ANDROID_INFO(("%s: Update %d with BSSID %pM, RSSI=%d, SSID \"%s\"\n",
broadcm_40181/wl_android.c:967:			ANDROID_ERROR(("%s: Memory alloc failure %d\n",
broadcm_40181/wl_android.c:971:		ANDROID_INFO(("%s: Add %d with cached BSSID %pM, RSSI=%d, SSID \"%s\" in the leaf\n",
broadcm_40181/wl_android.c:1011:		ANDROID_ERROR(("%s: BSSID %pM does not in RSSI cache\n",
broadcm_40181/wl_android.c:1052:	ANDROID_TRACE(("%s called\n", __FUNCTION__));
broadcm_40181/wl_android.c:1058:		ANDROID_TRACE(("%s: Free %d with BSSID %pM\n",
broadcm_40181/wl_android.c:1087:			ANDROID_TRACE(("%s: Del %d with BSSID %pM, RSSI=%d, SSID \"%s\"\n",
broadcm_40181/wl_android.c:1141:					ANDROID_ERROR(("%s: Memory alloc failure %d and keep old BSS info\n",
broadcm_40181/wl_android.c:1151:				ANDROID_TRACE(("%s: Update %d with BSSID %pM, RSSI=%d, SSID \"%s\"\n",
broadcm_40181/wl_android.c:1173:			ANDROID_ERROR(("%s: Memory alloc failure %d\n", __FUNCTION__,
broadcm_40181/wl_android.c:1177:		ANDROID_TRACE(("%s: Add %d with cached BSSID %pM, RSSI=%d, SSID \"%s\" in the leaf\n",
broadcm_40181/wl_android.c:1205:			ANDROID_TRACE(("%s: timer starts\n", __FUNCTION__));
broadcm_40181/wl_android.c:1208:			ANDROID_TRACE(("%s: timer stops\n", __FUNCTION__));
broadcm_40181/wl_android.c:1219:	ANDROID_TRACE(("%s called\n", __FUNCTION__));
broadcm_40181/wl_android.c:1225:	ANDROID_TRACE(("%s:\n", __FUNCTION__));
broadcm_40181/wl_android.c:1236:	ANDROID_TRACE(("%s:\n", __FUNCTION__));
broadcm_40181/wl_android.c:1241:		ANDROID_ERROR(("%s: Memory alloc failure\n", __FUNCTION__ ));
broadcm_40181/wl_android.c:1251: * Functions for Android WiFi card detection
broadcm_40181/wl_android.c:1263:int wl_android_wifictrl_func_add(void)
broadcm_40181/wl_android.c:1270:		ANDROID_ERROR(("%s: platform_driver_register failed\n", __FUNCTION__));
broadcm_40181/wl_android.c:1278:		ANDROID_ERROR(("%s: platform_driver_register timeout\n", __FUNCTION__));
broadcm_40181/wl_android.c:1284:void wl_android_wifictrl_func_del(void)
broadcm_40181/wl_android.c:1293:void* wl_android_prealloc(int section, unsigned long size)
broadcm_40181/wl_android.c:1299:			ANDROID_INFO(("success alloc section %d\n", section));
broadcm_40181/wl_android.c:1306:	ANDROID_ERROR(("can't alloc section %d\n", section));
broadcm_40181/wl_android.c:1325:	ANDROID_ERROR(("%s = %d\n", __FUNCTION__, on));
broadcm_40181/wl_android.c:1337:	ANDROID_ERROR(("%s\n", __FUNCTION__));
broadcm_40181/wl_android.c:1350:	ANDROID_TRACE(("%s\n", __FUNCTION__));
broadcm_40181/wl_android.c:1362:	ANDROID_ERROR(("%s = %d\n", __FUNCTION__, on));
broadcm_40181/wl_android.c:1391:	ANDROID_ERROR(("## %s\n", __FUNCTION__));
broadcm_40181/wl_android.c:1403:	ANDROID_TRACE(("##> %s\n", __FUNCTION__));
broadcm_40181/wl_android.c:1416:	ANDROID_TRACE(("##> %s\n", __FUNCTION__));
broadcm_40181/wl_android.c:1447:	ANDROID_TRACE(("## Calling platform_driver_register\n"));
broadcm_40181/wl_android.c:1458:	ANDROID_TRACE(("## Unregister platform_driver_register\n"));
broadcm_40181/dhd_linux.c:118:#include <wl_android.h>
broadcm_40181/dhd_linux.c:368:module_param(android_msg_level, int, 0);
broadcm_40181/dhd_linux.c:2389:		ret = wl_android_priv_cmd(net, ifr, cmd);
broadcm_40181/dhd_linux.c:2645:			wl_android_wifi_off(net);
broadcm_40181/dhd_linux.c:2717:			ret = wl_android_wifi_on(net);
broadcm_40181/dhd_linux.c:2738:		/* dhd_prot_init has been called in dhd_bus_start or wl_android_wifi_on */
broadcm_40181/dhd_linux.c:3324:/* From Android JerryBean release, the concurrent mode is enabled by default and the firmware
broadcm_40181/dhd_linux.c:4065:		 * Android sets the locally administered bit to indicate that this is a
broadcm_40181/dhd_linux.c:4137:			 * In case of Android cfg80211 driver, the bus is down in dhd_stop,
broadcm_40181/dhd_linux.c:4353:	wl_android_wifictrl_func_del();
broadcm_40181/dhd_linux.c:4355:	wl_android_exit();
broadcm_40181/dhd_linux.c:4377:	wl_android_init();
broadcm_40181/dhd_linux.c:4401:		if (wl_android_wifictrl_func_add() < 0) {
broadcm_40181/dhd_linux.c:4416:		wl_android_wifictrl_func_del();
broadcm_40181/dhd_linux.c:4428:	if (wl_android_wifictrl_func_add() < 0)
broadcm_40181/dhd_linux.c:4463:	wl_android_post_init();
broadcm_40181/dhd_linux.c:4477:	wl_android_wifictrl_func_del();
broadcm_40181/dhd_linux.c:4726:	return (uint8*)wl_android_prealloc(section, size);
broadcm_40181/dhd_linux.c:5164:#endif /* (OEM_ANDROID) */
broadcm_40181/wl_android.h:2: * Linux cfg80211 driver - Android related functions
broadcm_40181/wl_android.h:24: * $Id: wl_android.h 367273 2012-11-07 09:58:55Z $
broadcm_40181/wl_android.h:36: * Android platform dependent functions, feel free to add Android specific functions here
broadcm_40181/wl_android.h:38: * or cfg, define them as static in wl_android.c
broadcm_40181/wl_android.h:42: * wl_android_init will be called from module init function (dhd_module_init now), similarly
broadcm_40181/wl_android.h:43: * wl_android_exit will be called from module exit function (dhd_module_cleanup now)
broadcm_40181/wl_android.h:45:int wl_android_init(void);
broadcm_40181/wl_android.h:46:int wl_android_exit(void);
broadcm_40181/wl_android.h:47:void wl_android_post_init(void);
broadcm_40181/wl_android.h:48:int wl_android_wifi_on(struct net_device *dev);
broadcm_40181/wl_android.h:49:int wl_android_wifi_off(struct net_device *dev);
broadcm_40181/wl_android.h:50:int wl_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd);
broadcm_40181/wl_android.h:119:int wl_android_wifictrl_func_add(void);
broadcm_40181/wl_android.h:120:void wl_android_wifictrl_func_del(void);
broadcm_40181/wl_android.h:121:void* wl_android_prealloc(int section, unsigned long size);
broadcm_40181/dhd_common.c:314:		printk("android_msg_level=0x%x\n", android_msg_level);
broadcm_40181/dhd_common.c:340:			android_msg_level = int_val;
broadcm_40181/dhd_common.c:341:			printk("android_msg_level=0x%x\n", android_msg_level);
broadcm_40181/dhd_common.c:1924:#endif /* OEM_ANDROID && PNO_SUPPORT */
broadcm_40181/dhd_common.c:1967:/* Android ComboSCAN support */
broadcm_40181/wl_cfg80211.h:856:#endif /* OEM_ANDROID */
broadcm_40181/include/typedefs.h:98:#ifndef TARGETENV_android
broadcm_40181/include/typedefs.h:101:#endif /* TARGETENV_android */
broadcm_40181/bcmsdh_sdmmc.c:1457:	/* MSM7201A Android sdio stack has bug with interrupt
broadcm_40181/dhd.h:257:	struct mutex 	wl_start_stop_lock; /* lock/unlock for Android start/stop */
broadcm_40181/dhd.h:600:extern uint android_msg_level;
broadcm_40181/Makefile:20:	bcmsdh_sdmmc.o dhd_custom_gpio.o sbutils.o wldev_common.o wl_android.o
broadcm_4329/dhd_common.c:1730:/* Android ComboSCAN support */
broadcm_4329/include/dhd.h:164:	struct mutex 	wl_start_stop_lock; /* lock/unlock for Android start/stop */
broadcm_4329/include/typedefs.h:82:#ifndef TARGETENV_android
broadcm_4329/bcmsdh_sdmmc.c:1283:	/* MSM7201A Android sdio stack has bug with interrupt
broadcm_4329/Makefile:5:	-DBCMPLATFORM_BUS -DOEM_ANDROID -DEMBEDDED_PLATFORM -DARP_OFFLOAD_SUPPORT \
broadcm_4329_new/Makerules.env:48:# TARGETENV is one of freebsd, sun4, linux, linuxarm, linuxmips, android, cygwin32, win32, or macos
broadcm_4329_new/Makerules.env:62:ifneq ($(findstring "$(TARGETENV)", "freebsd" "linux" "linuxarm" "linuxarm_le" "android" "linuxarm_omap" "linuxmips" "sun4" "cygwin32" "win32" "macos"), )
broadcm_4329_new/Makerules.env:85:    ifneq ($(findstring "$(TARGETENV)", "android"), )
broadcm_4329_new/Makerules.env:86:	TARGETARCH = arm_android
broadcm_4329_new/Makerules:81:	ifeq ($(TARGETARCH), arm_android)
broadcm_4329_new/Makerules:132:	ifeq ($(TARGETENV), android)
broadcm_4329_new/Makerules:168:	ifeq ($(TARGETENV), android)
broadcm_4329_new/include/dhd.h:174:	struct mutex 	wl_start_stop_lock; /* lock/unlock for Android start/stop */
broadcm_4329_new/include/typedefs.h:82:#ifndef TARGETENV_android
broadcm_4329_new/bcmsdh_sdmmc.c:1284:	/* MSM7201A Android sdio stack has bug with interrupt
broadcm_4329_new/dhd.h:177:	struct mutex 	wl_start_stop_lock; /* lock/unlock for Android start/stop */
broadcm_4329_new/dhdu_linux.c:33:#ifndef TARGETENV_android
broadcm_4329_new/dhdu_linux.c:35:#endif /* TARGETENV_android */
broadcm_4329_new/Makefile:6:	-DBCMPLATFORM_BUS -DOEM_ANDROID -DEMBEDDED_PLATFORM  \
broadcm_4330/wl_cfg80211.c:62:#include <wl_android.h>
broadcm_4330/wl_cfgp2p.c:47:#include <wl_android.h>
broadcm_4330/wl_cfgp2p.c:1908:	 * not Handle any IOCTL cmds on p2p0 other than ANDROID PRIVATE CMDs.
broadcm_4330/wl_cfgp2p.c:1909:	 * For Android PRIV CMD handling map it to primary I/F
broadcm_4330/wl_cfgp2p.c:1912:		ret = wl_android_priv_cmd(ndev, ifr, cmd);
broadcm_4330/wl_android.c:2: * Linux cfg80211 driver - Android related functions
broadcm_4330/wl_android.c:24: * $Id: wl_android.c,v 1.1.4.1.2.14 2011/02/09 01:40:07 Exp $
broadcm_4330/wl_android.c:30:#include <wl_android.h>
broadcm_4330/wl_android.c:52:#define ANDROID_ERROR_LEVEL	0x0001
broadcm_4330/wl_android.c:53:#define ANDROID_TRACE_LEVEL	0x0002
broadcm_4330/wl_android.c:54:#define ANDROID_INFO_LEVEL	0x0004
broadcm_4330/wl_android.c:56:uint android_msg_level = ANDROID_ERROR_LEVEL;
broadcm_4330/wl_android.c:58:#define ANDROID_ERR(x) \
broadcm_4330/wl_android.c:60:		if (android_msg_level & ANDROID_ERROR_LEVEL) { \
broadcm_4330/wl_android.c:61:			printk(KERN_ERR "ANDROID-ERROR) ");	\
broadcm_4330/wl_android.c:65:#define ANDROID_TRACE(x) \
broadcm_4330/wl_android.c:67:		if (android_msg_level & ANDROID_TRACE_LEVEL) { \
broadcm_4330/wl_android.c:68:			printk(KERN_ERR "ANDROID-ERROR) ");	\
broadcm_4330/wl_android.c:72:#define ANDROID_INFO(x) \
broadcm_4330/wl_android.c:74:		if (android_msg_level & ANDROID_INFO_LEVEL) { \
broadcm_4330/wl_android.c:75:			printk(KERN_ERR "ANDROID-ERROR) : ");	\
broadcm_4330/wl_android.c:81: * Android private command strings, PLEASE define new private commands here
broadcm_4330/wl_android.c:132:typedef struct android_wifi_priv_cmd {
broadcm_4330/wl_android.c:136:} android_wifi_priv_cmd;
broadcm_4330/wl_android.c:169: * wl_android_wifi_on
broadcm_4330/wl_android.c:176:static int wl_android_get_link_speed(struct net_device *net, char *command, int total_len)
broadcm_4330/wl_android.c:186:	/* Convert Kbps to Android Mbps */
broadcm_4330/wl_android.c:189:	ANDROID_INFO(("%s: command result is %s\n", __FUNCTION__, command));
broadcm_4330/wl_android.c:193:static int wl_android_get_rssi(struct net_device *net, char *command, int total_len)
broadcm_4330/wl_android.c:211:		ANDROID_ERR(("%s: wldev_get_ssid failed\n", __FUNCTION__));
broadcm_4330/wl_android.c:217:	ANDROID_INFO(("%s: command result is %s (%d)\n", __FUNCTION__, command, bytes_written));
broadcm_4330/wl_android.c:221:static int wl_android_set_suspendopt(struct net_device *dev, char *command, int total_len)
broadcm_4330/wl_android.c:235:			ANDROID_INFO(("%s: Suspend Flag %d -> %d\n",
broadcm_4330/wl_android.c:238:			ANDROID_ERR(("%s: failed %d\n", __FUNCTION__, ret));
broadcm_4330/wl_android.c:243:static int wl_android_get_band(struct net_device *dev, char *command, int total_len)
broadcm_4330/wl_android.c:257:static int wl_android_set_pno_setup(struct net_device *dev, char *command, int total_len)
broadcm_4330/wl_android.c:290:	ANDROID_INFO(("%s: command=%s, len=%d\n", __FUNCTION__, command, total_len));
broadcm_4330/wl_android.c:293:		ANDROID_ERR(("%s argument=%d less min size\n", __FUNCTION__, total_len));
broadcm_4330/wl_android.c:321:			ANDROID_ERR(("SSID is not presented or corrupted ret=%d\n", nssid));
broadcm_4330/wl_android.c:325:				ANDROID_ERR(("%s scan duration corrupted field size %d\n",
broadcm_4330/wl_android.c:331:			ANDROID_INFO(("%s: pno_time=%d\n", __FUNCTION__, pno_time));
broadcm_4330/wl_android.c:335:					ANDROID_ERR(("%s pno repeat : corrupted field\n",
broadcm_4330/wl_android.c:341:				ANDROID_INFO(("%s :got pno_repeat=%d\n", __FUNCTION__, pno_repeat));
broadcm_4330/wl_android.c:343:					ANDROID_ERR(("%s FREQ_EXPO_MAX corrupted field size\n",
broadcm_4330/wl_android.c:349:				ANDROID_INFO(("%s: pno_freq_expo_max=%d\n",
broadcm_4330/wl_android.c:354:		ANDROID_ERR(("%s get wrong TLV command\n", __FUNCTION__));
broadcm_4330/wl_android.c:365:static int wl_android_get_p2p_dev_addr(struct net_device *ndev, char *command, int total_len)
broadcm_4330/wl_android.c:378: * Global function definitions (declared in wl_android.h)
broadcm_4330/wl_android.c:381:int wl_android_wifi_on(struct net_device *dev)
broadcm_4330/wl_android.c:387:		ANDROID_ERR(("%s: dev is null\n", __FUNCTION__));
broadcm_4330/wl_android.c:406:int wl_android_wifi_off(struct net_device *dev)
broadcm_4330/wl_android.c:412:		ANDROID_TRACE(("%s: dev is null\n", __FUNCTION__));
broadcm_4330/wl_android.c:428:static int wl_android_set_fwpath(struct net_device *net, char *command, int total_len)
broadcm_4330/wl_android.c:435:		ANDROID_INFO(("GOT APSTA FIRMWARE\n"));
broadcm_4330/wl_android.c:438:		ANDROID_INFO(("GOT STA FIRMWARE\n"));
broadcm_4330/wl_android.c:444:int wl_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd)
broadcm_4330/wl_android.c:449:	android_wifi_priv_cmd priv_cmd;
broadcm_4330/wl_android.c:457:	if (copy_from_user(&priv_cmd, ifr->ifr_data, sizeof(android_wifi_priv_cmd))) {
broadcm_4330/wl_android.c:464:		ANDROID_ERR(("%s: failed to allocate memory\n", __FUNCTION__));
broadcm_4330/wl_android.c:473:	ANDROID_INFO(("%s: Android private cmd \"%s\" on %s\n", __FUNCTION__, command, ifr->ifr_name));
broadcm_4330/wl_android.c:476:		ANDROID_INFO(("%s, Received regular START command\n", __FUNCTION__));
broadcm_4330/wl_android.c:477:		bytes_written = wl_android_wifi_on(net);
broadcm_4330/wl_android.c:480:		bytes_written = wl_android_set_fwpath(net, command, priv_cmd.total_len);
broadcm_4330/wl_android.c:484:		ANDROID_ERR(("%s: Ignore private cmd \"%s\" - iface %s is down\n",
broadcm_4330/wl_android.c:491:		bytes_written = wl_android_wifi_off(net);
broadcm_4330/wl_android.c:500:		bytes_written = wl_android_get_rssi(net, command, priv_cmd.total_len);
broadcm_4330/wl_android.c:503:		bytes_written = wl_android_get_link_speed(net, command, priv_cmd.total_len);
broadcm_4330/wl_android.c:537:		bytes_written = wl_android_set_suspendopt(net, command, priv_cmd.total_len);
broadcm_4330/wl_android.c:544:		bytes_written = wl_android_get_band(net, command, priv_cmd.total_len);
broadcm_4330/wl_android.c:555:		bytes_written = wl_android_set_pno_setup(net, command, priv_cmd.total_len);
broadcm_4330/wl_android.c:563:		bytes_written = wl_android_get_p2p_dev_addr(net, command, priv_cmd.total_len);
broadcm_4330/wl_android.c:584:		ANDROID_ERR(("Unknown PRIVATE command %s - ignored\n", command));
broadcm_4330/wl_android.c:593:			ANDROID_ERR(("%s: bytes_written = %d\n", __FUNCTION__, bytes_written));
broadcm_4330/wl_android.c:600:			ANDROID_ERR(("%s: failed to copy data to user buffer\n", __FUNCTION__));
broadcm_4330/wl_android.c:617:int wl_android_init(void)
broadcm_4330/wl_android.c:632:int wl_android_exit(void)
broadcm_4330/wl_android.c:639:void wl_android_post_init(void)
broadcm_4330/wl_android.c:659://		ANDROID_ERR(("%s : Free %d with BSSID %pM\n",
broadcm_4330/wl_android.c:693:			ANDROID_TRACE(("%s : Del %d with BSSID %pM\n",
broadcm_4330/wl_android.c:720://		ANDROID_ERR(("%s : Reset BSSID %pM, dirty=%d\n",
broadcm_4330/wl_android.c:746://				ANDROID_TRACE(("%s : Update %d with BSSID %pM, RSSI=%d, SSID \"%s\"\n",
broadcm_4330/wl_android.c:764:			ANDROID_ERR(("%s : Memory alloc failure %d\n",
broadcm_4330/wl_android.c:768://		ANDROID_TRACE(("%s: Add %d with cached BSSID %pM, RSSI=%d, SSID \"%s\" in the leaf\n",
broadcm_4330/wl_android.c:808:		ANDROID_ERR(("%s: BSSID %pM does not in RSSI cache\n",
broadcm_4330/wl_android.c:849:	ANDROID_TRACE(("%s called\n", __FUNCTION__));
broadcm_4330/wl_android.c:855:		ANDROID_TRACE(("%s : Free %d with BSSID %pM\n",
broadcm_4330/wl_android.c:884:			ANDROID_TRACE(("%s : Del %d with BSSID %pM, RSSI=%d, SSID \"%s\"\n",
broadcm_4330/wl_android.c:939:					ANDROID_ERR(("%s: Memory alloc failure %d and keep old BSS info\n",
broadcm_4330/wl_android.c:950:				ANDROID_TRACE(("%s : Update %d with BSSID %pM, RSSI=%d, SSID \"%s\"\n",
broadcm_4330/wl_android.c:972:			ANDROID_ERR(("%s: Memory alloc failure %d\n", __FUNCTION__,
broadcm_4330/wl_android.c:976:		ANDROID_TRACE(("%s: Add %d with cached BSSID %pM, RSSI=%d, SSID \"%s\" in the leaf\n",
broadcm_4330/wl_android.c:1004:			ANDROID_TRACE(("%s : timer starts\n", __FUNCTION__));
broadcm_4330/wl_android.c:1007:			ANDROID_TRACE(("%s : timer stops\n", __FUNCTION__));
broadcm_4330/wl_android.c:1018:	ANDROID_TRACE(("%s called\n", __FUNCTION__));
broadcm_4330/wl_android.c:1024:	ANDROID_TRACE(("%s :\n", __FUNCTION__));
broadcm_4330/wl_android.c:1035:	ANDROID_TRACE(("%s :\n", __FUNCTION__));
broadcm_4330/wl_android.c:1040:		ANDROID_ERR(("%s: Memory alloc failure\n", __FUNCTION__ ));
broadcm_4330/wl_android.c:1050: * Functions for Android WiFi card detection
broadcm_4330/wl_android.c:1062:int wl_android_wifictrl_func_add(void)
broadcm_4330/wl_android.c:1069:		ANDROID_ERR(("%s: platform_driver_register failed\n", __FUNCTION__));
broadcm_4330/wl_android.c:1077:		ANDROID_ERR(("%s: platform_driver_register timeout\n", __FUNCTION__));
broadcm_4330/wl_android.c:1083:void wl_android_wifictrl_func_del(void)
broadcm_4330/wl_android.c:1092:void* wl_android_prealloc(int section, unsigned long size)
broadcm_4330/wl_android.c:1098:			ANDROID_INFO(("success alloc section %d\n", section));
broadcm_4330/wl_android.c:1105:	ANDROID_ERR(("can't alloc section %d\n", section));
broadcm_4330/wl_android.c:1124:	ANDROID_ERR(("%s = %d\n", __FUNCTION__, on));
broadcm_4330/wl_android.c:1136:	ANDROID_ERR(("%s\n", __FUNCTION__));
broadcm_4330/wl_android.c:1149:	ANDROID_TRACE(("%s\n", __FUNCTION__));
broadcm_4330/wl_android.c:1161:	ANDROID_ERR(("%s = %d\n", __FUNCTION__, on));
broadcm_4330/wl_android.c:1173:	ANDROID_ERR(("## %s\n", __FUNCTION__));
broadcm_4330/wl_android.c:1192:	ANDROID_ERR(("## %s\n", __FUNCTION__));
broadcm_4330/wl_android.c:1204:	ANDROID_TRACE(("##> %s\n", __FUNCTION__));
broadcm_4330/wl_android.c:1213:	ANDROID_TRACE(("##> %s\n", __FUNCTION__));
broadcm_4330/wl_android.c:1243:	ANDROID_TRACE(("## Calling platform_driver_register\n"));
broadcm_4330/wl_android.c:1251:	ANDROID_TRACE(("## Unregister platform_driver_register\n"));
broadcm_4330/dhd_linux.c:109:#include <wl_android.h>
broadcm_4330/dhd_linux.c:306:module_param(android_msg_level, int, 0);
broadcm_4330/dhd_linux.c:2074:		ret = wl_android_priv_cmd(net, ifr, cmd);
broadcm_4330/dhd_linux.c:2309:		wl_android_wifi_off(net);
broadcm_4330/dhd_linux.c:2369:			ret = wl_android_wifi_on(net);
broadcm_4330/dhd_linux.c:2371:				DHD_ERROR(("wl_android_wifi_on failed (%d)\n", ret));
broadcm_4330/dhd_linux.c:2388:		/* dhd_prot_init has been called in dhd_bus_start or wl_android_wifi_on */
broadcm_4330/dhd_linux.c:2891:/* For Android ICS MR2 release, the concurrent mode is enabled by default and the firmware
broadcm_4330/dhd_linux.c:3477:		 * Android sets the locally administered bit to indicate that this is a
broadcm_4330/dhd_linux.c:3550:			 * In case of Android cfg80211 driver, the bus is down in dhd_stop,
broadcm_4330/dhd_linux.c:3730:	wl_android_wifictrl_func_del();
broadcm_4330/dhd_linux.c:3732:	wl_android_exit();
broadcm_4330/dhd_linux.c:3764:	wl_android_init();
broadcm_4330/dhd_linux.c:3788:	if (wl_android_wifictrl_func_add() < 0)
broadcm_4330/dhd_linux.c:3817://	wl_android_post_init();
broadcm_4330/dhd_linux.c:3829:	wl_android_wifictrl_func_del();
broadcm_4330/dhd_linux.c:4100:	return (uint8*)wl_android_prealloc(section, size);
broadcm_4330/wl_android.h:2: * Linux cfg80211 driver - Android related functions
broadcm_4330/wl_android.h:24: * $Id: wl_android.c,v 1.1.4.1.2.14 2011/02/09 01:40:07 Exp $
broadcm_4330/wl_android.h:32: * Android platform dependent functions, feel free to add Android specific functions here
broadcm_4330/wl_android.h:34: * or cfg, define them as static in wl_android.c
broadcm_4330/wl_android.h:38: * wl_android_init will be called from module init function (dhd_module_init now), similarly
broadcm_4330/wl_android.h:39: * wl_android_exit will be called from module exit function (dhd_module_cleanup now)
broadcm_4330/wl_android.h:41:int wl_android_init(void);
broadcm_4330/wl_android.h:42:int wl_android_exit(void);
broadcm_4330/wl_android.h:43:void wl_android_post_init(void);
broadcm_4330/wl_android.h:44:int wl_android_wifi_on(struct net_device *dev);
broadcm_4330/wl_android.h:45:int wl_android_wifi_off(struct net_device *dev);
broadcm_4330/wl_android.h:46:int wl_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd);
broadcm_4330/wl_android.h:113:int wl_android_wifictrl_func_add(void);
broadcm_4330/wl_android.h:114:void wl_android_wifictrl_func_del(void);
broadcm_4330/wl_android.h:115:void* wl_android_prealloc(int section, unsigned long size);
broadcm_4330/dhd_sdio.c:5250:extern void wl_android_post_init(void);
broadcm_4330/dhd_sdio.c:5432:	wl_android_post_init(); // terence 20120530: fix for preinit function missed called after resume
broadcm_4330/dhd_common.c:350:		android_msg_level = int_val;
broadcm_4330/dhd_common.c:2079:/* Android ComboSCAN support */
broadcm_4330/include/typedefs.h:78:#ifndef TARGETENV_android
broadcm_4330/bcmsdh_sdmmc.c:687:	/* Needed for Android Linux Kernel 2.6.35 */
broadcm_4330/bcmsdh_sdmmc.c:689:#endif /* OEM_ANDROID */
broadcm_4330/bcmsdh_sdmmc.c:1300:	/* MSM7201A Android sdio stack has bug with interrupt
broadcm_4330/wl_iw.c:49:#include <wl_android.h>
broadcm_4330/dhd.h:212:	struct mutex 	wl_start_stop_lock; /* lock/unlock for Android start/stop */
broadcm_4330/dhd.h:539:extern uint android_msg_level;
broadcm_4330/Makefile:16:	bcmsdh_sdmmc.o dhd_custom_gpio.o sbutils.o wldev_common.o wl_android.o
mt7601u/Makefile.android:144:EXTRA_CFLAGS += -DANDROID_SUPPORT
mt7601u/common/p2p_table.c:1145:		/* Android Event format */
mt7601u/common/p2p_table.c:1338:				Android expect the below format in P2P Group OK.
mt7601u/common/p2p_table.c:1419:				Android except below format for P2P-GROUP-REMOVE event
mt7601u/common/p2p_table.c:1446:				Carter: for now, I make all event format in Android 4.1 format.
mt7601u/common/p2p_table.c:1448:				Android format as below when we are GO, and there is clinet/legacy station connected.
mt7601u/common/p2p_table.c:1450:				in Android 4.0,
mt7601u/common/p2p_table.c:1452:				in Android 4.1,
mt7601u/common/p2p_table.c:1469:				Carter: for now, I make the event format could fit in Android 4.1 format.
mt7601u/common/p2p_table.c:1471:				Android format as below when we are GO, and there is clinet/legacy station connected.
mt7601u/common/p2p_table.c:1473:				in Android 4.0,
mt7601u/common/p2p_table.c:1475:				in Android 4.1,
mt7601u/common/cmm_mac_usb.c:2104:#ifndef ANDROID_SUPPORT
mt7601u/common/cmm_mac_usb.c:2107:#endif /* ANDROID_SUPPORT */
mt7601u/os/linux/cfg80211drv.c:535:		case CMD_RTPRIV_IOCTL_80211_ANDROID_PRIV_CMD:
mt7601u/os/linux/cfg80211drv.c:536:			//rt_android_private_command_entry(pAd, );
mt7601u/os/linux/sta_ioctl.c:521:#ifdef ANDROID_SUPPORT
mt7601u/os/linux/sta_ioctl.c:787:/* because android will set scan and get scan when interface down */
mt7601u/os/linux/sta_ioctl.c:788:#ifndef ANDROID_SUPPORT
mt7601u/os/linux/sta_ioctl.c:794:#endif /* ANDROID_SUPPORT */
mt7601u/os/linux/sta_ioctl.c:834:/* because android will set scan and get scan when interface down */
mt7601u/os/linux/sta_ioctl.c:835:#ifndef ANDROID_SUPPORT
mt7601u/os/linux/sta_ioctl.c:841:#endif /* ANDROID_SUPPORT */
mt7601u/os/linux/sta_ioctl.c:2435:	(iw_handler) rt_ioctl_giwpriv,		/* SIOCSIWPRIV  for Android */
mt7601u/os/linux/sta_ioctl.c:2601:			//Status = rt_android_private_command_entry(pAd, net_dev, rq, cmd);
mt7601u/os/linux/sta_ioctl.c:2602:			Status = RTMP_COM_IoctlHandle(pAd, wrq, CMD_RTPRIV_IOCTL_80211_ANDROID_PRIV_CMD,
mt7601u/os/linux/Makefile.6:206:	../../os/linux/android_priv_cmd.o\
mt7601u/os/linux/Makefile.6:508:	../../os/linux/android_priv_cmd.o\
mt7601u/os/linux/android_priv_cmd.c:10:int rt_android_private_command_entry(
mt7601u/os/linux/config.mk:126:#Support ANDROID_SUPPORT
mt7601u/os/linux/config.mk:127:HAS_ANDROID_SUPPORT=n
mt7601u/os/linux/config.mk:499:ifeq ($(HAS_ANDROID_SUPPORT),y)
mt7601u/os/linux/config.mk:500:WFLAGS += -DANDROID_SUPPORT
mt7601u/os/linux/Makefile:206:	../../os/linux/android_priv_cmd.o\
mt7601u/os/linux/Makefile:508:	../../os/linux/android_priv_cmd.o\
mt7601u/include/rtmp_cmd.h:322:	CMD_RTPRIV_IOCTL_80211_ANDROID_PRIV_CMD,
mt7601u/include/os/rt_linux.h:166:#define STA_DRIVER_VERSION			"3.0.0.3_android_jb_20130223"
mt7601u/include/os/rt_drv.h:96:#define STA_DRIVER_VERSION			"3.0.0.0_android_20121114"
mt7601u/include/rt_os_net.h:396:int rt_android_private_command_entry(
mt7601u/include/rtmp_def.h:1724:#if defined(ANDROID_SUPPORT) || defined(RT_CFG80211_SUPPORT)
mt7601u/include/rtmp_def.h:1730:#endif /* ANDROID_SUPPORT */
mt7601u/Makefile:144:#Support ANDROID_SUPPORT
mt7601u/Makefile:145:HAS_ANDROID_SUPPORT=y
mt7601u/Makefile:517:ifeq ($(HAS_ANDROID_SUPPORT),y)
mt7601u/Makefile:518:WFLAGS += -DANDROID_SUPPORT
mt7601u/Makefile:1618:	os/linux/android_priv_cmd.o\
mt7601u/Makefile:1920:	os/linux/android_priv_cmd.o\
mt7601u/sta/sta_cfg.c:7419:#ifdef ANDROID_SUPPORT
mt7601u/sta/sta_cfg.c:7431:#endif /* ANDROID_SUPPORT */
mt7601u/sta/connect.c:262:for android system , if connect ap1 and want to change to ap2 , 
mt7601u/sta/connect.c:763:	DBGPRINT(RT_DEBUG_TRACE, ("ANDROID IOCTL::SIOCSIWAP %02x:%02x:%02x:%02x:%02x:%02x\n",
mtk_5931/common/dump.c:418:    if (log_level == ANDROID_LOG_ERROR) {
mtk_5931/common/dump.c:419:        xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_5931/common/dump.c:421:    else if (log_level == ANDROID_LOG_WARN) {
mtk_5931/common/dump.c:422:        xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_5931/common/dump.c:424:    else if (log_level == ANDROID_LOG_INFO) {
mtk_5931/common/dump.c:425:        xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_5931/common/dump.c:427:    else if (log_level == ANDROID_LOG_DEBUG) {
mtk_5931/common/dump.c:428:        xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_5931/common/dump.c:430:    else if (log_level == ANDROID_LOG_VERBOSE) {
mtk_5931/common/dump.c:431:        xlog_printk(ANDROID_LOG_VERBOSE, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_5931/common/wlan_lib.c:364: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_5931/common/wlan_lib.c:365: * complete implementation of Android NVRAM access
mtk_5931/common/wlan_oid.c:348: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_5931/common/wlan_oid.c:349: * complete implementation of Android NVRAM access
mtk_5931/nic/nic.c:211: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_5931/nic/nic.c:215: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_5931/nic/nic.c:223: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_5931/nic/nic.c:224: * Print firmware ASSERT info at Android kernel log, driver side
mtk_5931/nic/nic_cmd_event.c:61: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_5931/nic/nic_cmd_event.c:62: * complete implementation of Android NVRAM access
mtk_5931/os/version.h:84: * [WCXRP00000128] [MT6620 Wi-Fi][Driver] Add proc support to Android Driver for debug and driver status check
mtk_5931/os/linux/gl_proc.c:22: * [WCXRP00000128] [MT6620 Wi-Fi][Driver] Add proc support to Android Driver for debug and driver status check
mtk_5931/os/linux/hif/sdio/include/mtk_porting.h:2:/* Android */
mtk_5931/os/linux/hif/sdio/sdio.c:39: * add MT6628 related definitions for Linux/Android driver.
mtk_5931/os/linux/include/gl_wext_priv.h:59: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_5931/os/linux/include/gl_wext_priv.h:60: * complete implementation of Android NVRAM access
mtk_5931/os/linux/include/gl_os.h:151: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_5931/os/linux/include/gl_os.h:152: * complete implementation of Android NVRAM access
mtk_5931/os/linux/include/gl_os.h:503:/* Define if target platform is Android.
mtk_5931/os/linux/include/gl_os.h:504: * It should already be defined in Android kernel source
mtk_5931/os/linux/include/gl_os.h:506:#ifndef CONFIG_ANDROID
mtk_5931/os/linux/include/gl_os.h:507:#define CONFIG_ANDROID      0
mtk_5931/os/linux/include/gl_os.h:525:#if CONFIG_ANDROID
mtk_5931/os/linux/include/gl_kal.h:621:#if CONFIG_ANDROID /* Defined in Android kernel source */
mtk_5931/os/linux/include/gl_kal.h:666:#if CONFIG_ANDROID /* Defined in Android kernel source */
mtk_5931/os/linux/include/gl_kal.h:871:    if (__LEVEL == ANDROID_LOG_ERROR) {\
mtk_5931/os/linux/include/gl_kal.h:872:        xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, ##__FMT);\
mtk_5931/os/linux/include/gl_kal.h:874:    else if (__LEVEL == ANDROID_LOG_WARN) {\
mtk_5931/os/linux/include/gl_kal.h:875:        xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, ##__FMT);\
mtk_5931/os/linux/include/gl_kal.h:877:    else if (__LEVEL == ANDROID_LOG_INFO) {\
mtk_5931/os/linux/include/gl_kal.h:878:        xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, ##__FMT);\
mtk_5931/os/linux/include/gl_kal.h:880:    else if (__LEVEL == ANDROID_LOG_DEBUG) {\
mtk_5931/os/linux/include/gl_kal.h:881:        xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, ##__FMT);\
mtk_5931/os/linux/include/gl_kal.h:883:    else if (__LEVEL == ANDROID_LOG_VERBOSE) {\
mtk_5931/os/linux/include/gl_kal.h:884:        xlog_printk(ANDROID_LOG_VERBOSE, XLOG_TAG, ##__FMT);\
mtk_5931/os/linux/include/gl_kal.h:888:#define AIS_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:890:#define AIS_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:923:#define INIT_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:924:#define INIT_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:925:#define INIT_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:926:#define INIT_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:927:#define INIT_EVENT_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:928:#define INIT_TRACE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:941:#define AAA_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:942:#define AAA_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:943:#define AAA_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:944:#define AAA_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:945:#define AAA_EVENT_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:946:#define AAA_TRACE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:959:#define ROAMING_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:960:#define ROAMING_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:961:#define ROAMING_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:962:#define ROAMING_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:963:#define ROAMING_EVENT_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:964:#define ROAMING_TRACE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1085:#define RLM_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1086:#define RLM_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1087:#define RLM_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1121:#define CNM_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1122:#define CNM_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1123:#define CNM_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1139:#define RSN_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1140:#define RSN_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1141:#define RSN_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1142:#define RSN_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1143:#define RSN_EVENT_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1229:#define QM_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1230:#define QM_WARN_LOGFUNC(_Fmt...)  xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1231:#define QM_INFO_LOGFUNC(_Fmt...)  xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1234:#define QM_TRACE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1283:#define HAL_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1375:#define SW4_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_5931/os/linux/include/gl_kal.h:1387:#define SW4_TRACE_LOGDUMP8(x, y) dumpMemory8(ANDROID_LOG_DEBUG, x, y)
mtk_5931/os/linux/include/gl_wext.h:33: * [WCXRP00000067][MT6620 Wi-Fi][Driver] Support the android+ WAPI function.
mtk_5931/os/linux/include/gl_wext.h:283:#if CFG_SUPPORT_WAPI /* Android+ */
mtk_5931/os/linux/include/gl_typedef.h:26: * to support early suspend in android
mtk_5931/os/linux/platform.c:70: * to support early suspend in android
mtk_5931/os/linux/platform.c:83: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_5931/os/linux/platform.c:84: * complete implementation of Android NVRAM access
mtk_5931/os/linux/gl_init.c:288: * to support early suspend in android
mtk_5931/os/linux/gl_init.c:319: * [WCXRP00000371] [MT6620 Wi-Fi][Driver] make linux glue layer portable for Android 2.3.1 with Linux 2.6.35.7
mtk_5931/os/linux/gl_init.c:335: * [WCXRP00000265] [MT6620 Wi-Fi][Driver] Remove set_mac_address routine from legacy Wi-Fi Android driver
mtk_5931/os/linux/gl_init.c:339: * [WCXRP00000128] [MT6620 Wi-Fi][Driver] Add proc support to Android Driver for debug and driver status check
mtk_5931/os/linux/gl_init.c:370: * [WCXRP00000106] [MT6620 Wi-Fi][Driver] Enable setting multicast  callback in Android
mtk_5931/os/linux/gl_init.c:374: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_5931/os/linux/gl_init.c:375: * complete implementation of Android NVRAM access
mtk_5931/os/linux/gl_wext.c:168: * [WCXRP00000116] [MT6620 Wi-Fi][Driver] Refine the set_scan ioctl to resolve the Android UI hanging issue
mtk_5931/os/linux/gl_wext.c:169: * refine the scan ioctl to prevent hanging of Android UI
mtk_5931/os/linux/gl_wext.c:172: * [WCXRP00000067] [MT6620 Wi-Fi][Driver] Support the android+ WAPI function
mtk_5931/os/linux/gl_wext.c:181: * [WCXRP00000067][MT6620 Wi-Fi][Driver] Support the android+ WAPI function.
mtk_5931/os/linux/gl_wext.c:1903:#if CFG_SUPPORT_WAPI /* Android+ */
mtk_5931/os/linux/gl_wext.c:2042:#if CFG_SUPPORT_WAPI /* Android+ */
mtk_5931/os/linux/gl_wext.c:4322:#if CFG_SUPPORT_WAPI /* Android+ */
mtk_5931/os/linux/gl_wext_priv.c:105: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_5931/os/linux/gl_wext_priv.c:106: * complete implementation of Android NVRAM access
mtk_5931/os/linux/gl_kal.c:39: * [WCXRP00001187] [MT6620 Wi-Fi][Driver][Android] Add error handling while firmware image doesn't exist
mtk_5931/os/linux/gl_kal.c:51: * [WCXRP00001187] [MT6620 Wi-Fi][Driver][Android] Add error handling while firmware image doesn't exist
mtk_5931/os/linux/gl_kal.c:191: * [WCXRP00000371] [MT6620 Wi-Fi][Driver] make linux glue layer portable for Android 2.3.1 with Linux 2.6.35.7
mtk_5931/os/linux/gl_kal.c:243: * [WCXRP00000116] [MT6620 Wi-Fi][Driver] Refine the set_scan ioctl to resolve the Android UI hanging issue
mtk_5931/os/linux/gl_kal.c:244: * refine the scan ioctl to prevent hanging of Android UI
mtk_5931/os/linux/gl_kal.c:247: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_5931/os/linux/gl_kal.c:248: * complete implementation of Android NVRAM access
mtk_5931/os/linux/gl_kal.c:403: * workaround for fixing request_firmware() failure on android 2.1
mtk_5931/include/nic/mt5931_reg.h:61: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_5931/include/nic/mt6620_reg.h:17: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_5931/include/nic/mt6620_reg.h:18: * Print firmware ASSERT info at Android kernel log, driver side
mtk_5931/include/config.h:353: * [WCXRP00000067] [MT6620 Wi-Fi][Driver] Support the android+ WAPI function
mtk_5931/include/config.h:367: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_5931/include/config.h:368: * complete implementation of Android NVRAM access
mtk_5931/include/config.h:371: * [WCXRP00000102] [MT6620 Wi-Fi] [FW] Add a compiling flag and code for support Direct GO at Android
mtk_5931/include/config.h:372: * Add a define CFG_TEST_ANDROID_DIRECT_GO compiling flag
mtk_5931/include/config.h:1348:#define CFG_TEST_ANDROID_DIRECT_GO              0
mtk_5931/include/config.h:1353: * Enable cfg80211 option after Android 2.2(Froyo) is suggested,
mtk_5931/include/wlan_lib.h:133: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_5931/include/wlan_lib.h:134: * complete implementation of Android NVRAM access
mtk_5931/include/wlan_oid.h:49: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_5931/include/wlan_oid.h:50: * complete implementation of Android NVRAM access
mtk_5931/mgmt/wapi.c:22: * [WCXRP00000067] [MT6620 Wi-Fi][Driver] Support the android+ WAPI function
mtk_5931/mgmt/ais_fsm.c:39: * [WCXRP00001086] [MT6620 Wi-Fi][Driver] On Android, indicate an extra DISCONNECT for REASSOCIATED cases as an explicit trigger for Android framework
mtk_5931/mgmt/ais_fsm.c:43: * [WCXRP00001086] [MT6620 Wi-Fi][Driver] On Android, indicate an extra DISCONNECT for REASSOCIATED cases as an explicit trigger for Android framework
mtk_5931/mgmt/ais_fsm.c:45: * 2. (Android only) when reassociation-and-non-roaming cases happened, indicate an extra DISCONNECT indication to Android Wi-Fi framework
mtk_5931/mgmt/saa_fsm.c:33: * [WCXRP00001086] [MT6620 Wi-Fi][Driver] On Android, indicate an extra DISCONNECT for REASSOCIATED cases as an explicit trigger for Android framework
mtk_5931/mgmt/saa_fsm.c:35: * 2. (Android only) when reassociation-and-non-roaming cases happened, indicate an extra DISCONNECT indication to Android Wi-Fi framework
mtk_5931/mgmt/p2p_fsm.c:668: * [WCXRP00000085] [MT6620 Wif-Fi] [Driver] update the modified p2p state machine[WCXRP00000102] [MT6620 Wi-Fi] [FW] Add a compiling flag and code for support Direct GO at Android
mtk_5931/mgmt/p2p_fsm.c:672: * [WCXRP00000102] [MT6620 Wi-Fi] [FW] Add a compiling flag and code for support Direct GO at Android
mtk_wcn_combo_ics/drv_wlan/p2p/mgmt/p2p_fsm.c:744: * [WCXRP00000085] [MT6620 Wif-Fi] [Driver] update the modified p2p state machine[WCXRP00000102] [MT6620 Wi-Fi] [FW] Add a compiling flag and code for support Direct GO at Android
mtk_wcn_combo_ics/drv_wlan/p2p/mgmt/p2p_fsm.c:748: * [WCXRP00000102] [MT6620 Wi-Fi] [FW] Add a compiling flag and code for support Direct GO at Android
mtk_wcn_combo_ics/drv_wlan/wlan/common/dump.c:462:    if (log_level == ANDROID_LOG_ERROR) {
mtk_wcn_combo_ics/drv_wlan/wlan/common/dump.c:463:        xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_wcn_combo_ics/drv_wlan/wlan/common/dump.c:465:    else if (log_level == ANDROID_LOG_WARN) {
mtk_wcn_combo_ics/drv_wlan/wlan/common/dump.c:466:        xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_wcn_combo_ics/drv_wlan/wlan/common/dump.c:468:    else if (log_level == ANDROID_LOG_INFO) {
mtk_wcn_combo_ics/drv_wlan/wlan/common/dump.c:469:        xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_wcn_combo_ics/drv_wlan/wlan/common/dump.c:471:    else if (log_level == ANDROID_LOG_DEBUG) {
mtk_wcn_combo_ics/drv_wlan/wlan/common/dump.c:472:        xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_wcn_combo_ics/drv_wlan/wlan/common/dump.c:474:    else if (log_level == ANDROID_LOG_VERBOSE) {
mtk_wcn_combo_ics/drv_wlan/wlan/common/dump.c:475:        xlog_printk(ANDROID_LOG_VERBOSE, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_wcn_combo_ics/drv_wlan/wlan/common/wlan_lib.c:310: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_ics/drv_wlan/wlan/common/wlan_lib.c:311: * complete implementation of Android NVRAM access
mtk_wcn_combo_ics/drv_wlan/wlan/common/wlan_oid.c:337: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_ics/drv_wlan/wlan/common/wlan_oid.c:338: * complete implementation of Android NVRAM access
mtk_wcn_combo_ics/drv_wlan/wlan/nic/nic.c:236: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_wcn_combo_ics/drv_wlan/wlan/nic/nic.c:240: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_wcn_combo_ics/drv_wlan/wlan/nic/nic.c:248: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_wcn_combo_ics/drv_wlan/wlan/nic/nic.c:249: * Print firmware ASSERT info at Android kernel log, driver side
mtk_wcn_combo_ics/drv_wlan/wlan/nic/nic_cmd_event.c:106: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_ics/drv_wlan/wlan/nic/nic_cmd_event.c:107: * complete implementation of Android NVRAM access
mtk_wcn_combo_ics/drv_wlan/wlan/os/version.h:81: * [WCXRP00000128] [MT6620 Wi-Fi][Driver] Add proc support to Android Driver for debug and driver status check
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_proc.c:66: * [WCXRP00000128] [MT6620 Wi-Fi][Driver] Add proc support to Android Driver for debug and driver status check
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/hif/sdio/include/mtk_porting.h:3:/* Android */
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_wext_priv.h:109: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_wext_priv.h:110: * complete implementation of Android NVRAM access
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_os.h:178: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_os.h:179: * complete implementation of Android NVRAM access
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_os.h:528:/* Define if target platform is Android.
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_os.h:529: * It should already be defined in Android kernel source
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_os.h:531:#ifndef CONFIG_ANDROID
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_os.h:532:#define CONFIG_ANDROID      0
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_os.h:547:#if CONFIG_ANDROID
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:650:#if CONFIG_ANDROID /* Defined in Android kernel source */
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:697:#if CONFIG_ANDROID /* Defined in Android kernel source */
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:901:    if (__LEVEL == ANDROID_LOG_ERROR) {\
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:902:        xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, ##__FMT);\
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:904:    else if (__LEVEL == ANDROID_LOG_WARN) {\
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:905:        xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, ##__FMT);\
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:907:    else if (__LEVEL == ANDROID_LOG_INFO) {\
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:908:        xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, ##__FMT);\
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:910:    else if (__LEVEL == ANDROID_LOG_DEBUG) {\
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:911:        xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, ##__FMT);\
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:913:    else if (__LEVEL == ANDROID_LOG_VERBOSE) {\
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:914:        xlog_printk(ANDROID_LOG_VERBOSE, XLOG_TAG, ##__FMT);\
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:918:#define AIS_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:920:#define AIS_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:953:#define INIT_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:954:#define INIT_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:955:#define INIT_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:956:#define INIT_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:957:#define INIT_EVENT_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:958:#define INIT_TRACE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:971:#define AAA_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:972:#define AAA_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:973:#define AAA_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:974:#define AAA_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:975:#define AAA_EVENT_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:976:#define AAA_TRACE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:989:#define ROAMING_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:990:#define ROAMING_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:991:#define ROAMING_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:992:#define ROAMING_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:993:#define ROAMING_EVENT_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:994:#define ROAMING_TRACE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1043:#define RX_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1044:#define RX_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1115:#define RLM_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1116:#define RLM_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1117:#define RLM_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1151:#define CNM_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1152:#define CNM_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1153:#define CNM_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1169:#define RSN_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1170:#define RSN_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1171:#define RSN_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1172:#define RSN_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1173:#define RSN_EVENT_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1205:#define SCN_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1206:#define SCN_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1259:#define QM_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1260:#define QM_WARN_LOGFUNC(_Fmt...)  xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1261:#define QM_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1264:#define QM_TRACE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1313:#define HAL_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1405:#define SW4_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_kal.h:1417:#define SW4_TRACE_LOGDUMP8(x, y) dumpMemory8(ANDROID_LOG_DEBUG, x, y)
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_wext.h:70: * [WCXRP00000067][MT6620 Wi-Fi][Driver] Support the android+ WAPI function.
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_wext.h:320:#if CFG_SUPPORT_WAPI /* Android+ */
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/include/gl_typedef.h:67: * to support early suspend in android
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/platform.c:138: * to support early suspend in android
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/platform.c:151: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/platform.c:152: * complete implementation of Android NVRAM access
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_init.c:272: * to support early suspend in android
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_init.c:303: * [WCXRP00000371] [MT6620 Wi-Fi][Driver] make linux glue layer portable for Android 2.3.1 with Linux 2.6.35.7
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_init.c:319: * [WCXRP00000265] [MT6620 Wi-Fi][Driver] Remove set_mac_address routine from legacy Wi-Fi Android driver
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_init.c:323: * [WCXRP00000128] [MT6620 Wi-Fi][Driver] Add proc support to Android Driver for debug and driver status check
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_init.c:354: * [WCXRP00000106] [MT6620 Wi-Fi][Driver] Enable setting multicast  callback in Android
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_init.c:358: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_init.c:359: * complete implementation of Android NVRAM access
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_wext.c:196: * [WCXRP00000116] [MT6620 Wi-Fi][Driver] Refine the set_scan ioctl to resolve the Android UI hanging issue
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_wext.c:197: * refine the scan ioctl to prevent hanging of Android UI
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_wext.c:200: * [WCXRP00000067] [MT6620 Wi-Fi][Driver] Support the android+ WAPI function
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_wext.c:209: * [WCXRP00000067][MT6620 Wi-Fi][Driver] Support the android+ WAPI function.
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_wext.c:1918:#if CFG_SUPPORT_WAPI /* Android+ */
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_wext.c:2057:#if CFG_SUPPORT_WAPI /* Android+ */
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_wext.c:4342:#if CFG_SUPPORT_WAPI /* Android+ */
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_wext_priv.c:135: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_wext_priv.c:136: * complete implementation of Android NVRAM access
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_kal.c:195: * [WCXRP00000371] [MT6620 Wi-Fi][Driver] make linux glue layer portable for Android 2.3.1 with Linux 2.6.35.7
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_kal.c:247: * [WCXRP00000116] [MT6620 Wi-Fi][Driver] Refine the set_scan ioctl to resolve the Android UI hanging issue
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_kal.c:248: * refine the scan ioctl to prevent hanging of Android UI
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_kal.c:251: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_kal.c:252: * complete implementation of Android NVRAM access
mtk_wcn_combo_ics/drv_wlan/wlan/os/linux/gl_kal.c:407: * workaround for fixing request_firmware() failure on android 2.1
mtk_wcn_combo_ics/drv_wlan/wlan/include/nic/mt5931_reg.h:65: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_wcn_combo_ics/drv_wlan/wlan/include/nic/mt6620_reg.h:61: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_wcn_combo_ics/drv_wlan/wlan/include/nic/mt6620_reg.h:62: * Print firmware ASSERT info at Android kernel log, driver side
mtk_wcn_combo_ics/drv_wlan/wlan/include/config.h:286: * [WCXRP00000067] [MT6620 Wi-Fi][Driver] Support the android+ WAPI function
mtk_wcn_combo_ics/drv_wlan/wlan/include/config.h:300: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_ics/drv_wlan/wlan/include/config.h:301: * complete implementation of Android NVRAM access
mtk_wcn_combo_ics/drv_wlan/wlan/include/config.h:304: * [WCXRP00000102] [MT6620 Wi-Fi] [FW] Add a compiling flag and code for support Direct GO at Android
mtk_wcn_combo_ics/drv_wlan/wlan/include/config.h:305: * Add a define CFG_TEST_ANDROID_DIRECT_GO compiling flag
mtk_wcn_combo_ics/drv_wlan/wlan/include/config.h:1255:#define CFG_TEST_ANDROID_DIRECT_GO              0
mtk_wcn_combo_ics/drv_wlan/wlan/include/config.h:1260: * Enable cfg80211 option after Android 2.2(Froyo) is suggested,
mtk_wcn_combo_ics/drv_wlan/wlan/include/wlan_lib.h:129: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_ics/drv_wlan/wlan/include/wlan_lib.h:130: * complete implementation of Android NVRAM access
mtk_wcn_combo_ics/drv_wlan/wlan/include/wlan_oid.h:103: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_ics/drv_wlan/wlan/include/wlan_oid.h:104: * complete implementation of Android NVRAM access
mtk_wcn_combo_ics/drv_wlan/wlan/mgmt/wapi.c:76: * [WCXRP00000067] [MT6620 Wi-Fi][Driver] Support the android+ WAPI function
mtk_wcn_combo_ics/drv_wlan/wlan/mgmt/ais_fsm.c:81: * [WCXRP00001086] [MT6620 Wi-Fi][Driver] On Android, indicate an extra DISCONNECT for REASSOCIATED cases as an explicit trigger for Android framework
mtk_wcn_combo_ics/drv_wlan/wlan/mgmt/ais_fsm.c:85: * [WCXRP00001086] [MT6620 Wi-Fi][Driver] On Android, indicate an extra DISCONNECT for REASSOCIATED cases as an explicit trigger for Android framework
mtk_wcn_combo_ics/drv_wlan/wlan/mgmt/ais_fsm.c:87: * 2. (Android only) when reassociation-and-non-roaming cases happened, indicate an extra DISCONNECT indication to Android Wi-Fi framework
mtk_wcn_combo_ics/drv_wlan/wlan/mgmt/ais_fsm.c:2645:                    //4 <Pre-1.6> Android Framework needs DISCONNECT indication for non-roaming/reassociated cases
mtk_wcn_combo_ics/drv_wlan/wlan/mgmt/saa_fsm.c:71: * [WCXRP00001086] [MT6620 Wi-Fi][Driver] On Android, indicate an extra DISCONNECT for REASSOCIATED cases as an explicit trigger for Android framework
mtk_wcn_combo_ics/drv_wlan/wlan/mgmt/saa_fsm.c:73: * 2. (Android only) when reassociation-and-non-roaming cases happened, indicate an extra DISCONNECT indication to Android Wi-Fi framework
mtk_wcn_combo_ics/drv_fm/public/mt6620_fm.h:115:            xlog_printk(ANDROID_LOG_INFO, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_ics/drv_fm/public/mt6620_fm.h:122:            xlog_printk(ANDROID_LOG_INFO, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_ics/drv_fm/public/mt6620_fm.h:129:            xlog_printk(ANDROID_LOG_WARN, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_ics/drv_fm/public/mt6620_fm.h:136:            xlog_printk(ANDROID_LOG_WARN, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_ics/drv_fm/public/mt6620_fm.h:143:            xlog_printk(ANDROID_LOG_ERROR, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_ics/drv_fm/public/mt6620_fm.h:150:            xlog_printk(ANDROID_LOG_FATAL, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_ics/drv_fm/public/mt6620_fm.h:157:            xlog_printk(ANDROID_LOG_FATAL, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_ics/drv_fm/public/mt6620_fm.h:164:            xlog_printk(ANDROID_LOG_FATAL, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/dump.c:418:    if (log_level == ANDROID_LOG_ERROR) {
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/dump.c:419:        xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/dump.c:421:    else if (log_level == ANDROID_LOG_WARN) {
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/dump.c:422:        xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/dump.c:424:    else if (log_level == ANDROID_LOG_INFO) {
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/dump.c:425:        xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/dump.c:427:    else if (log_level == ANDROID_LOG_DEBUG) {
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/dump.c:428:        xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/dump.c:430:    else if (log_level == ANDROID_LOG_VERBOSE) {
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/dump.c:431:        xlog_printk(ANDROID_LOG_VERBOSE, XLOG_TAG, "DUMP8 ADDRESS: %08lx, Length: %ld\n", (UINT_32)pucStartAddr, u4Length);
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/wlan_lib.c:364: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/wlan_lib.c:365: * complete implementation of Android NVRAM access
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/wlan_oid.c:348: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/common/wlan_oid.c:349: * complete implementation of Android NVRAM access
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/nic/nic.c:211: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/nic/nic.c:215: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/nic/nic.c:223: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/nic/nic.c:224: * Print firmware ASSERT info at Android kernel log, driver side
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/nic/nic_cmd_event.c:61: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/nic/nic_cmd_event.c:62: * complete implementation of Android NVRAM access
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/version.h:84: * [WCXRP00000128] [MT6620 Wi-Fi][Driver] Add proc support to Android Driver for debug and driver status check
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_proc.c:22: * [WCXRP00000128] [MT6620 Wi-Fi][Driver] Add proc support to Android Driver for debug and driver status check
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/hif/sdio/include/mtk_porting.h:2:/* Android */
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/hif/sdio/sdio.c:39: * add MT6628 related definitions for Linux/Android driver.
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_wext_priv.h:59: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_wext_priv.h:60: * complete implementation of Android NVRAM access
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_os.h:151: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_os.h:152: * complete implementation of Android NVRAM access
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_os.h:503:/* Define if target platform is Android.
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_os.h:504: * It should already be defined in Android kernel source
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_os.h:506:#ifndef CONFIG_ANDROID
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_os.h:507:#define CONFIG_ANDROID      0
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_os.h:525:#if CONFIG_ANDROID
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:621:#if CONFIG_ANDROID /* Defined in Android kernel source */
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:666:#if CONFIG_ANDROID /* Defined in Android kernel source */
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:871:    if (__LEVEL == ANDROID_LOG_ERROR) {\
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:872:        xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, ##__FMT);\
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:874:    else if (__LEVEL == ANDROID_LOG_WARN) {\
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:875:        xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, ##__FMT);\
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:877:    else if (__LEVEL == ANDROID_LOG_INFO) {\
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:878:        xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, ##__FMT);\
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:880:    else if (__LEVEL == ANDROID_LOG_DEBUG) {\
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:881:        xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, ##__FMT);\
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:883:    else if (__LEVEL == ANDROID_LOG_VERBOSE) {\
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:884:        xlog_printk(ANDROID_LOG_VERBOSE, XLOG_TAG, ##__FMT);\
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:888:#define AIS_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:890:#define AIS_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:923:#define INIT_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:924:#define INIT_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:925:#define INIT_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:926:#define INIT_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:927:#define INIT_EVENT_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:928:#define INIT_TRACE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:941:#define AAA_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:942:#define AAA_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:943:#define AAA_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:944:#define AAA_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:945:#define AAA_EVENT_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:946:#define AAA_TRACE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:959:#define ROAMING_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:960:#define ROAMING_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:961:#define ROAMING_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:962:#define ROAMING_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:963:#define ROAMING_EVENT_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:964:#define ROAMING_TRACE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1085:#define RLM_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1086:#define RLM_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1087:#define RLM_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1121:#define CNM_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1122:#define CNM_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1123:#define CNM_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1139:#define RSN_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1140:#define RSN_WARN_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1141:#define RSN_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1142:#define RSN_STATE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1143:#define RSN_EVENT_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1229:#define QM_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1230:#define QM_WARN_LOGFUNC(_Fmt...)  xlog_printk(ANDROID_LOG_WARN, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1231:#define QM_INFO_LOGFUNC(_Fmt...)  xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1234:#define QM_TRACE_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_DEBUG, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1283:#define HAL_ERROR_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_ERROR, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1375:#define SW4_INFO_LOGFUNC(_Fmt...) xlog_printk(ANDROID_LOG_INFO, XLOG_TAG, _Fmt)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_kal.h:1387:#define SW4_TRACE_LOGDUMP8(x, y) dumpMemory8(ANDROID_LOG_DEBUG, x, y)
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_wext.h:33: * [WCXRP00000067][MT6620 Wi-Fi][Driver] Support the android+ WAPI function.
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_wext.h:283:#if CFG_SUPPORT_WAPI /* Android+ */
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/include/gl_typedef.h:26: * to support early suspend in android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/platform.c:70: * to support early suspend in android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/platform.c:83: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/platform.c:84: * complete implementation of Android NVRAM access
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_init.c:288: * to support early suspend in android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_init.c:319: * [WCXRP00000371] [MT6620 Wi-Fi][Driver] make linux glue layer portable for Android 2.3.1 with Linux 2.6.35.7
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_init.c:335: * [WCXRP00000265] [MT6620 Wi-Fi][Driver] Remove set_mac_address routine from legacy Wi-Fi Android driver
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_init.c:339: * [WCXRP00000128] [MT6620 Wi-Fi][Driver] Add proc support to Android Driver for debug and driver status check
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_init.c:370: * [WCXRP00000106] [MT6620 Wi-Fi][Driver] Enable setting multicast  callback in Android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_init.c:374: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_init.c:375: * complete implementation of Android NVRAM access
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_wext.c:168: * [WCXRP00000116] [MT6620 Wi-Fi][Driver] Refine the set_scan ioctl to resolve the Android UI hanging issue
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_wext.c:169: * refine the scan ioctl to prevent hanging of Android UI
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_wext.c:172: * [WCXRP00000067] [MT6620 Wi-Fi][Driver] Support the android+ WAPI function
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_wext.c:181: * [WCXRP00000067][MT6620 Wi-Fi][Driver] Support the android+ WAPI function.
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_wext.c:1903:#if CFG_SUPPORT_WAPI /* Android+ */
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_wext.c:2042:#if CFG_SUPPORT_WAPI /* Android+ */
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_wext.c:4322:#if CFG_SUPPORT_WAPI /* Android+ */
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_wext_priv.c:105: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_wext_priv.c:106: * complete implementation of Android NVRAM access
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_kal.c:39: * [WCXRP00001187] [MT6620 Wi-Fi][Driver][Android] Add error handling while firmware image doesn't exist
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_kal.c:51: * [WCXRP00001187] [MT6620 Wi-Fi][Driver][Android] Add error handling while firmware image doesn't exist
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_kal.c:191: * [WCXRP00000371] [MT6620 Wi-Fi][Driver] make linux glue layer portable for Android 2.3.1 with Linux 2.6.35.7
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_kal.c:243: * [WCXRP00000116] [MT6620 Wi-Fi][Driver] Refine the set_scan ioctl to resolve the Android UI hanging issue
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_kal.c:244: * refine the scan ioctl to prevent hanging of Android UI
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_kal.c:247: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_kal.c:248: * complete implementation of Android NVRAM access
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/os/linux/gl_kal.c:403: * workaround for fixing request_firmware() failure on android 2.1
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/include/nic/mt6620_reg.h:17: * [WCXRP00000412] [MT6620 Wi-Fi][FW/Driver] Dump firmware assert info at android kernel log
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/include/nic/mt6620_reg.h:18: * Print firmware ASSERT info at Android kernel log, driver side
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/include/config.h:353: * [WCXRP00000067] [MT6620 Wi-Fi][Driver] Support the android+ WAPI function
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/include/config.h:367: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/include/config.h:368: * complete implementation of Android NVRAM access
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/include/config.h:371: * [WCXRP00000102] [MT6620 Wi-Fi] [FW] Add a compiling flag and code for support Direct GO at Android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/include/config.h:372: * Add a define CFG_TEST_ANDROID_DIRECT_GO compiling flag
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/include/config.h:1344:#define CFG_TEST_ANDROID_DIRECT_GO              0
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/include/config.h:1349: * Enable cfg80211 option after Android 2.2(Froyo) is suggested,
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/include/wlan_lib.h:133: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/include/wlan_lib.h:134: * complete implementation of Android NVRAM access
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/include/wlan_oid.h:49: * [WCXRP00000056] [MT6620 Wi-Fi][Driver] NVRAM implementation with Version Check[WCXRP00000086] [MT6620 Wi-Fi][Driver] The mac address is all zero at android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/include/wlan_oid.h:50: * complete implementation of Android NVRAM access
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/mgmt/wapi.c:22: * [WCXRP00000067] [MT6620 Wi-Fi][Driver] Support the android+ WAPI function
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/mgmt/ais_fsm.c:39: * [WCXRP00001086] [MT6620 Wi-Fi][Driver] On Android, indicate an extra DISCONNECT for REASSOCIATED cases as an explicit trigger for Android framework
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/mgmt/ais_fsm.c:43: * [WCXRP00001086] [MT6620 Wi-Fi][Driver] On Android, indicate an extra DISCONNECT for REASSOCIATED cases as an explicit trigger for Android framework
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/mgmt/ais_fsm.c:45: * 2. (Android only) when reassociation-and-non-roaming cases happened, indicate an extra DISCONNECT indication to Android Wi-Fi framework
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/mgmt/saa_fsm.c:33: * [WCXRP00001086] [MT6620 Wi-Fi][Driver] On Android, indicate an extra DISCONNECT for REASSOCIATED cases as an explicit trigger for Android framework
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/mgmt/saa_fsm.c:35: * 2. (Android only) when reassociation-and-non-roaming cases happened, indicate an extra DISCONNECT indication to Android Wi-Fi framework
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/mgmt/p2p_fsm.c:668: * [WCXRP00000085] [MT6620 Wif-Fi] [Driver] update the modified p2p state machine[WCXRP00000102] [MT6620 Wi-Fi] [FW] Add a compiling flag and code for support Direct GO at Android
mtk_wcn_combo_jb/drv_wlan/mt6620/wlan/mgmt/p2p_fsm.c:672: * [WCXRP00000102] [MT6620 Wi-Fi] [FW] Add a compiling flag and code for support Direct GO at Android
mtk_wcn_combo_jb/drv_fm/public/mt6620_fm.h:115:            xlog_printk(ANDROID_LOG_INFO, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_jb/drv_fm/public/mt6620_fm.h:122:            xlog_printk(ANDROID_LOG_INFO, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_jb/drv_fm/public/mt6620_fm.h:129:            xlog_printk(ANDROID_LOG_WARN, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_jb/drv_fm/public/mt6620_fm.h:136:            xlog_printk(ANDROID_LOG_WARN, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_jb/drv_fm/public/mt6620_fm.h:143:            xlog_printk(ANDROID_LOG_ERROR, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_jb/drv_fm/public/mt6620_fm.h:150:            xlog_printk(ANDROID_LOG_FATAL, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_jb/drv_fm/public/mt6620_fm.h:157:            xlog_printk(ANDROID_LOG_FATAL, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
mtk_wcn_combo_jb/drv_fm/public/mt6620_fm.h:164:            xlog_printk(ANDROID_LOG_FATAL, FM_DRV_LOG_TAG, "[" #flag "]" fmt, ## args); \
Binary file rt5370/MODULE/tools/bin2h matches
rt5370/MODULE/common/cmm_mac_usb.c:2052:#ifndef ANDROID_SUPPORT
rt5370/MODULE/common/cmm_mac_usb.c:2055:#endif /* ANDROID_SUPPORT */
rt5370/MODULE/os/linux/config.mk:121:#Support ANDROID_SUPPORT
rt5370/MODULE/os/linux/config.mk:122:HAS_ANDROID_SUPPORT=n
rt5370/MODULE/os/linux/config.mk:486:ifeq ($(HAS_ANDROID_SUPPORT),y)
rt5370/MODULE/os/linux/config.mk:487:WFLAGS += -DANDROID_SUPPORT
rt5370/MODULE/include/rtmp.h:4054:#ifdef	CONFIG_ANDROID_POWER
rt5370/MODULE/include/rtmp.h:4055:	android_early_suspend_t	early_suspend;
rt5370/MODULE/include/rtmp.h:9817:#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rt5370/MODULE/include/rtmp.h:9821:#endif //CONFIG_HAS_EARLYSUSPEND || CONFIG_ANDROID_POWER
rt5370/MODULE/include/rtmp_def.h:1641:#ifdef ANDROID_SUPPORT
rt5370/MODULE/include/rtmp_def.h:1647:#endif /* ANDROID_SUPPORT */
rt5370/MODULE/sta/sta_cfg.c:7155:#ifdef ANDROID_SUPPORT
rt5370/MODULE/sta/sta_cfg.c:7167:#endif /* ANDROID_SUPPORT */
rt5370/MODULE/sta/connect.c:247:for android system , if connect ap1 and want to change to ap2 , 
rt5370/MODULE/sta/connect.c:750:	DBGPRINT(RT_DEBUG_TRACE, ("ANDROID IOCTL::SIOCSIWAP %02x:%02x:%02x:%02x:%02x:%02x\n",
rt5370/config.mk:121:#Support ANDROID_SUPPORT
rt5370/config.mk:122:HAS_ANDROID_SUPPORT=n
rt5370/config.mk:486:ifeq ($(HAS_ANDROID_SUPPORT),y)
rt5370/config.mk:487:WFLAGS += -DANDROID_SUPPORT
rt5370/NETIF/os/linux/sta_ioctl.c:517:#ifdef ANDROID_SUPPORT
rt5370/NETIF/os/linux/sta_ioctl.c:783:/* because android will set scan and get scan when interface down */
rt5370/NETIF/os/linux/sta_ioctl.c:784:#ifndef ANDROID_SUPPORT
rt5370/NETIF/os/linux/sta_ioctl.c:790:#endif /* ANDROID_SUPPORT */
rt5370/NETIF/os/linux/sta_ioctl.c:830:/* because android will set scan and get scan when interface down */
rt5370/NETIF/os/linux/sta_ioctl.c:831:#ifndef ANDROID_SUPPORT
rt5370/NETIF/os/linux/sta_ioctl.c:837:#endif /* ANDROID_SUPPORT */
rt5370/NETIF/os/linux/sta_ioctl.c:2444:	(iw_handler) rt_ioctl_giwpriv,		/* SIOCSIWPRIV  for Android */
rt5370/NETIF/os/linux/config.mk:121:#Support ANDROID_SUPPORT
rt5370/NETIF/os/linux/config.mk:122:HAS_ANDROID_SUPPORT=n
rt5370/NETIF/os/linux/config.mk:486:ifeq ($(HAS_ANDROID_SUPPORT),y)
rt5370/NETIF/os/linux/config.mk:487:WFLAGS += -DANDROID_SUPPORT
rt5370/NETIF/os/linux/usb_main_dev.c:461:#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rt5370/NETIF/os/linux/usb_main_dev.c:507:#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rt5370/NETIF/os/linux/usb_main_dev.c:676:#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rt5370/NETIF/os/linux/usb_main_dev.c:863:#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rt5370/NETIF/os/linux/Module.symvers:1:0xcba9c897	RtmpOSFileClose	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:2:0xd491a5d5	RtmpOSTaskCustomize	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:3:0xfb6208bf	RTMP_OS_Mod_Timer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:4:0xfbff3a1f	RTMP_OS_Add_Timer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:5:0x9e5a6d2e	RtmpOsFreeSpinLock	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:6:0x226fb53f	RtmpOSFileSeek	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:7:0xfc59bb7a	CFG80211OS_NewSta	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:8:0xe66efdb6	RtmpOsGetUnaligned	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:9:0x525bffc7	RtmpOsSetPktNetDev	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:10:0x9b799f28	ExpandPacket	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:11:0xb7252934	Cfg80211_Chan	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:12:0xa3cdd0cb	RtmpOSFSInfoChange	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:13:0x3bb7962c	RtmpOsSetNetDevTypeMonitor	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:14:0xae3a7d25	CFG80211OS_SupBandReInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:15:0xb97a8c82	RtmpMeshDown	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:16:0x647214df	os_alloc_mem	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:17:0x694b56bf	RtmpOsTickUnitGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:18:0x6f1c35ab	RtmpOSTaskFree	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:19:0xd082bb60	rausb_submit_urb	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:20:0x6a8f74a6	RtmpOsSemaInitLocked	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:21:0x97b62a09	RTMP_QueryPacketInfo	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:22:0x7902adef	rausb_get_dev	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:23:0x72c72167	RtmpOsUsbUrbLenGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:24:0x9f901ef6	RtmpOsGetNetDevPriv	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:25:0x3a929611	RtmpOsGetUnaligned32	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:26:0xc9a09db8	RtmpOsTaskDataGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:27:0xadbe7601	RTMP_GetCurrentSystemTick	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:28:0x00248b5d	RtmpOsUsbEmptyUrbCheck	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:29:0x547c5404	RtmpOsCopyFromUser	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:30:0xd67105a9	CFG80211OS_RegHint	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:31:0xbdfb0047	RtmpOSNetDevIsUp	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:32:0x1dccb90d	RtmpDrvMaxRateGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:33:0x828ee54f	RtmpOsGetPid	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:34:0xef619300	RtmpOsPktTailBufExtend	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:35:0x2f912952	RtmpOSNetDevAddrSet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:36:0x3d35af3a	RtmpOsTimerAfter	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:37:0xd7f7dc8d	os_free_mem	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:38:0x8b647a20	RtmpOsTaskletKill	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:39:0xa6f17d87	RTMPL2FrameTxAction	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:40:0x1c0bd89d	RtmpOsCopyToUser	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:41:0xfea1f01e	duplicate_pkt_with_VLAN	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:42:0xd158cb5e	RtmpOsAtomicInterlockedExchange	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:43:0xb060b677	RTPktOffsetCB	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:44:0xd62a2cb4	RtmpOsIsInInterrupt	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:45:0x0244b746	rausb_deregister	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:46:0x08acbc66	RtmpOsWlanEventSet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:47:0x3f8c832c	RtmpOsTaskWakeUp	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:48:0x32790b04	RtmpOsSemaWaitInterruptible	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:49:0x642a470b	CFG80211OS_ChanNumGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:50:0xf88610c4	send_monitor_packets	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:51:0x2300115d	RtmpOsVfree	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:52:0x7a205d9f	RtmpOSWrielessEventSendExt	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:53:0x2ac0c48c	RtmpFlashWrite	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:54:0x2a8c7ba1	CFG80211OS_DelSta	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:55:0x816426e2	rausb_buffer_free	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:56:0xb0529cc4	rausb_put_dev	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:57:0xf3c4d89e	RtmpOSTaskNotifyToExit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:58:0xe8c29f63	RtPrivIoctlSetVal	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:59:0xdc40b459	RtmpThreadPidKill	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:60:0xd9284062	duplicate_pkt_with_TKIP_MIC	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:61:0xb0e75266	hex_dump	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:62:0xda8441a6	rtstrchr	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:63:0x54457b04	RtmpOsNetQueueStart	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:64:0x6990e408	RtmpOSNetDevProtect	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:65:0x5312eccd	RtmpOsTimerBefore	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:66:0x7ef17813	RtmpOSNetPktAlloc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:67:0xa2039035	CFG80211OS_ChanInfoInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:68:0x56b2cb81	RtmpOsPktInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:69:0x61e836a8	RtmpDevPrivFlagsGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:70:0x4c5ee785	RtmpOsSetNetDevPriv	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:71:0xa1b7c180	RtmpOsStatsAlloc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:72:0xd0bcb543	RtmpOsDCacheFlush	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:73:0x2a78d9eb	RtmpOsIsPktCloned	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:74:0x04eee06a	rausb_free_urb	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:75:0x0cbd1cb1	RTMP_OS_Del_Timer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:76:0xf470bb21	RtmpOsAtomicDestroy	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:77:0x2e480d54	RtmpOsUsbUrbDataGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:78:0x6603be3c	CFG80211OS_BandInfoGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:79:0x22fb9e6b	RtmpOsPktCopy	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:80:0x9842b8c6	rausb_alloc_urb	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:81:0x0cc176b2	RtmpOsAtomicRead	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:82:0x5e532fe9	RtmpOsPktRcvHandle	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:83:0x33ef9726	ralinkrate	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:84:0xa6ab5481	RtmpOsPktBodyCopy	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:85:0xd9394ad6	RTMP_SetPeriodicTimer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:86:0x99e467c5	CFG80211OS_ScanEnd	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:87:0x3ca3ac20	AdapterBlockAllocateMemory	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:88:0x0b286a8e	RtmpOsMlmeUp	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:89:0xf7d5f5fc	RtmpOSNetDevClose	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:90:0xd039db07	VLAN_8023_Header_Copy	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:91:0x8a595f82	rausb_sndctrlpipe	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:92:0xc6ec5ccc	RtmpOsMsDelay	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:93:0xeae03afe	RTMPAllocateNdisPacket	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:94:0x0ccfc0ba	RtmpOsPktProtocolAssign	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:95:0x3d898806	RtmpOsCheckTaskLegality	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:96:0x3e839d40	RtmpOsSimpleStrtol	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:97:0x8037aa8f	RtmpOsNetDevGetPhyAddr	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:98:0xd5bf3ae6	RtmpOsTaskPidInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:99:0x97f85d2b	RtmpOSFileOpen	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:100:0x09c5110c	RtmpOsHtons	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:101:0xd27b1290	RtmpOsPktTailAdjust	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:102:0xccf87281	RTMP_GetCurrentSystemTime	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:103:0x7d8b7177	rausb_control_msg	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:104:0xa6542bac	RtmpOsSpinLockBh	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:105:0x99d99372	duplicate_pkt	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:106:0x733696ce	CFG80211OS_Scaning	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:107:0x0bfcc64f	os_alloc_mem_suspend	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:108:0xf245ad00	RtmpOsUsbContextGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:109:0x2a8ef6f7	Rtmp_Drv_Ops_usb	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/MODULE/os/linux/rt5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:110:0xc8334ac7	RtmpOsSemaWakeUp	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:111:0x39f5da0f	RTDebugFunc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:112:0x4b9fa9f2	CFG80211OS_UnRegister	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:113:0x11f39ccf	RtmpOsSemaDestory	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:114:0xc3d249f2	WpaSendMicFailureToWpaSupplicant	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:115:0x1ad7b59c	RtmpOsHtonl	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:116:0x65da63a8	RtmpOsPktInfPpaSend	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:117:0x871a18eb	RtmpOsUsbStatusGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:118:0x3467c600	RtmpOsTaskletSche	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:119:0x538744a8	RtmpOsGetUnalignedlong	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:120:0x71c720bc	RtmpOsTaskIsKilled	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:121:0xd5264d85	RtmpOsUsbInitRxDesc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:122:0x3a160525	rausb_register	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:123:0x7b793024	RTMPFreeNdisPacket	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:124:0x35a751ac	RtmpOsPktDataPtrAssign	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:125:0x5633edb2	RtmpOsNtohs	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:126:0x2c2669d4	RTPktOffsetLen	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:127:0x21801447	RtmpOSFileRead	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:128:0xdbf58a7e	RtmpOSFileWrite	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:129:0x36901c3c	RtmpOsPktOffsetInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:130:0x2f3f7b95	RTPktOffsetData	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:131:0x65fc3e5c	RtmpOsAllocateLock	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:132:0xfe1098e6	RtmpOsMaxScanDataGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:133:0x687a37a4	RtmpOsOpsInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:134:0xfdbdceb7	RtmpOSNetDevCreate	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:135:0xdc16231d	RtmpOsPktLenAssign	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:136:0x365c8fe7	RtmpOsTaskletInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:137:0x9516b438	rausb_buffer_alloc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:138:0x45214922	RtmpOsNtohl	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:139:0x8b3d0e35	RtmpOsGetNetDevName	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:140:0x56fd52df	RtmpOsSendWirelessEvent	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:141:0x48f5cb6f	RtmpOsWait	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:142:0x764eaeef	RtmpOsWirelessExtVerGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:143:0x4767d72a	RtmpOsIntLock	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:144:0x1d50a820	RtmpOsGetSystemUpTime	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:145:0xd44975a3	CFG80211_SupBandInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:146:0xed0140d2	RtmpOsGetUsbDevVendorID	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:147:0x193fb38d	CFG80211OS_TxStatus	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:148:0x3ee1d0fe	RtmpOsIntUnLock	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:149:0x136d691a	RtmpUtilInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:150:0x5fc05374	RtmpOSWrielessEventSend	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:151:0x185ed339	RtmpOSIRQRelease	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:152:0x0af1a957	RtmpOSNotifyRawData	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:153:0xc61df4d6	wext_notify_event_assoc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:154:0xaa60cae0	rausb_rcvctrlpipe	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:155:0xc2abd37f	CFG80211OS_ChanInfoGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:156:0xae4085d7	RtmpOsAtomicDec	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:157:0xdc8c5fa0	RtmpOsAtomicInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:158:0xca7d0eeb	RtmpOSTaskAttach	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:159:0x69262149	RtmpOsUsbUrbStatusGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:160:0x4c729fd9	RTMP_OS_Free_Rscs	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:161:0x6c4836bf	RT_RateSize	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:162:0xa21e4c3e	RtmpOsNetQueueStop	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:163:0xe7010449	RtmpOsPktClone	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:164:0xcde2d9e1	RtmpOsCmdUp	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:165:0xbf7393a2	RtmpOSTaskAlloc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:166:0x65281165	Sniff2BytesFromNdisBuffer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:167:0x9c4a4213	RtmpOsUsbInitHTTxDesc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:168:0xcfafb3de	rausb_kill_urb	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:169:0x3ef2f6dc	RtmpFlashRead	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:170:0xe3ba8848	RtmpOSTaskKill	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:171:0xcbfa638a	RTMP_OS_Alloc_Rsc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:172:0x534c5aa7	RtmpOsFileIsErr	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:173:0x266558db	CFG80211OS_ConnectResultInform	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:174:0x9a298c95	dump_urb	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:175:0xe4680990	RtmpOSTaskWait	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:176:0x42d43552	RtmpOsPktHeadBufExtend	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:177:0x2ce61a90	RTMP_OS_Release_Timer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:178:0xe16fa676	RtmpOsSemaInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:179:0x724da421	RtmpOSTaskInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:180:0x6fb0a696	RtmpOsPktReserve	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:181:0xa15e3322	RtmpOsVmalloc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:182:0xbeddb928	RtmpOsTaskletDataAssign	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:183:0x757d9021	RTDebugLevel	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:184:0xcbd2f311	RtmpOsGetUsbDevProductID	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:185:0x1e5101c5	RtmpOsNetQueueWake	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:186:0xc4254cf9	RtmpOSNetDevDetach	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:187:0x318bec25	RtmpOSNetDevAttach	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:188:0xc5b07ae7	RtmpDrvAllMacPrint	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:189:0xe9754ff2	CFG80211OS_RegHint11D	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:190:0xb87c21d0	RTMP_AllocateFragPacketBuffer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:191:0x23f2e8a7	wlan_802_11_to_802_3_packet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:192:0x630db713	RtmpOSNetDevFree	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:193:0xbcea85bd	CFG80211OS_RxMgmt	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:194:0xa1df5836	RTMPusecDelay	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:195:0x6fa1d303	RtmpOsPktIappMakeUp	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:196:0xf35a964e	RtmpDrvAllE2PPrint	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:197:0xd784ff10	RtmpOsUsbDmaMapping	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:198:0x4002e73f	RtmpOsSetNetDevType	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:199:0xa47b317e	DuplicatePacket	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:200:0xa796ed29	RtmpOsSpinUnLockBh	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:201:0xbfdf03e3	ClonePacket	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:202:0x87575108	RTMP_OS_Init_Timer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:203:0x49676d18	RtmpOsCmdDisplayLenCheck	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/NETIF/os/linux/Module.symvers:204:0x64f97162	RtmpOsPktNetDevGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/Makefile:140:#Support ANDROID_SUPPORT
rt5370/Makefile:141:HAS_ANDROID_SUPPORT=y
rt5370/Makefile:505:ifeq ($(HAS_ANDROID_SUPPORT),y)
rt5370/Makefile:506:WFLAGS += -DANDROID_SUPPORT
rt5370/UTIL/os/linux/config.mk:121:#Support ANDROID_SUPPORT
rt5370/UTIL/os/linux/config.mk:122:HAS_ANDROID_SUPPORT=n
rt5370/UTIL/os/linux/config.mk:486:ifeq ($(HAS_ANDROID_SUPPORT),y)
rt5370/UTIL/os/linux/config.mk:487:WFLAGS += -DANDROID_SUPPORT
rt5370/UTIL/os/linux/Module.symvers:1:0xcba9c897	RtmpOSFileClose	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:2:0xd491a5d5	RtmpOSTaskCustomize	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:3:0xfb6208bf	RTMP_OS_Mod_Timer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:4:0xfbff3a1f	RTMP_OS_Add_Timer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:5:0x9e5a6d2e	RtmpOsFreeSpinLock	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:6:0x226fb53f	RtmpOSFileSeek	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:7:0xfc59bb7a	CFG80211OS_NewSta	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:8:0xe66efdb6	RtmpOsGetUnaligned	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:9:0x525bffc7	RtmpOsSetPktNetDev	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:10:0x9b799f28	ExpandPacket	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:11:0xb7252934	Cfg80211_Chan	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:12:0xa3cdd0cb	RtmpOSFSInfoChange	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:13:0x3bb7962c	RtmpOsSetNetDevTypeMonitor	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:14:0xae3a7d25	CFG80211OS_SupBandReInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:15:0xb97a8c82	RtmpMeshDown	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:16:0x647214df	os_alloc_mem	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:17:0x694b56bf	RtmpOsTickUnitGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:18:0x6f1c35ab	RtmpOSTaskFree	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:19:0xd082bb60	rausb_submit_urb	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:20:0x6a8f74a6	RtmpOsSemaInitLocked	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:21:0x97b62a09	RTMP_QueryPacketInfo	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:22:0x7902adef	rausb_get_dev	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:23:0x72c72167	RtmpOsUsbUrbLenGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:24:0x9f901ef6	RtmpOsGetNetDevPriv	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:25:0x3a929611	RtmpOsGetUnaligned32	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:26:0xc9a09db8	RtmpOsTaskDataGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:27:0xadbe7601	RTMP_GetCurrentSystemTick	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:28:0x00248b5d	RtmpOsUsbEmptyUrbCheck	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:29:0x547c5404	RtmpOsCopyFromUser	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:30:0xd67105a9	CFG80211OS_RegHint	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:31:0xbdfb0047	RtmpOSNetDevIsUp	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:32:0x1dccb90d	RtmpDrvMaxRateGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:33:0x828ee54f	RtmpOsGetPid	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:34:0xef619300	RtmpOsPktTailBufExtend	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:35:0x2f912952	RtmpOSNetDevAddrSet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:36:0x3d35af3a	RtmpOsTimerAfter	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:37:0xd7f7dc8d	os_free_mem	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:38:0x8b647a20	RtmpOsTaskletKill	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:39:0xa6f17d87	RTMPL2FrameTxAction	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:40:0x1c0bd89d	RtmpOsCopyToUser	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:41:0xfea1f01e	duplicate_pkt_with_VLAN	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:42:0xd158cb5e	RtmpOsAtomicInterlockedExchange	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:43:0xb060b677	RTPktOffsetCB	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:44:0xd62a2cb4	RtmpOsIsInInterrupt	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:45:0x0244b746	rausb_deregister	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:46:0x08acbc66	RtmpOsWlanEventSet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:47:0x3f8c832c	RtmpOsTaskWakeUp	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:48:0x32790b04	RtmpOsSemaWaitInterruptible	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:49:0x642a470b	CFG80211OS_ChanNumGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:50:0xf88610c4	send_monitor_packets	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:51:0x2300115d	RtmpOsVfree	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:52:0x7a205d9f	RtmpOSWrielessEventSendExt	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:53:0x2ac0c48c	RtmpFlashWrite	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:54:0x2a8c7ba1	CFG80211OS_DelSta	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:55:0x816426e2	rausb_buffer_free	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:56:0xb0529cc4	rausb_put_dev	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:57:0xf3c4d89e	RtmpOSTaskNotifyToExit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:58:0xe8c29f63	RtPrivIoctlSetVal	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:59:0xdc40b459	RtmpThreadPidKill	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:60:0xd9284062	duplicate_pkt_with_TKIP_MIC	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:61:0xb0e75266	hex_dump	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:62:0xda8441a6	rtstrchr	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:63:0x54457b04	RtmpOsNetQueueStart	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:64:0x6990e408	RtmpOSNetDevProtect	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:65:0x5312eccd	RtmpOsTimerBefore	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:66:0x7ef17813	RtmpOSNetPktAlloc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:67:0xa2039035	CFG80211OS_ChanInfoInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:68:0x56b2cb81	RtmpOsPktInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:69:0x61e836a8	RtmpDevPrivFlagsGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:70:0x4c5ee785	RtmpOsSetNetDevPriv	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:71:0xa1b7c180	RtmpOsStatsAlloc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:72:0xd0bcb543	RtmpOsDCacheFlush	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:73:0x2a78d9eb	RtmpOsIsPktCloned	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:74:0x04eee06a	rausb_free_urb	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:75:0x0cbd1cb1	RTMP_OS_Del_Timer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:76:0xf470bb21	RtmpOsAtomicDestroy	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:77:0x2e480d54	RtmpOsUsbUrbDataGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:78:0x6603be3c	CFG80211OS_BandInfoGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:79:0x22fb9e6b	RtmpOsPktCopy	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:80:0x9842b8c6	rausb_alloc_urb	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:81:0x0cc176b2	RtmpOsAtomicRead	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:82:0x5e532fe9	RtmpOsPktRcvHandle	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:83:0x33ef9726	ralinkrate	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:84:0xa6ab5481	RtmpOsPktBodyCopy	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:85:0xd9394ad6	RTMP_SetPeriodicTimer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:86:0x99e467c5	CFG80211OS_ScanEnd	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:87:0x3ca3ac20	AdapterBlockAllocateMemory	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:88:0x0b286a8e	RtmpOsMlmeUp	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:89:0xf7d5f5fc	RtmpOSNetDevClose	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:90:0xd039db07	VLAN_8023_Header_Copy	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:91:0x8a595f82	rausb_sndctrlpipe	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:92:0xc6ec5ccc	RtmpOsMsDelay	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:93:0xeae03afe	RTMPAllocateNdisPacket	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:94:0x0ccfc0ba	RtmpOsPktProtocolAssign	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:95:0x3d898806	RtmpOsCheckTaskLegality	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:96:0x3e839d40	RtmpOsSimpleStrtol	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:97:0x8037aa8f	RtmpOsNetDevGetPhyAddr	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:98:0xd5bf3ae6	RtmpOsTaskPidInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:99:0x97f85d2b	RtmpOSFileOpen	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:100:0x09c5110c	RtmpOsHtons	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:101:0xd27b1290	RtmpOsPktTailAdjust	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:102:0xccf87281	RTMP_GetCurrentSystemTime	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:103:0x7d8b7177	rausb_control_msg	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:104:0xa6542bac	RtmpOsSpinLockBh	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:105:0x99d99372	duplicate_pkt	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:106:0x733696ce	CFG80211OS_Scaning	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:107:0x0bfcc64f	os_alloc_mem_suspend	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:108:0xf245ad00	RtmpOsUsbContextGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:109:0xc8334ac7	RtmpOsSemaWakeUp	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:110:0x39f5da0f	RTDebugFunc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:111:0x4b9fa9f2	CFG80211OS_UnRegister	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:112:0x11f39ccf	RtmpOsSemaDestory	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:113:0xc3d249f2	WpaSendMicFailureToWpaSupplicant	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:114:0x1ad7b59c	RtmpOsHtonl	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:115:0x65da63a8	RtmpOsPktInfPpaSend	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:116:0x871a18eb	RtmpOsUsbStatusGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:117:0x3467c600	RtmpOsTaskletSche	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:118:0x538744a8	RtmpOsGetUnalignedlong	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:119:0x71c720bc	RtmpOsTaskIsKilled	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:120:0xd5264d85	RtmpOsUsbInitRxDesc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:121:0x3a160525	rausb_register	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:122:0x7b793024	RTMPFreeNdisPacket	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:123:0x35a751ac	RtmpOsPktDataPtrAssign	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:124:0x5633edb2	RtmpOsNtohs	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:125:0x2c2669d4	RTPktOffsetLen	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:126:0x21801447	RtmpOSFileRead	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:127:0xdbf58a7e	RtmpOSFileWrite	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:128:0x36901c3c	RtmpOsPktOffsetInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:129:0x2f3f7b95	RTPktOffsetData	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:130:0x65fc3e5c	RtmpOsAllocateLock	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:131:0xfe1098e6	RtmpOsMaxScanDataGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:132:0x687a37a4	RtmpOsOpsInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:133:0xfdbdceb7	RtmpOSNetDevCreate	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:134:0xdc16231d	RtmpOsPktLenAssign	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:135:0x365c8fe7	RtmpOsTaskletInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:136:0x9516b438	rausb_buffer_alloc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:137:0x45214922	RtmpOsNtohl	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:138:0x8b3d0e35	RtmpOsGetNetDevName	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:139:0x56fd52df	RtmpOsSendWirelessEvent	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:140:0x48f5cb6f	RtmpOsWait	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:141:0x764eaeef	RtmpOsWirelessExtVerGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:142:0x4767d72a	RtmpOsIntLock	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:143:0x1d50a820	RtmpOsGetSystemUpTime	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:144:0xd44975a3	CFG80211_SupBandInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:145:0xed0140d2	RtmpOsGetUsbDevVendorID	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:146:0x193fb38d	CFG80211OS_TxStatus	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:147:0x3ee1d0fe	RtmpOsIntUnLock	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:148:0x136d691a	RtmpUtilInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:149:0x5fc05374	RtmpOSWrielessEventSend	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:150:0x185ed339	RtmpOSIRQRelease	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:151:0x0af1a957	RtmpOSNotifyRawData	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:152:0xc61df4d6	wext_notify_event_assoc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:153:0xaa60cae0	rausb_rcvctrlpipe	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:154:0xc2abd37f	CFG80211OS_ChanInfoGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:155:0xae4085d7	RtmpOsAtomicDec	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:156:0xdc8c5fa0	RtmpOsAtomicInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:157:0xca7d0eeb	RtmpOSTaskAttach	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:158:0x69262149	RtmpOsUsbUrbStatusGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:159:0x4c729fd9	RTMP_OS_Free_Rscs	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:160:0x6c4836bf	RT_RateSize	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:161:0xa21e4c3e	RtmpOsNetQueueStop	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:162:0xe7010449	RtmpOsPktClone	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:163:0xcde2d9e1	RtmpOsCmdUp	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:164:0xbf7393a2	RtmpOSTaskAlloc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:165:0x65281165	Sniff2BytesFromNdisBuffer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:166:0x9c4a4213	RtmpOsUsbInitHTTxDesc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:167:0xcfafb3de	rausb_kill_urb	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:168:0x3ef2f6dc	RtmpFlashRead	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:169:0xe3ba8848	RtmpOSTaskKill	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:170:0xcbfa638a	RTMP_OS_Alloc_Rsc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:171:0x534c5aa7	RtmpOsFileIsErr	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:172:0x266558db	CFG80211OS_ConnectResultInform	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:173:0x9a298c95	dump_urb	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:174:0xe4680990	RtmpOSTaskWait	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:175:0x42d43552	RtmpOsPktHeadBufExtend	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:176:0x2ce61a90	RTMP_OS_Release_Timer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:177:0xe16fa676	RtmpOsSemaInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:178:0x724da421	RtmpOSTaskInit	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:179:0x6fb0a696	RtmpOsPktReserve	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:180:0xa15e3322	RtmpOsVmalloc	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:181:0xbeddb928	RtmpOsTaskletDataAssign	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:182:0x757d9021	RTDebugLevel	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:183:0xcbd2f311	RtmpOsGetUsbDevProductID	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:184:0x1e5101c5	RtmpOsNetQueueWake	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:185:0xc4254cf9	RtmpOSNetDevDetach	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:186:0x318bec25	RtmpOSNetDevAttach	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:187:0xc5b07ae7	RtmpDrvAllMacPrint	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:188:0xe9754ff2	CFG80211OS_RegHint11D	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:189:0xb87c21d0	RTMP_AllocateFragPacketBuffer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:190:0x23f2e8a7	wlan_802_11_to_802_3_packet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:191:0x630db713	RtmpOSNetDevFree	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:192:0xbcea85bd	CFG80211OS_RxMgmt	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:193:0xa1df5836	RTMPusecDelay	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:194:0x6fa1d303	RtmpOsPktIappMakeUp	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:195:0xf35a964e	RtmpDrvAllE2PPrint	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:196:0xd784ff10	RtmpOsUsbDmaMapping	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:197:0x4002e73f	RtmpOsSetNetDevType	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:198:0xa47b317e	DuplicatePacket	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:199:0xa796ed29	RtmpOsSpinUnLockBh	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:200:0xbfdf03e3	ClonePacket	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:201:0x87575108	RTMP_OS_Init_Timer	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:202:0x49676d18	RtmpOsCmdDisplayLenCheck	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rt5370/UTIL/os/linux/Module.symvers:203:0x64f97162	RtmpOsPktNetDevGet	/home/ralink/Android_Samba/Customer/Amlogic/rt5370/UTIL/os/linux/rtutil5572sta	EXPORT_SYMBOL
rtl8xxx_CU/os_dep/osdep_service.c:1272:#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_CU/os_dep/osdep_service.c:1273:static android_suspend_lock_t rtw_suspend_lock ={
rtl8xxx_CU/os_dep/osdep_service.c:1282:	#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_CU/os_dep/osdep_service.c:1283:	android_init_suspend_lock(&rtw_suspend_lock);
rtl8xxx_CU/os_dep/osdep_service.c:1291:	#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_CU/os_dep/osdep_service.c:1292:	android_uninit_suspend_lock(&rtw_suspend_lock);
rtl8xxx_CU/os_dep/osdep_service.c:1300:	#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_CU/os_dep/osdep_service.c:1301:	android_lock_suspend(&rtw_suspend_lock);
rtl8xxx_CU/os_dep/osdep_service.c:1309:	#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_CU/os_dep/osdep_service.c:1310:	android_unlock_suspend(&rtw_suspend_lock);
rtl8xxx_CU/os_dep/linux/ioctl_cfg80211.c:2450:	printk("MStar Android!\n");
rtl8xxx_CU/os_dep/linux/ioctl_cfg80211.c:2451:	if((wdev_to_priv(padapter->rtw_wdev))->bandroid_scan == _FALSE)
rtl8xxx_CU/os_dep/linux/ioctl_cfg80211.c:2459:			printk("Android hasn't attached yet!\n");
rtl8xxx_CU/os_dep/linux/ioctl_cfg80211.c:5100:	pwdev_priv->bandroid_scan = _FALSE;
rtl8xxx_CU/os_dep/linux/os_intfs.c:1631:	wdev_to_priv(padapter->rtw_wdev)->bandroid_scan = _FALSE;
rtl8xxx_CU/os_dep/linux/os_intfs.c:2189:#ifndef CONFIG_ANDROID
rtl8xxx_CU/os_dep/linux/os_intfs.c:2222:	wdev_to_priv(padapter->rtw_wdev)->bandroid_scan = _FALSE;
rtl8xxx_CU/os_dep/linux/rtw_android.c:24:#include <rtw_android.h>
rtl8xxx_CU/os_dep/linux/rtw_android.c:39:const char *android_wifi_cmd_str[ANDROID_WIFI_CMD_MAX] = {
rtl8xxx_CU/os_dep/linux/rtw_android.c:98:typedef struct android_wifi_priv_cmd {
rtl8xxx_CU/os_dep/linux/rtw_android.c:108:} android_wifi_priv_cmd;
rtl8xxx_CU/os_dep/linux/rtw_android.c:116: * wl_android_wifi_on
rtl8xxx_CU/os_dep/linux/rtw_android.c:122:static int wl_android_set_pno_setup(struct net_device *dev, char *command, int total_len)
rtl8xxx_CU/os_dep/linux/rtw_android.c:229:int rtw_android_cmdstr_to_num(char *cmdstr)
rtl8xxx_CU/os_dep/linux/rtw_android.c:232:	for(cmd_num=0 ; cmd_num<ANDROID_WIFI_CMD_MAX; cmd_num++)
rtl8xxx_CU/os_dep/linux/rtw_android.c:233:		if(0 == strnicmp(cmdstr , android_wifi_cmd_str[cmd_num], strlen(android_wifi_cmd_str[cmd_num])) )
rtl8xxx_CU/os_dep/linux/rtw_android.c:239:int rtw_android_get_rssi(struct net_device *net, char *command, int total_len)
rtl8xxx_CU/os_dep/linux/rtw_android.c:254:int rtw_android_get_link_speed(struct net_device *net, char *command, int total_len)
rtl8xxx_CU/os_dep/linux/rtw_android.c:268:int rtw_android_get_macaddr(struct net_device *net, char *command, int total_len)
rtl8xxx_CU/os_dep/linux/rtw_android.c:277:int rtw_android_set_country(struct net_device *net, char *command, int total_len)
rtl8xxx_CU/os_dep/linux/rtw_android.c:280:	char *country_code = command + strlen(android_wifi_cmd_str[ANDROID_WIFI_CMD_COUNTRY]) + 1;
rtl8xxx_CU/os_dep/linux/rtw_android.c:288:int rtw_android_get_p2p_dev_addr(struct net_device *net, char *command, int total_len)
rtl8xxx_CU/os_dep/linux/rtw_android.c:300:int rtw_android_set_block(struct net_device *net, char *command, int total_len)
rtl8xxx_CU/os_dep/linux/rtw_android.c:304:	char *block_value = command + strlen(android_wifi_cmd_str[ANDROID_WIFI_CMD_BLOCK]) + 1;
rtl8xxx_CU/os_dep/linux/rtw_android.c:329:int rtw_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd)
rtl8xxx_CU/os_dep/linux/rtw_android.c:335:	android_wifi_priv_cmd priv_cmd;
rtl8xxx_CU/os_dep/linux/rtw_android.c:343:	if (copy_from_user(&priv_cmd, ifr->ifr_data, sizeof(android_wifi_priv_cmd))) {
rtl8xxx_CU/os_dep/linux/rtw_android.c:366:	DBG_871X("%s: Android private cmd \"%s\" on %s\n"
rtl8xxx_CU/os_dep/linux/rtw_android.c:369:	cmd_num = rtw_android_cmdstr_to_num(command);
rtl8xxx_CU/os_dep/linux/rtw_android.c:372:	case ANDROID_WIFI_CMD_START:
rtl8xxx_CU/os_dep/linux/rtw_android.c:373:		//bytes_written = wl_android_wifi_on(net);
rtl8xxx_CU/os_dep/linux/rtw_android.c:375:	case ANDROID_WIFI_CMD_SETFWPATH:
rtl8xxx_CU/os_dep/linux/rtw_android.c:388:	case ANDROID_WIFI_CMD_STOP:
rtl8xxx_CU/os_dep/linux/rtw_android.c:389:		//bytes_written = wl_android_wifi_off(net);
rtl8xxx_CU/os_dep/linux/rtw_android.c:392:	case ANDROID_WIFI_CMD_SCAN_ACTIVE:
rtl8xxx_CU/os_dep/linux/rtw_android.c:396:		(wdev_to_priv(net->ieee80211_ptr))->bandroid_scan = _TRUE;	
rtl8xxx_CU/os_dep/linux/rtw_android.c:400:	case ANDROID_WIFI_CMD_SCAN_PASSIVE:
rtl8xxx_CU/os_dep/linux/rtw_android.c:404:	case ANDROID_WIFI_CMD_RSSI:
rtl8xxx_CU/os_dep/linux/rtw_android.c:405:		bytes_written = rtw_android_get_rssi(net, command, priv_cmd.total_len);
rtl8xxx_CU/os_dep/linux/rtw_android.c:407:	case ANDROID_WIFI_CMD_LINKSPEED:
rtl8xxx_CU/os_dep/linux/rtw_android.c:408:		bytes_written = rtw_android_get_link_speed(net, command, priv_cmd.total_len);
rtl8xxx_CU/os_dep/linux/rtw_android.c:411:	case ANDROID_WIFI_CMD_MACADDR:
rtl8xxx_CU/os_dep/linux/rtw_android.c:412:		bytes_written = rtw_android_get_macaddr(net, command, priv_cmd.total_len);
rtl8xxx_CU/os_dep/linux/rtw_android.c:415:	case ANDROID_WIFI_CMD_BLOCK:
rtl8xxx_CU/os_dep/linux/rtw_android.c:416:		bytes_written = rtw_android_set_block(net, command, priv_cmd.total_len);
rtl8xxx_CU/os_dep/linux/rtw_android.c:419:	case ANDROID_WIFI_CMD_RXFILTER_START:
rtl8xxx_CU/os_dep/linux/rtw_android.c:422:	case ANDROID_WIFI_CMD_RXFILTER_STOP:
rtl8xxx_CU/os_dep/linux/rtw_android.c:425:	case ANDROID_WIFI_CMD_RXFILTER_ADD:
rtl8xxx_CU/os_dep/linux/rtw_android.c:429:	case ANDROID_WIFI_CMD_RXFILTER_REMOVE:
rtl8xxx_CU/os_dep/linux/rtw_android.c:434:	case ANDROID_WIFI_CMD_BTCOEXSCAN_START:
rtl8xxx_CU/os_dep/linux/rtw_android.c:437:	case ANDROID_WIFI_CMD_BTCOEXSCAN_STOP:
rtl8xxx_CU/os_dep/linux/rtw_android.c:440:	case ANDROID_WIFI_CMD_BTCOEXMODE:
rtl8xxx_CU/os_dep/linux/rtw_android.c:453:	case ANDROID_WIFI_CMD_SETSUSPENDOPT:
rtl8xxx_CU/os_dep/linux/rtw_android.c:454:		//bytes_written = wl_android_set_suspendopt(net, command, priv_cmd.total_len);
rtl8xxx_CU/os_dep/linux/rtw_android.c:457:	case ANDROID_WIFI_CMD_SETBAND:
rtl8xxx_CU/os_dep/linux/rtw_android.c:461:	case ANDROID_WIFI_CMD_GETBAND:
rtl8xxx_CU/os_dep/linux/rtw_android.c:462:		//bytes_written = wl_android_get_band(net, command, priv_cmd.total_len);
rtl8xxx_CU/os_dep/linux/rtw_android.c:465:	case ANDROID_WIFI_CMD_COUNTRY:
rtl8xxx_CU/os_dep/linux/rtw_android.c:466:		bytes_written = rtw_android_set_country(net, command, priv_cmd.total_len);
rtl8xxx_CU/os_dep/linux/rtw_android.c:470:	case ANDROID_WIFI_CMD_PNOSSIDCLR_SET:
rtl8xxx_CU/os_dep/linux/rtw_android.c:473:	case ANDROID_WIFI_CMD_PNOSETUP_SET:
rtl8xxx_CU/os_dep/linux/rtw_android.c:474:		//bytes_written = wl_android_set_pno_setup(net, command, priv_cmd.total_len);
rtl8xxx_CU/os_dep/linux/rtw_android.c:476:	case ANDROID_WIFI_CMD_PNOENABLE_SET:
rtl8xxx_CU/os_dep/linux/rtw_android.c:482:	case ANDROID_WIFI_CMD_P2P_DEV_ADDR:
rtl8xxx_CU/os_dep/linux/rtw_android.c:483:		bytes_written = rtw_android_get_p2p_dev_addr(net, command, priv_cmd.total_len);
rtl8xxx_CU/os_dep/linux/rtw_android.c:485:	case ANDROID_WIFI_CMD_P2P_SET_NOA:
rtl8xxx_CU/os_dep/linux/rtw_android.c:489:	case ANDROID_WIFI_CMD_P2P_GET_NOA:
rtl8xxx_CU/os_dep/linux/rtw_android.c:492:	case ANDROID_WIFI_CMD_P2P_SET_PS:
rtl8xxx_CU/os_dep/linux/rtw_android.c:498:	case ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE:
rtl8xxx_CU/os_dep/linux/rtw_android.c:500:		int skip = strlen(android_wifi_cmd_str[ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE]) + 3;
rtl8xxx_CU/os_dep/linux/rtw_android.c:507:	case ANDROID_WIFI_CMD_WFD_ENABLE:
rtl8xxx_CU/os_dep/linux/rtw_android.c:521:	case ANDROID_WIFI_CMD_WFD_DISABLE:
rtl8xxx_CU/os_dep/linux/rtw_android.c:534:	case ANDROID_WIFI_CMD_WFD_SET_TCPPORT:
rtl8xxx_CU/os_dep/linux/rtw_android.c:547:	case ANDROID_WIFI_CMD_WFD_SET_MAX_TPUT:
rtl8xxx_CU/os_dep/linux/rtw_android.c:553:	case ANDROID_WIFI_CMD_WFD_SET_DEVTYPE:
rtl8xxx_CU/os_dep/linux/rtw_android.c:605: * Functions for Android WiFi card detection
rtl8xxx_CU/os_dep/linux/rtw_android.c:617:int rtw_android_wifictrl_func_add(void)
rtl8xxx_CU/os_dep/linux/rtw_android.c:638:void rtw_android_wifictrl_func_del(void)
rtl8xxx_CU/os_dep/linux/rtw_android.c:647:void *wl_android_prealloc(int section, unsigned long size)
rtl8xxx_CU/os_dep/linux/usb_intf.c:1476:#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:2111:		#ifndef CONFIG_ANDROID
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:2995:		#if defined(CONFIG_ANDROID) || 1
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:6185:		// free network queue for Android's timming issue
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:8251:#include <rtw_android.h>
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:8348:#ifdef CONFIG_ANDROID
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:8351:	i = rtw_android_cmdstr_to_num(ext);
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:8354:		case ANDROID_WIFI_CMD_START :
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:8357:		case ANDROID_WIFI_CMD_STOP :
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:8360:		case ANDROID_WIFI_CMD_RSSI :
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:8372:		case ANDROID_WIFI_CMD_LINKSPEED :
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:8378:		case ANDROID_WIFI_CMD_MACADDR :
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:8381:		case ANDROID_WIFI_CMD_SCAN_ACTIVE :
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:8387:		case ANDROID_WIFI_CMD_SCAN_PASSIVE :
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:8394:		case ANDROID_WIFI_CMD_COUNTRY :
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:8419:#endif //end of CONFIG_ANDROID
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:11299:#include <rtw_android.h>
rtl8xxx_CU/os_dep/linux/ioctl_linux.c:11321:			ret = rtw_android_priv_cmd(dev, rq, cmd);
rtl8xxx_CU/os_dep/linux/pci_intf.c:1951:#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_CU/include/rtw_android.h:21:#ifndef __RTW_ANDROID_H__
rtl8xxx_CU/include/rtw_android.h:22:#define __RTW_ANDROID_H__
rtl8xxx_CU/include/rtw_android.h:27:enum ANDROID_WIFI_CMD {
rtl8xxx_CU/include/rtw_android.h:28:	ANDROID_WIFI_CMD_START,				
rtl8xxx_CU/include/rtw_android.h:29:	ANDROID_WIFI_CMD_STOP,			
rtl8xxx_CU/include/rtw_android.h:30:	ANDROID_WIFI_CMD_SCAN_ACTIVE,
rtl8xxx_CU/include/rtw_android.h:31:	ANDROID_WIFI_CMD_SCAN_PASSIVE,		
rtl8xxx_CU/include/rtw_android.h:32:	ANDROID_WIFI_CMD_RSSI,	
rtl8xxx_CU/include/rtw_android.h:33:	ANDROID_WIFI_CMD_LINKSPEED,
rtl8xxx_CU/include/rtw_android.h:34:	ANDROID_WIFI_CMD_RXFILTER_START,
rtl8xxx_CU/include/rtw_android.h:35:	ANDROID_WIFI_CMD_RXFILTER_STOP,	
rtl8xxx_CU/include/rtw_android.h:36:	ANDROID_WIFI_CMD_RXFILTER_ADD,	
rtl8xxx_CU/include/rtw_android.h:37:	ANDROID_WIFI_CMD_RXFILTER_REMOVE,
rtl8xxx_CU/include/rtw_android.h:38:	ANDROID_WIFI_CMD_BTCOEXSCAN_START,
rtl8xxx_CU/include/rtw_android.h:39:	ANDROID_WIFI_CMD_BTCOEXSCAN_STOP,
rtl8xxx_CU/include/rtw_android.h:40:	ANDROID_WIFI_CMD_BTCOEXMODE,
rtl8xxx_CU/include/rtw_android.h:41:	ANDROID_WIFI_CMD_SETSUSPENDOPT,
rtl8xxx_CU/include/rtw_android.h:42:	ANDROID_WIFI_CMD_P2P_DEV_ADDR,	
rtl8xxx_CU/include/rtw_android.h:43:	ANDROID_WIFI_CMD_SETFWPATH,		
rtl8xxx_CU/include/rtw_android.h:44:	ANDROID_WIFI_CMD_SETBAND,		
rtl8xxx_CU/include/rtw_android.h:45:	ANDROID_WIFI_CMD_GETBAND,			
rtl8xxx_CU/include/rtw_android.h:46:	ANDROID_WIFI_CMD_COUNTRY,			
rtl8xxx_CU/include/rtw_android.h:47:	ANDROID_WIFI_CMD_P2P_SET_NOA,
rtl8xxx_CU/include/rtw_android.h:48:	ANDROID_WIFI_CMD_P2P_GET_NOA,	
rtl8xxx_CU/include/rtw_android.h:49:	ANDROID_WIFI_CMD_P2P_SET_PS,	
rtl8xxx_CU/include/rtw_android.h:50:	ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE,
rtl8xxx_CU/include/rtw_android.h:52:	ANDROID_WIFI_CMD_PNOSSIDCLR_SET,
rtl8xxx_CU/include/rtw_android.h:53:	ANDROID_WIFI_CMD_PNOSETUP_SET,
rtl8xxx_CU/include/rtw_android.h:54:	ANDROID_WIFI_CMD_PNOENABLE_SET,
rtl8xxx_CU/include/rtw_android.h:55:	ANDROID_WIFI_CMD_PNODEBUG_SET,
rtl8xxx_CU/include/rtw_android.h:58:	ANDROID_WIFI_CMD_MACADDR,
rtl8xxx_CU/include/rtw_android.h:60:	ANDROID_WIFI_CMD_BLOCK,
rtl8xxx_CU/include/rtw_android.h:62:	ANDROID_WIFI_CMD_WFD_ENABLE,
rtl8xxx_CU/include/rtw_android.h:63:	ANDROID_WIFI_CMD_WFD_DISABLE,
rtl8xxx_CU/include/rtw_android.h:65:	ANDROID_WIFI_CMD_WFD_SET_TCPPORT,
rtl8xxx_CU/include/rtw_android.h:66:	ANDROID_WIFI_CMD_WFD_SET_MAX_TPUT,
rtl8xxx_CU/include/rtw_android.h:67:	ANDROID_WIFI_CMD_WFD_SET_DEVTYPE,
rtl8xxx_CU/include/rtw_android.h:69:	ANDROID_WIFI_CMD_MAX
rtl8xxx_CU/include/rtw_android.h:72:int rtw_android_cmdstr_to_num(char *cmdstr);
rtl8xxx_CU/include/rtw_android.h:73:int rtw_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd);
rtl8xxx_CU/include/rtw_android.h:76:int rtw_android_wifictrl_func_add(void);
rtl8xxx_CU/include/rtw_android.h:77:void rtw_android_wifictrl_func_del(void);
rtl8xxx_CU/include/rtw_android.h:78:void* wl_android_prealloc(int section, unsigned long size);
rtl8xxx_CU/include/rtw_android.h:85:static int rtw_android_wifictrl_func_add(void) { return 0; }
rtl8xxx_CU/include/rtw_android.h:86:static void rtw_android_wifictrl_func_del(void) {}
rtl8xxx_CU/include/rtw_android.h:89:#endif //__RTW_ANDROID_H__
rtl8xxx_CU/include/drv_conf.h:30://Older Android kernel doesn't has CONFIG_ANDROID defined,
rtl8xxx_CU/include/drv_conf.h:31://add this to force CONFIG_ANDROID defined
rtl8xxx_CU/include/drv_conf.h:32:#ifdef CONFIG_PLATFORM_ANDROID
rtl8xxx_CU/include/drv_conf.h:33:#define CONFIG_ANDROID
rtl8xxx_CU/include/drv_conf.h:36:#ifdef CONFIG_ANDROID
rtl8xxx_CU/include/drv_conf.h:37://Some Android build will restart the UI while non-printable ascii is passed
rtl8xxx_CU/include/drv_conf.h:39://for Android here. If you are sure there is no risk on your system about this,
rtl8xxx_CU/include/drv_conf.h:47://Android expect dbm as the rx signal strength unit
rtl8xxx_CU/include/drv_conf.h:56:#if defined(CONFIG_ANDROID_POWER) && defined (CONFIG_RESUME_IN_WORKQUEUE)
rtl8xxx_CU/include/drv_conf.h:57:	#warning "You have CONFIG_ANDROID_POWER enabled in your system, we disable CONFIG_RESUME_IN_WORKQUEUE automatically"
rtl8xxx_CU/include/drv_conf.h:62:	#if !defined( CONFIG_WAKELOCK) && !defined(CONFIG_ANDROID_POWER)
rtl8xxx_CU/include/drv_conf.h:63:	#error "enable CONFIG_RESUME_IN_WORKQUEUE without CONFIG_WAKELOCK or CONFIG_ANDROID_POWER will suffer from the danger of wifi's unfunctionality..."
rtl8xxx_CU/include/rtw_pwrctrl.h:273:	#ifdef CONFIG_ANDROID_POWER
rtl8xxx_CU/include/rtw_pwrctrl.h:274:	android_early_suspend_t early_suspend;
rtl8xxx_CU/include/rtw_pwrctrl.h:339:#if defined(CONFIG_HAS_EARLYSUSPEND ) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_CU/include/rtw_pwrctrl.h:351:#endif /* CONFIG_HAS_EARLYSUSPEND || CONFIG_ANDROID_POWER */
rtl8xxx_CU/include/autoconf.h:41:	#define RTW_USE_CFG80211_STA_EVENT /* Opne this for Android 4.1's wpa_supplicant */
rtl8xxx_CU/include/ioctl_cfg80211.h:70:	u8 bandroid_scan;
rtl8xxx_CU/include/osdep_service.h:1517:#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_CU/include/osdep_service.h:1518:#include <linux/android_power.h>
rtl8xxx_CU/Makefile:43:CONFIG_PLATFORM_ANDROID_X86 = n
rtl8xxx_CU/Makefile:69:CONFIG_PLATFORM_ARM_ANDROID_AML8726M	=	y
rtl8xxx_CU/Makefile:167:			os_dep/linux/rtw_android.o
rtl8xxx_CU/Makefile:247:EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN -DCONFIG_PLATFORM_ANDROID -DCONFIG_PLATFORM_SHUTTLE
rtl8xxx_CU/Makefile:249:KSRC := $(shell pwd)/../../../Android/kernel
rtl8xxx_CU/Makefile:270:ifeq ($(CONFIG_PLATFORM_ANDROID_X86), y)
rtl8xxx_CU/Makefile:274:CROSS_COMPILE := /media/DATA-2/android-x86/ics-x86_20120130/prebuilt/linux-x86/toolchain/i686-unknown-linux-gnu-4.2.1/bin/i686-unknown-linux-gnu-
rtl8xxx_CU/Makefile:275:KSRC := /media/DATA-2/android-x86/ics-x86_20120130/out/target/product/generic_x86/obj/kernel
rtl8xxx_CU/Makefile:393:CROSS_COMPILE := /home/android_sdk/nvidia/tegra-16r3-partner-android-4.1_20120723/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
rtl8xxx_CU/Makefile:394:KSRC := /home/android_sdk/nvidia/tegra-16r3-partner-android-4.1_20120723/out/target/product/cardhu/obj/KERNEL
rtl8xxx_CU/Makefile:401:CROSS_COMPILE := /home/android_sdk/nvidia/tegra-17r9-partner-android-4.2-dalmore_20130131/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6/bin/arm-eabi-
rtl8xxx_CU/Makefile:402:KSRC := /home/android_sdk/nvidia/tegra-17r9-partner-android-4.2-dalmore_20130131/out/target/product/dalmore/obj/KERNEL
rtl8xxx_CU/Makefile:409:CROSS_COMPILE := /home/android_sdk/Telechips/SDK_2304_20110613/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
rtl8xxx_CU/Makefile:410:KSRC := /home/android_sdk/Telechips/SDK_2304_20110613/kernel
rtl8xxx_CU/Makefile:417:CROSS_COMPILE := /home/android_sdk/Telechips/v12.06_r1-tcc-android-4.0.4/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
rtl8xxx_CU/Makefile:418:KSRC := /home/android_sdk/Telechips/v12.06_r1-tcc-android-4.0.4/kernel
rtl8xxx_CU/Makefile:423:EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN -DCONFIG_PLATFORM_ANDROID -DCONFIG_PLATFORM_ROCKCHIPS -DCONFIG_MINIMAL_MEMORY_USAGE
rtl8xxx_CU/Makefile:434:#KSRC := /media/DATA-1/aosp/android-omap-panda-3.0_20120104
rtl8xxx_CU/Makefile:435:CROSS_COMPILE := /media/DATA-1/android-4.0/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
rtl8xxx_CU/Makefile:436:KSRC := /media/DATA-1/android-4.0/panda_kernel/omap
rtl8xxx_CU/Makefile:469:ifeq ($(CONFIG_PLATFORM_ARM_ANDROID_AML8726M), y)
rtl8xxx_CU/core/rtw_pwrctrl.c:1118:	#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_CU/core/rtw_pwrctrl.c:1121:	#endif //CONFIG_HAS_EARLYSUSPEND || CONFIG_ANDROID_POWER
rtl8xxx_CU/core/rtw_pwrctrl.c:1146:	#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_CU/core/rtw_pwrctrl.c:1148:	#endif //CONFIG_HAS_EARLYSUSPEND || CONFIG_ANDROID_POWER
rtl8xxx_CU/core/rtw_pwrctrl.c:1185:#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_CU/core/rtw_pwrctrl.c:1255:#ifdef CONFIG_ANDROID_POWER
rtl8xxx_CU/core/rtw_pwrctrl.c:1259:static void rtw_early_suspend(android_early_suspend_t *h)
rtl8xxx_CU/core/rtw_pwrctrl.c:1267:static void rtw_late_resume(android_early_suspend_t *h)
rtl8xxx_CU/core/rtw_pwrctrl.c:1286:	pwrpriv->early_suspend.level = ANDROID_EARLY_SUSPEND_LEVEL_BLANK_SCREEN - 20;
rtl8xxx_CU/core/rtw_pwrctrl.c:1289:	android_register_early_suspend(&pwrpriv->early_suspend);	
rtl8xxx_CU/core/rtw_pwrctrl.c:1299:		android_unregister_early_suspend(&pwrpriv->early_suspend);
rtl8xxx_CU/core/rtw_pwrctrl.c:1304:#endif //CONFIG_ANDROID_POWER
rtl8xxx_DU/os_dep/osdep_service.c:1272:#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_DU/os_dep/osdep_service.c:1273:static android_suspend_lock_t rtw_suspend_lock ={
rtl8xxx_DU/os_dep/osdep_service.c:1282:	#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_DU/os_dep/osdep_service.c:1283:	android_init_suspend_lock(&rtw_suspend_lock);
rtl8xxx_DU/os_dep/osdep_service.c:1291:	#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_DU/os_dep/osdep_service.c:1292:	android_uninit_suspend_lock(&rtw_suspend_lock);
rtl8xxx_DU/os_dep/osdep_service.c:1300:	#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_DU/os_dep/osdep_service.c:1301:	android_lock_suspend(&rtw_suspend_lock);
rtl8xxx_DU/os_dep/osdep_service.c:1309:	#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_DU/os_dep/osdep_service.c:1310:	android_unlock_suspend(&rtw_suspend_lock);
rtl8xxx_DU/os_dep/linux/ioctl_cfg80211.c:2356:	printk("MStar Android!\n");
rtl8xxx_DU/os_dep/linux/ioctl_cfg80211.c:2357:	if((wdev_to_priv(padapter->rtw_wdev))->bandroid_scan == _FALSE)
rtl8xxx_DU/os_dep/linux/ioctl_cfg80211.c:2365:			printk("Android hasn't attached yet!\n");
rtl8xxx_DU/os_dep/linux/ioctl_cfg80211.c:5151:	pwdev_priv->bandroid_scan = _FALSE;
rtl8xxx_DU/os_dep/linux/os_intfs.c:1621:	wdev_to_priv(padapter->rtw_wdev)->bandroid_scan = _FALSE;
rtl8xxx_DU/os_dep/linux/os_intfs.c:2217:#ifndef CONFIG_ANDROID
rtl8xxx_DU/os_dep/linux/os_intfs.c:2250:	wdev_to_priv(padapter->rtw_wdev)->bandroid_scan = _FALSE;
rtl8xxx_DU/os_dep/linux/rtw_android.c:24:#include <rtw_android.h>
rtl8xxx_DU/os_dep/linux/rtw_android.c:40:const char *android_wifi_cmd_str[ANDROID_WIFI_CMD_MAX] = {
rtl8xxx_DU/os_dep/linux/rtw_android.c:99:typedef struct android_wifi_priv_cmd {
rtl8xxx_DU/os_dep/linux/rtw_android.c:103:} android_wifi_priv_cmd;
rtl8xxx_DU/os_dep/linux/rtw_android.c:112: * wl_android_wifi_on
rtl8xxx_DU/os_dep/linux/rtw_android.c:118:static int wl_android_set_pno_setup(struct net_device *dev, char *command, int total_len)
rtl8xxx_DU/os_dep/linux/rtw_android.c:225:int rtw_android_cmdstr_to_num(char *cmdstr)
rtl8xxx_DU/os_dep/linux/rtw_android.c:228:	for(cmd_num=0 ; cmd_num<ANDROID_WIFI_CMD_MAX; cmd_num++)
rtl8xxx_DU/os_dep/linux/rtw_android.c:229:		if(0 == strnicmp(cmdstr , android_wifi_cmd_str[cmd_num], strlen(android_wifi_cmd_str[cmd_num])) )
rtl8xxx_DU/os_dep/linux/rtw_android.c:235:int rtw_android_get_rssi(struct net_device *net, char *command, int total_len)
rtl8xxx_DU/os_dep/linux/rtw_android.c:250:int rtw_android_get_link_speed(struct net_device *net, char *command, int total_len)
rtl8xxx_DU/os_dep/linux/rtw_android.c:264:int rtw_android_get_macaddr(struct net_device *net, char *command, int total_len)
rtl8xxx_DU/os_dep/linux/rtw_android.c:273:int rtw_android_set_country(struct net_device *net, char *command, int total_len)
rtl8xxx_DU/os_dep/linux/rtw_android.c:276:	char *country_code = command + strlen(android_wifi_cmd_str[ANDROID_WIFI_CMD_COUNTRY]) + 1;
rtl8xxx_DU/os_dep/linux/rtw_android.c:284:int rtw_android_get_p2p_dev_addr(struct net_device *net, char *command, int total_len)
rtl8xxx_DU/os_dep/linux/rtw_android.c:296:int rtw_android_set_block(struct net_device *net, char *command, int total_len)
rtl8xxx_DU/os_dep/linux/rtw_android.c:300:	char *block_value = command + strlen(android_wifi_cmd_str[ANDROID_WIFI_CMD_BLOCK]) + 1;
rtl8xxx_DU/os_dep/linux/rtw_android.c:325:int rtw_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd)
rtl8xxx_DU/os_dep/linux/rtw_android.c:331:	android_wifi_priv_cmd priv_cmd;
rtl8xxx_DU/os_dep/linux/rtw_android.c:339:	if (copy_from_user(&priv_cmd, ifr->ifr_data, sizeof(android_wifi_priv_cmd))) {
rtl8xxx_DU/os_dep/linux/rtw_android.c:355:	DBG_871X("%s: Android private cmd \"%s\" on %s\n"
rtl8xxx_DU/os_dep/linux/rtw_android.c:358:	cmd_num = rtw_android_cmdstr_to_num(command);
rtl8xxx_DU/os_dep/linux/rtw_android.c:361:	case ANDROID_WIFI_CMD_START:
rtl8xxx_DU/os_dep/linux/rtw_android.c:362:		//bytes_written = wl_android_wifi_on(net);
rtl8xxx_DU/os_dep/linux/rtw_android.c:364:	case ANDROID_WIFI_CMD_SETFWPATH:
rtl8xxx_DU/os_dep/linux/rtw_android.c:377:	case ANDROID_WIFI_CMD_STOP:
rtl8xxx_DU/os_dep/linux/rtw_android.c:378:		//bytes_written = wl_android_wifi_off(net);
rtl8xxx_DU/os_dep/linux/rtw_android.c:381:	case ANDROID_WIFI_CMD_SCAN_ACTIVE:
rtl8xxx_DU/os_dep/linux/rtw_android.c:385:		(wdev_to_priv(net->ieee80211_ptr))->bandroid_scan = _TRUE;	
rtl8xxx_DU/os_dep/linux/rtw_android.c:389:	case ANDROID_WIFI_CMD_SCAN_PASSIVE:
rtl8xxx_DU/os_dep/linux/rtw_android.c:393:	case ANDROID_WIFI_CMD_RSSI:
rtl8xxx_DU/os_dep/linux/rtw_android.c:394:		bytes_written = rtw_android_get_rssi(net, command, priv_cmd.total_len);
rtl8xxx_DU/os_dep/linux/rtw_android.c:396:	case ANDROID_WIFI_CMD_LINKSPEED:
rtl8xxx_DU/os_dep/linux/rtw_android.c:397:		bytes_written = rtw_android_get_link_speed(net, command, priv_cmd.total_len);
rtl8xxx_DU/os_dep/linux/rtw_android.c:400:	case ANDROID_WIFI_CMD_MACADDR:
rtl8xxx_DU/os_dep/linux/rtw_android.c:401:		bytes_written = rtw_android_get_macaddr(net, command, priv_cmd.total_len);
rtl8xxx_DU/os_dep/linux/rtw_android.c:404:	case ANDROID_WIFI_CMD_BLOCK:
rtl8xxx_DU/os_dep/linux/rtw_android.c:405:		bytes_written = rtw_android_set_block(net, command, priv_cmd.total_len);
rtl8xxx_DU/os_dep/linux/rtw_android.c:408:	case ANDROID_WIFI_CMD_RXFILTER_START:
rtl8xxx_DU/os_dep/linux/rtw_android.c:411:	case ANDROID_WIFI_CMD_RXFILTER_STOP:
rtl8xxx_DU/os_dep/linux/rtw_android.c:414:	case ANDROID_WIFI_CMD_RXFILTER_ADD:
rtl8xxx_DU/os_dep/linux/rtw_android.c:418:	case ANDROID_WIFI_CMD_RXFILTER_REMOVE:
rtl8xxx_DU/os_dep/linux/rtw_android.c:423:	case ANDROID_WIFI_CMD_BTCOEXSCAN_START:
rtl8xxx_DU/os_dep/linux/rtw_android.c:426:	case ANDROID_WIFI_CMD_BTCOEXSCAN_STOP:
rtl8xxx_DU/os_dep/linux/rtw_android.c:429:	case ANDROID_WIFI_CMD_BTCOEXMODE:
rtl8xxx_DU/os_dep/linux/rtw_android.c:442:	case ANDROID_WIFI_CMD_SETSUSPENDOPT:
rtl8xxx_DU/os_dep/linux/rtw_android.c:443:		//bytes_written = wl_android_set_suspendopt(net, command, priv_cmd.total_len);
rtl8xxx_DU/os_dep/linux/rtw_android.c:446:	case ANDROID_WIFI_CMD_SETBAND:
rtl8xxx_DU/os_dep/linux/rtw_android.c:450:	case ANDROID_WIFI_CMD_GETBAND:
rtl8xxx_DU/os_dep/linux/rtw_android.c:451:		//bytes_written = wl_android_get_band(net, command, priv_cmd.total_len);
rtl8xxx_DU/os_dep/linux/rtw_android.c:454:	case ANDROID_WIFI_CMD_COUNTRY:
rtl8xxx_DU/os_dep/linux/rtw_android.c:455:		bytes_written = rtw_android_set_country(net, command, priv_cmd.total_len);
rtl8xxx_DU/os_dep/linux/rtw_android.c:459:	case ANDROID_WIFI_CMD_PNOSSIDCLR_SET:
rtl8xxx_DU/os_dep/linux/rtw_android.c:462:	case ANDROID_WIFI_CMD_PNOSETUP_SET:
rtl8xxx_DU/os_dep/linux/rtw_android.c:463:		//bytes_written = wl_android_set_pno_setup(net, command, priv_cmd.total_len);
rtl8xxx_DU/os_dep/linux/rtw_android.c:465:	case ANDROID_WIFI_CMD_PNOENABLE_SET:
rtl8xxx_DU/os_dep/linux/rtw_android.c:471:	case ANDROID_WIFI_CMD_P2P_DEV_ADDR:
rtl8xxx_DU/os_dep/linux/rtw_android.c:472:		bytes_written = rtw_android_get_p2p_dev_addr(net, command, priv_cmd.total_len);
rtl8xxx_DU/os_dep/linux/rtw_android.c:474:	case ANDROID_WIFI_CMD_P2P_SET_NOA:
rtl8xxx_DU/os_dep/linux/rtw_android.c:478:	case ANDROID_WIFI_CMD_P2P_GET_NOA:
rtl8xxx_DU/os_dep/linux/rtw_android.c:481:	case ANDROID_WIFI_CMD_P2P_SET_PS:
rtl8xxx_DU/os_dep/linux/rtw_android.c:487:	case ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE:
rtl8xxx_DU/os_dep/linux/rtw_android.c:489:		int skip = strlen(android_wifi_cmd_str[ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE]) + 3;
rtl8xxx_DU/os_dep/linux/rtw_android.c:496:	case ANDROID_WIFI_CMD_WFD_ENABLE:
rtl8xxx_DU/os_dep/linux/rtw_android.c:510:	case ANDROID_WIFI_CMD_WFD_DISABLE:
rtl8xxx_DU/os_dep/linux/rtw_android.c:523:	case ANDROID_WIFI_CMD_WFD_SET_TCPPORT:
rtl8xxx_DU/os_dep/linux/rtw_android.c:536:	case ANDROID_WIFI_CMD_WFD_SET_MAX_TPUT:
rtl8xxx_DU/os_dep/linux/rtw_android.c:542:	case ANDROID_WIFI_CMD_WFD_SET_DEVTYPE:
rtl8xxx_DU/os_dep/linux/rtw_android.c:598: * Functions for Android WiFi card detection
rtl8xxx_DU/os_dep/linux/rtw_android.c:610:int wl_android_wifictrl_func_add(void)
rtl8xxx_DU/os_dep/linux/rtw_android.c:631:void wl_android_wifictrl_func_del(void)
rtl8xxx_DU/os_dep/linux/rtw_android.c:640:void *wl_android_prealloc(int section, unsigned long size)
rtl8xxx_DU/os_dep/linux/usb_intf.c:942:#elif defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_DU/os_dep/linux/usb_intf.c:1332:#if defined(CONFIG_HAS_EARLYSUSPEND ) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:2048:		#ifndef CONFIG_ANDROID
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:2929:		#if defined(CONFIG_ANDROID) || 1
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:5764:		// free network queue for Android's timming issue
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:7864:#include <rtw_android.h>
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:7961:#ifdef CONFIG_ANDROID
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:7964:	i = rtw_android_cmdstr_to_num(ext);
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:7967:		case ANDROID_WIFI_CMD_START :
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:7970:		case ANDROID_WIFI_CMD_STOP :
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:7973:		case ANDROID_WIFI_CMD_RSSI :
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:7985:		case ANDROID_WIFI_CMD_LINKSPEED :
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:7991:		case ANDROID_WIFI_CMD_MACADDR :
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:7994:		case ANDROID_WIFI_CMD_SCAN_ACTIVE :
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:8000:		case ANDROID_WIFI_CMD_SCAN_PASSIVE :
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:8007:		case ANDROID_WIFI_CMD_COUNTRY :
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:8032:#endif //end of CONFIG_ANDROID
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:10905:#include <rtw_android.h>
rtl8xxx_DU/os_dep/linux/ioctl_linux.c:10927:			ret = rtw_android_priv_cmd(dev, rq, cmd);
rtl8xxx_DU/os_dep/linux/pci_intf.c:1797:#if defined(CONFIG_HAS_EARLYSUSPEND ) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_DU/include/rtw_android.h:21:#ifndef __RTW_ANDROID_H__
rtl8xxx_DU/include/rtw_android.h:22:#define __RTW_ANDROID_H__
rtl8xxx_DU/include/rtw_android.h:27:enum ANDROID_WIFI_CMD {
rtl8xxx_DU/include/rtw_android.h:28:	ANDROID_WIFI_CMD_START,				
rtl8xxx_DU/include/rtw_android.h:29:	ANDROID_WIFI_CMD_STOP,			
rtl8xxx_DU/include/rtw_android.h:30:	ANDROID_WIFI_CMD_SCAN_ACTIVE,
rtl8xxx_DU/include/rtw_android.h:31:	ANDROID_WIFI_CMD_SCAN_PASSIVE,		
rtl8xxx_DU/include/rtw_android.h:32:	ANDROID_WIFI_CMD_RSSI,	
rtl8xxx_DU/include/rtw_android.h:33:	ANDROID_WIFI_CMD_LINKSPEED,
rtl8xxx_DU/include/rtw_android.h:34:	ANDROID_WIFI_CMD_RXFILTER_START,
rtl8xxx_DU/include/rtw_android.h:35:	ANDROID_WIFI_CMD_RXFILTER_STOP,	
rtl8xxx_DU/include/rtw_android.h:36:	ANDROID_WIFI_CMD_RXFILTER_ADD,	
rtl8xxx_DU/include/rtw_android.h:37:	ANDROID_WIFI_CMD_RXFILTER_REMOVE,
rtl8xxx_DU/include/rtw_android.h:38:	ANDROID_WIFI_CMD_BTCOEXSCAN_START,
rtl8xxx_DU/include/rtw_android.h:39:	ANDROID_WIFI_CMD_BTCOEXSCAN_STOP,
rtl8xxx_DU/include/rtw_android.h:40:	ANDROID_WIFI_CMD_BTCOEXMODE,
rtl8xxx_DU/include/rtw_android.h:41:	ANDROID_WIFI_CMD_SETSUSPENDOPT,
rtl8xxx_DU/include/rtw_android.h:42:	ANDROID_WIFI_CMD_P2P_DEV_ADDR,	
rtl8xxx_DU/include/rtw_android.h:43:	ANDROID_WIFI_CMD_SETFWPATH,		
rtl8xxx_DU/include/rtw_android.h:44:	ANDROID_WIFI_CMD_SETBAND,		
rtl8xxx_DU/include/rtw_android.h:45:	ANDROID_WIFI_CMD_GETBAND,			
rtl8xxx_DU/include/rtw_android.h:46:	ANDROID_WIFI_CMD_COUNTRY,			
rtl8xxx_DU/include/rtw_android.h:47:	ANDROID_WIFI_CMD_P2P_SET_NOA,
rtl8xxx_DU/include/rtw_android.h:48:	ANDROID_WIFI_CMD_P2P_GET_NOA,	
rtl8xxx_DU/include/rtw_android.h:49:	ANDROID_WIFI_CMD_P2P_SET_PS,	
rtl8xxx_DU/include/rtw_android.h:50:	ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE,
rtl8xxx_DU/include/rtw_android.h:52:	ANDROID_WIFI_CMD_PNOSSIDCLR_SET,
rtl8xxx_DU/include/rtw_android.h:53:	ANDROID_WIFI_CMD_PNOSETUP_SET,
rtl8xxx_DU/include/rtw_android.h:54:	ANDROID_WIFI_CMD_PNOENABLE_SET,
rtl8xxx_DU/include/rtw_android.h:55:	ANDROID_WIFI_CMD_PNODEBUG_SET,
rtl8xxx_DU/include/rtw_android.h:58:	ANDROID_WIFI_CMD_MACADDR,
rtl8xxx_DU/include/rtw_android.h:60:	ANDROID_WIFI_CMD_BLOCK,
rtl8xxx_DU/include/rtw_android.h:62:	ANDROID_WIFI_CMD_WFD_ENABLE,
rtl8xxx_DU/include/rtw_android.h:63:	ANDROID_WIFI_CMD_WFD_DISABLE,
rtl8xxx_DU/include/rtw_android.h:65:	ANDROID_WIFI_CMD_WFD_SET_TCPPORT,
rtl8xxx_DU/include/rtw_android.h:66:	ANDROID_WIFI_CMD_WFD_SET_MAX_TPUT,
rtl8xxx_DU/include/rtw_android.h:67:	ANDROID_WIFI_CMD_WFD_SET_DEVTYPE,
rtl8xxx_DU/include/rtw_android.h:69:	ANDROID_WIFI_CMD_MAX
rtl8xxx_DU/include/rtw_android.h:72:int rtw_android_cmdstr_to_num(char *cmdstr);
rtl8xxx_DU/include/rtw_android.h:73:int rtw_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd);
rtl8xxx_DU/include/rtw_android.h:76:int wl_android_wifictrl_func_add(void);
rtl8xxx_DU/include/rtw_android.h:77:void wl_android_wifictrl_func_del(void);
rtl8xxx_DU/include/rtw_android.h:78:void* wl_android_prealloc(int section, unsigned long size);
rtl8xxx_DU/include/rtw_android.h:86:#endif //__RTW_ANDROID_H__
rtl8xxx_DU/include/drv_conf.h:30://Older Android kernel doesn't has CONFIG_ANDROID defined,
rtl8xxx_DU/include/drv_conf.h:31://add this to force CONFIG_ANDROID defined
rtl8xxx_DU/include/drv_conf.h:32:#ifdef CONFIG_PLATFORM_ANDROID
rtl8xxx_DU/include/drv_conf.h:33:#define CONFIG_ANDROID
rtl8xxx_DU/include/drv_conf.h:36:#ifdef CONFIG_ANDROID
rtl8xxx_DU/include/drv_conf.h:37://Some Android build will restart the UI while non-printable ascii is passed
rtl8xxx_DU/include/drv_conf.h:39://for Android here. If you are sure there is no risk on your system about this,
rtl8xxx_DU/include/drv_conf.h:47://Android expect dbm as the rx signal strength unit
rtl8xxx_DU/include/drv_conf.h:56:#if defined(CONFIG_ANDROID_POWER) && defined (CONFIG_RESUME_IN_WORKQUEUE)
rtl8xxx_DU/include/drv_conf.h:57:	#warning "You have CONFIG_ANDROID_POWER enabled in your system, we disable CONFIG_RESUME_IN_WORKQUEUE automatically"
rtl8xxx_DU/include/drv_conf.h:62:	#if !defined( CONFIG_WAKELOCK) && !defined(CONFIG_ANDROID_POWER)
rtl8xxx_DU/include/drv_conf.h:63:	#error "enable CONFIG_RESUME_IN_WORKQUEUE without CONFIG_WAKELOCK or CONFIG_ANDROID_POWER will suffer from the danger of wifi's unfunctionality..."
rtl8xxx_DU/include/rtw_pwrctrl.h:273:	#ifdef CONFIG_ANDROID_POWER
rtl8xxx_DU/include/rtw_pwrctrl.h:274:	android_early_suspend_t early_suspend;
rtl8xxx_DU/include/rtw_pwrctrl.h:339:#if defined(CONFIG_HAS_EARLYSUSPEND ) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_DU/include/rtw_pwrctrl.h:343:#endif //CONFIG_HAS_EARLYSUSPEND || CONFIG_ANDROID_POWER
rtl8xxx_DU/include/autoconf.h:36:	#define RTW_USE_CFG80211_STA_EVENT /* Opne this for Android 4.1's wpa_supplicant */
rtl8xxx_DU/include/ioctl_cfg80211.h:50:	u8 bandroid_scan;
rtl8xxx_DU/include/osdep_service.h:1512:#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_DU/include/osdep_service.h:1513:#include <linux/android_power.h>
rtl8xxx_DU/Makefile:44:CONFIG_PLATFORM_ANDROID_X86 = n
rtl8xxx_DU/Makefile:167:			os_dep/linux/rtw_android.o
rtl8xxx_DU/Makefile:252:EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN -DCONFIG_PLATFORM_ANDROID -DCONFIG_PLATFORM_SHUTTLE
rtl8xxx_DU/Makefile:254:KSRC := $(shell pwd)/../../../Android/kernel
rtl8xxx_DU/Makefile:275:ifeq ($(CONFIG_PLATFORM_ANDROID_X86), y)
rtl8xxx_DU/Makefile:279:CROSS_COMPILE := /media/DATA-2/android-x86/ics-x86_20120130/prebuilt/linux-x86/toolchain/i686-unknown-linux-gnu-4.2.1/bin/i686-unknown-linux-gnu-
rtl8xxx_DU/Makefile:280:KSRC := /media/DATA-2/android-x86/ics-x86_20120130/out/target/product/generic_x86/obj/kernel
rtl8xxx_DU/Makefile:398:CROSS_COMPILE := /home/android_sdk/nvidia/tegra-16r3-partner-android-4.1_20120723/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
rtl8xxx_DU/Makefile:399:KSRC := /home/android_sdk/nvidia/tegra-16r3-partner-android-4.1_20120723/out/target/product/cardhu/obj/KERNEL
rtl8xxx_DU/Makefile:406:CROSS_COMPILE := /home/android_sdk/Telechips/SDK_2304_20110613/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
rtl8xxx_DU/Makefile:407:KSRC := /home/android_sdk/Telechips/SDK_2304_20110613/kernel
rtl8xxx_DU/Makefile:414:CROSS_COMPILE := /home/android_sdk/Telechips/v12.06_r1-tcc-android-4.0.4/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
rtl8xxx_DU/Makefile:415:KSRC := /home/android_sdk/Telechips/v12.06_r1-tcc-android-4.0.4/kernel
rtl8xxx_DU/Makefile:420:EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN -DCONFIG_PLATFORM_ANDROID -DCONFIG_PLATFORM_ROCKCHIPS -DCONFIG_MINIMAL_MEMORY_USAGE
rtl8xxx_DU/Makefile:431:#KSRC := /media/DATA-1/aosp/android-omap-panda-3.0_20120104
rtl8xxx_DU/Makefile:432:CROSS_COMPILE := /media/DATA-1/android-4.0/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
rtl8xxx_DU/Makefile:433:KSRC := /media/DATA-1/android-4.0/panda_kernel/omap
rtl8xxx_DU/core/rtw_pwrctrl.c:1113:	#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_DU/core/rtw_pwrctrl.c:1116:	#endif //CONFIG_HAS_EARLYSUSPEND || CONFIG_ANDROID_POWER
rtl8xxx_DU/core/rtw_pwrctrl.c:1141:	#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_DU/core/rtw_pwrctrl.c:1143:	#endif //CONFIG_HAS_EARLYSUSPEND || CONFIG_ANDROID_POWER
rtl8xxx_DU/core/rtw_pwrctrl.c:1234:#ifdef CONFIG_ANDROID_POWER
rtl8xxx_DU/core/rtw_pwrctrl.c:1238:static void rtw_early_suspend(android_early_suspend_t *h)
rtl8xxx_DU/core/rtw_pwrctrl.c:1247:static void rtw_late_resume(android_early_suspend_t *h)
rtl8xxx_DU/core/rtw_pwrctrl.c:1266:	pwrpriv->early_suspend.level = ANDROID_EARLY_SUSPEND_LEVEL_BLANK_SCREEN - 20;
rtl8xxx_DU/core/rtw_pwrctrl.c:1269:	android_register_early_suspend(&pwrpriv->early_suspend);	
rtl8xxx_DU/core/rtw_pwrctrl.c:1279:		android_unregister_early_suspend(&pwrpriv->early_suspend);
rtl8xxx_DU/core/rtw_pwrctrl.c:1284:#endif //CONFIG_ANDROID_POWER
rtl8xxx_EU/os_dep/osdep_service.c:1292:#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/osdep_service.c:1293:static android_suspend_lock_t rtw_suspend_lock ={
rtl8xxx_EU/os_dep/osdep_service.c:1302:	#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/osdep_service.c:1303:	android_init_suspend_lock(&rtw_suspend_lock);
rtl8xxx_EU/os_dep/osdep_service.c:1311:	#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/osdep_service.c:1312:	android_uninit_suspend_lock(&rtw_suspend_lock);
rtl8xxx_EU/os_dep/osdep_service.c:1320:	#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/osdep_service.c:1321:	android_lock_suspend(&rtw_suspend_lock);
rtl8xxx_EU/os_dep/osdep_service.c:1324:	#if  defined(CONFIG_WAKELOCK) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/osdep_service.c:1333:	#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/osdep_service.c:1334:	android_unlock_suspend(&rtw_suspend_lock);
rtl8xxx_EU/os_dep/osdep_service.c:1337:	#if  defined(CONFIG_WAKELOCK) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/osdep_service.c:1347:	#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/osdep_service.c:1348:	android_lock_suspend_auto_expire(&rtw_suspend_lock, timeout);
rtl8xxx_EU/os_dep/linux/ioctl_cfg80211.c:2554:	printk("MStar Android!\n");
rtl8xxx_EU/os_dep/linux/ioctl_cfg80211.c:2555:	if((wdev_to_priv(padapter->rtw_wdev))->bandroid_scan == _FALSE)
rtl8xxx_EU/os_dep/linux/ioctl_cfg80211.c:2563:			printk("Android hasn't attached yet!\n");
rtl8xxx_EU/os_dep/linux/ioctl_cfg80211.c:5224:	pwdev_priv->bandroid_scan = _FALSE;
rtl8xxx_EU/os_dep/linux/os_intfs.c:1687:	wdev_to_priv(padapter->rtw_wdev)->bandroid_scan = _FALSE;
rtl8xxx_EU/os_dep/linux/os_intfs.c:2286:#ifndef CONFIG_ANDROID
rtl8xxx_EU/os_dep/linux/os_intfs.c:2319:	wdev_to_priv(padapter->rtw_wdev)->bandroid_scan = _FALSE;
rtl8xxx_EU/os_dep/linux/rtw_android.c:24:#include <rtw_android.h>
rtl8xxx_EU/os_dep/linux/rtw_android.c:40:const char *android_wifi_cmd_str[ANDROID_WIFI_CMD_MAX] = {
rtl8xxx_EU/os_dep/linux/rtw_android.c:99:typedef struct android_wifi_priv_cmd {
rtl8xxx_EU/os_dep/linux/rtw_android.c:109:} android_wifi_priv_cmd;
rtl8xxx_EU/os_dep/linux/rtw_android.c:117: * wl_android_wifi_on
rtl8xxx_EU/os_dep/linux/rtw_android.c:123:static int wl_android_set_pno_setup(struct net_device *dev, char *command, int total_len)
rtl8xxx_EU/os_dep/linux/rtw_android.c:230:int rtw_android_cmdstr_to_num(char *cmdstr)
rtl8xxx_EU/os_dep/linux/rtw_android.c:233:	for(cmd_num=0 ; cmd_num<ANDROID_WIFI_CMD_MAX; cmd_num++)
rtl8xxx_EU/os_dep/linux/rtw_android.c:234:		if(0 == strnicmp(cmdstr , android_wifi_cmd_str[cmd_num], strlen(android_wifi_cmd_str[cmd_num])) )
rtl8xxx_EU/os_dep/linux/rtw_android.c:240:int rtw_android_get_rssi(struct net_device *net, char *command, int total_len)
rtl8xxx_EU/os_dep/linux/rtw_android.c:255:int rtw_android_get_link_speed(struct net_device *net, char *command, int total_len)
rtl8xxx_EU/os_dep/linux/rtw_android.c:269:int rtw_android_get_macaddr(struct net_device *net, char *command, int total_len)
rtl8xxx_EU/os_dep/linux/rtw_android.c:278:int rtw_android_set_country(struct net_device *net, char *command, int total_len)
rtl8xxx_EU/os_dep/linux/rtw_android.c:281:	char *country_code = command + strlen(android_wifi_cmd_str[ANDROID_WIFI_CMD_COUNTRY]) + 1;
rtl8xxx_EU/os_dep/linux/rtw_android.c:289:int rtw_android_get_p2p_dev_addr(struct net_device *net, char *command, int total_len)
rtl8xxx_EU/os_dep/linux/rtw_android.c:301:int rtw_android_set_block(struct net_device *net, char *command, int total_len)
rtl8xxx_EU/os_dep/linux/rtw_android.c:305:	char *block_value = command + strlen(android_wifi_cmd_str[ANDROID_WIFI_CMD_BLOCK]) + 1;
rtl8xxx_EU/os_dep/linux/rtw_android.c:330:int rtw_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd)
rtl8xxx_EU/os_dep/linux/rtw_android.c:336:	android_wifi_priv_cmd priv_cmd;
rtl8xxx_EU/os_dep/linux/rtw_android.c:344:	if (copy_from_user(&priv_cmd, ifr->ifr_data, sizeof(android_wifi_priv_cmd))) {
rtl8xxx_EU/os_dep/linux/rtw_android.c:368:	DBG_871X("%s: Android private cmd \"%s\" on %s\n"
rtl8xxx_EU/os_dep/linux/rtw_android.c:371:	cmd_num = rtw_android_cmdstr_to_num(command);
rtl8xxx_EU/os_dep/linux/rtw_android.c:374:	case ANDROID_WIFI_CMD_START:
rtl8xxx_EU/os_dep/linux/rtw_android.c:375:		//bytes_written = wl_android_wifi_on(net);
rtl8xxx_EU/os_dep/linux/rtw_android.c:377:	case ANDROID_WIFI_CMD_SETFWPATH:
rtl8xxx_EU/os_dep/linux/rtw_android.c:390:	case ANDROID_WIFI_CMD_STOP:
rtl8xxx_EU/os_dep/linux/rtw_android.c:391:		//bytes_written = wl_android_wifi_off(net);
rtl8xxx_EU/os_dep/linux/rtw_android.c:394:	case ANDROID_WIFI_CMD_SCAN_ACTIVE:
rtl8xxx_EU/os_dep/linux/rtw_android.c:398:		(wdev_to_priv(net->ieee80211_ptr))->bandroid_scan = _TRUE;	
rtl8xxx_EU/os_dep/linux/rtw_android.c:402:	case ANDROID_WIFI_CMD_SCAN_PASSIVE:
rtl8xxx_EU/os_dep/linux/rtw_android.c:406:	case ANDROID_WIFI_CMD_RSSI:
rtl8xxx_EU/os_dep/linux/rtw_android.c:407:		bytes_written = rtw_android_get_rssi(net, command, priv_cmd.total_len);
rtl8xxx_EU/os_dep/linux/rtw_android.c:409:	case ANDROID_WIFI_CMD_LINKSPEED:
rtl8xxx_EU/os_dep/linux/rtw_android.c:410:		bytes_written = rtw_android_get_link_speed(net, command, priv_cmd.total_len);
rtl8xxx_EU/os_dep/linux/rtw_android.c:413:	case ANDROID_WIFI_CMD_MACADDR:
rtl8xxx_EU/os_dep/linux/rtw_android.c:414:		bytes_written = rtw_android_get_macaddr(net, command, priv_cmd.total_len);
rtl8xxx_EU/os_dep/linux/rtw_android.c:417:	case ANDROID_WIFI_CMD_BLOCK:
rtl8xxx_EU/os_dep/linux/rtw_android.c:418:		bytes_written = rtw_android_set_block(net, command, priv_cmd.total_len);
rtl8xxx_EU/os_dep/linux/rtw_android.c:421:	case ANDROID_WIFI_CMD_RXFILTER_START:
rtl8xxx_EU/os_dep/linux/rtw_android.c:424:	case ANDROID_WIFI_CMD_RXFILTER_STOP:
rtl8xxx_EU/os_dep/linux/rtw_android.c:427:	case ANDROID_WIFI_CMD_RXFILTER_ADD:
rtl8xxx_EU/os_dep/linux/rtw_android.c:431:	case ANDROID_WIFI_CMD_RXFILTER_REMOVE:
rtl8xxx_EU/os_dep/linux/rtw_android.c:436:	case ANDROID_WIFI_CMD_BTCOEXSCAN_START:
rtl8xxx_EU/os_dep/linux/rtw_android.c:439:	case ANDROID_WIFI_CMD_BTCOEXSCAN_STOP:
rtl8xxx_EU/os_dep/linux/rtw_android.c:442:	case ANDROID_WIFI_CMD_BTCOEXMODE:
rtl8xxx_EU/os_dep/linux/rtw_android.c:455:	case ANDROID_WIFI_CMD_SETSUSPENDOPT:
rtl8xxx_EU/os_dep/linux/rtw_android.c:456:		//bytes_written = wl_android_set_suspendopt(net, command, priv_cmd.total_len);
rtl8xxx_EU/os_dep/linux/rtw_android.c:459:	case ANDROID_WIFI_CMD_SETBAND:
rtl8xxx_EU/os_dep/linux/rtw_android.c:463:	case ANDROID_WIFI_CMD_GETBAND:
rtl8xxx_EU/os_dep/linux/rtw_android.c:464:		//bytes_written = wl_android_get_band(net, command, priv_cmd.total_len);
rtl8xxx_EU/os_dep/linux/rtw_android.c:467:	case ANDROID_WIFI_CMD_COUNTRY:
rtl8xxx_EU/os_dep/linux/rtw_android.c:468:		bytes_written = rtw_android_set_country(net, command, priv_cmd.total_len);
rtl8xxx_EU/os_dep/linux/rtw_android.c:472:	case ANDROID_WIFI_CMD_PNOSSIDCLR_SET:
rtl8xxx_EU/os_dep/linux/rtw_android.c:475:	case ANDROID_WIFI_CMD_PNOSETUP_SET:
rtl8xxx_EU/os_dep/linux/rtw_android.c:476:		//bytes_written = wl_android_set_pno_setup(net, command, priv_cmd.total_len);
rtl8xxx_EU/os_dep/linux/rtw_android.c:478:	case ANDROID_WIFI_CMD_PNOENABLE_SET:
rtl8xxx_EU/os_dep/linux/rtw_android.c:484:	case ANDROID_WIFI_CMD_P2P_DEV_ADDR:
rtl8xxx_EU/os_dep/linux/rtw_android.c:485:		bytes_written = rtw_android_get_p2p_dev_addr(net, command, priv_cmd.total_len);
rtl8xxx_EU/os_dep/linux/rtw_android.c:487:	case ANDROID_WIFI_CMD_P2P_SET_NOA:
rtl8xxx_EU/os_dep/linux/rtw_android.c:491:	case ANDROID_WIFI_CMD_P2P_GET_NOA:
rtl8xxx_EU/os_dep/linux/rtw_android.c:494:	case ANDROID_WIFI_CMD_P2P_SET_PS:
rtl8xxx_EU/os_dep/linux/rtw_android.c:500:	case ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE:
rtl8xxx_EU/os_dep/linux/rtw_android.c:502:		int skip = strlen(android_wifi_cmd_str[ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE]) + 3;
rtl8xxx_EU/os_dep/linux/rtw_android.c:509:	case ANDROID_WIFI_CMD_WFD_ENABLE:
rtl8xxx_EU/os_dep/linux/rtw_android.c:523:	case ANDROID_WIFI_CMD_WFD_DISABLE:
rtl8xxx_EU/os_dep/linux/rtw_android.c:536:	case ANDROID_WIFI_CMD_WFD_SET_TCPPORT:
rtl8xxx_EU/os_dep/linux/rtw_android.c:549:	case ANDROID_WIFI_CMD_WFD_SET_MAX_TPUT:
rtl8xxx_EU/os_dep/linux/rtw_android.c:555:	case ANDROID_WIFI_CMD_WFD_SET_DEVTYPE:
rtl8xxx_EU/os_dep/linux/rtw_android.c:607: * Functions for Android WiFi card detection
rtl8xxx_EU/os_dep/linux/rtw_android.c:619:int rtw_android_wifictrl_func_add(void)
rtl8xxx_EU/os_dep/linux/rtw_android.c:640:void rtw_android_wifictrl_func_del(void)
rtl8xxx_EU/os_dep/linux/rtw_android.c:649:void *wl_android_prealloc(int section, unsigned long size)
rtl8xxx_EU/os_dep/linux/usb_intf.c:1077:#elif defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/linux/usb_intf.c:1823:#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:2257:		#ifndef CONFIG_ANDROID
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:3169:		#if defined(CONFIG_ANDROID) || 1
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:6465:		// free network queue for Android's timming issue
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:8611:#include <rtw_android.h>
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:8706:#ifdef CONFIG_ANDROID
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:8709:	i = rtw_android_cmdstr_to_num(ext);
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:8712:		case ANDROID_WIFI_CMD_START :
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:8715:		case ANDROID_WIFI_CMD_STOP :
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:8718:		case ANDROID_WIFI_CMD_RSSI :
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:8730:		case ANDROID_WIFI_CMD_LINKSPEED :
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:8736:		case ANDROID_WIFI_CMD_MACADDR :
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:8739:		case ANDROID_WIFI_CMD_SCAN_ACTIVE :
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:8745:		case ANDROID_WIFI_CMD_SCAN_PASSIVE :
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:8752:		case ANDROID_WIFI_CMD_COUNTRY :
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:8777:#endif //end of CONFIG_ANDROID
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:13454:#include <rtw_android.h>
rtl8xxx_EU/os_dep/linux/ioctl_linux.c:13479:			ret = rtw_android_priv_cmd(dev, rq, cmd);
rtl8xxx_EU/os_dep/linux/sdio_intf.c:54:#include <rtw_android.h>
rtl8xxx_EU/os_dep/linux/sdio_intf.c:708:#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/linux/sdio_intf.c:903:#if (defined CONFIG_WOWLAN) || (!(defined ANDROID_2X) && (defined CONFIG_PLATFORM_SPRD))
rtl8xxx_EU/os_dep/linux/sdio_intf.c:904:	//Android 4.0 don't support WIFI close power
rtl8xxx_EU/os_dep/linux/sdio_intf.c:906:	//this is sprd's bug in Android 4.0, but sprd don't
rtl8xxx_EU/os_dep/linux/sdio_intf.c:1113:#elif defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/linux/sdio_intf.c:1148:#ifndef ANDROID_2X
rtl8xxx_EU/os_dep/linux/sdio_intf.c:1217:#if (defined ANDROID_2X)
rtl8xxx_EU/os_dep/linux/sdio_intf.c:1250:	rtw_android_wifictrl_func_add();
rtl8xxx_EU/os_dep/linux/sdio_intf.c:1259:	rtw_android_wifictrl_func_del();
rtl8xxx_EU/os_dep/linux/custom_gpio_linux.c:31:#if !(defined ANDROID_2X)
rtl8xxx_EU/os_dep/linux/custom_gpio_linux.c:96:#else //ANDROID_2X
rtl8xxx_EU/os_dep/linux/custom_gpio_linux.c:177:#endif //ANDROID_2X
rtl8xxx_EU/os_dep/linux/gspi_intf.c:648:#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/linux/gspi_intf.c:866:#elif defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/os_dep/linux/pci_intf.c:1929:#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/include/rtw_android.h:21:#ifndef __RTW_ANDROID_H__
rtl8xxx_EU/include/rtw_android.h:22:#define __RTW_ANDROID_H__
rtl8xxx_EU/include/rtw_android.h:27:enum ANDROID_WIFI_CMD {
rtl8xxx_EU/include/rtw_android.h:28:	ANDROID_WIFI_CMD_START,				
rtl8xxx_EU/include/rtw_android.h:29:	ANDROID_WIFI_CMD_STOP,			
rtl8xxx_EU/include/rtw_android.h:30:	ANDROID_WIFI_CMD_SCAN_ACTIVE,
rtl8xxx_EU/include/rtw_android.h:31:	ANDROID_WIFI_CMD_SCAN_PASSIVE,		
rtl8xxx_EU/include/rtw_android.h:32:	ANDROID_WIFI_CMD_RSSI,	
rtl8xxx_EU/include/rtw_android.h:33:	ANDROID_WIFI_CMD_LINKSPEED,
rtl8xxx_EU/include/rtw_android.h:34:	ANDROID_WIFI_CMD_RXFILTER_START,
rtl8xxx_EU/include/rtw_android.h:35:	ANDROID_WIFI_CMD_RXFILTER_STOP,	
rtl8xxx_EU/include/rtw_android.h:36:	ANDROID_WIFI_CMD_RXFILTER_ADD,	
rtl8xxx_EU/include/rtw_android.h:37:	ANDROID_WIFI_CMD_RXFILTER_REMOVE,
rtl8xxx_EU/include/rtw_android.h:38:	ANDROID_WIFI_CMD_BTCOEXSCAN_START,
rtl8xxx_EU/include/rtw_android.h:39:	ANDROID_WIFI_CMD_BTCOEXSCAN_STOP,
rtl8xxx_EU/include/rtw_android.h:40:	ANDROID_WIFI_CMD_BTCOEXMODE,
rtl8xxx_EU/include/rtw_android.h:41:	ANDROID_WIFI_CMD_SETSUSPENDOPT,
rtl8xxx_EU/include/rtw_android.h:42:	ANDROID_WIFI_CMD_P2P_DEV_ADDR,	
rtl8xxx_EU/include/rtw_android.h:43:	ANDROID_WIFI_CMD_SETFWPATH,		
rtl8xxx_EU/include/rtw_android.h:44:	ANDROID_WIFI_CMD_SETBAND,		
rtl8xxx_EU/include/rtw_android.h:45:	ANDROID_WIFI_CMD_GETBAND,			
rtl8xxx_EU/include/rtw_android.h:46:	ANDROID_WIFI_CMD_COUNTRY,			
rtl8xxx_EU/include/rtw_android.h:47:	ANDROID_WIFI_CMD_P2P_SET_NOA,
rtl8xxx_EU/include/rtw_android.h:48:	ANDROID_WIFI_CMD_P2P_GET_NOA,	
rtl8xxx_EU/include/rtw_android.h:49:	ANDROID_WIFI_CMD_P2P_SET_PS,	
rtl8xxx_EU/include/rtw_android.h:50:	ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE,
rtl8xxx_EU/include/rtw_android.h:52:	ANDROID_WIFI_CMD_PNOSSIDCLR_SET,
rtl8xxx_EU/include/rtw_android.h:53:	ANDROID_WIFI_CMD_PNOSETUP_SET,
rtl8xxx_EU/include/rtw_android.h:54:	ANDROID_WIFI_CMD_PNOENABLE_SET,
rtl8xxx_EU/include/rtw_android.h:55:	ANDROID_WIFI_CMD_PNODEBUG_SET,
rtl8xxx_EU/include/rtw_android.h:58:	ANDROID_WIFI_CMD_MACADDR,
rtl8xxx_EU/include/rtw_android.h:60:	ANDROID_WIFI_CMD_BLOCK,
rtl8xxx_EU/include/rtw_android.h:62:	ANDROID_WIFI_CMD_WFD_ENABLE,
rtl8xxx_EU/include/rtw_android.h:63:	ANDROID_WIFI_CMD_WFD_DISABLE,
rtl8xxx_EU/include/rtw_android.h:65:	ANDROID_WIFI_CMD_WFD_SET_TCPPORT,
rtl8xxx_EU/include/rtw_android.h:66:	ANDROID_WIFI_CMD_WFD_SET_MAX_TPUT,
rtl8xxx_EU/include/rtw_android.h:67:	ANDROID_WIFI_CMD_WFD_SET_DEVTYPE,
rtl8xxx_EU/include/rtw_android.h:69:	ANDROID_WIFI_CMD_MAX
rtl8xxx_EU/include/rtw_android.h:72:int rtw_android_cmdstr_to_num(char *cmdstr);
rtl8xxx_EU/include/rtw_android.h:73:int rtw_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd);
rtl8xxx_EU/include/rtw_android.h:76:int rtw_android_wifictrl_func_add(void);
rtl8xxx_EU/include/rtw_android.h:77:void rtw_android_wifictrl_func_del(void);
rtl8xxx_EU/include/rtw_android.h:78:void* wl_android_prealloc(int section, unsigned long size);
rtl8xxx_EU/include/rtw_android.h:85:static int rtw_android_wifictrl_func_add(void) { return 0; }
rtl8xxx_EU/include/rtw_android.h:86:static void rtw_android_wifictrl_func_del(void) {}
rtl8xxx_EU/include/rtw_android.h:89:#endif //__RTW_ANDROID_H__
rtl8xxx_EU/include/drv_conf.h:30://Older Android kernel doesn't has CONFIG_ANDROID defined,
rtl8xxx_EU/include/drv_conf.h:31://add this to force CONFIG_ANDROID defined
rtl8xxx_EU/include/drv_conf.h:32:#ifdef CONFIG_PLATFORM_ANDROID
rtl8xxx_EU/include/drv_conf.h:33:#define CONFIG_ANDROID
rtl8xxx_EU/include/drv_conf.h:36:#ifdef CONFIG_ANDROID
rtl8xxx_EU/include/drv_conf.h:37://Some Android build will restart the UI while non-printable ascii is passed
rtl8xxx_EU/include/drv_conf.h:39://for Android here. If you are sure there is no risk on your system about this,
rtl8xxx_EU/include/drv_conf.h:48://Android expect dbm as the rx signal strength unit
rtl8xxx_EU/include/drv_conf.h:57:#if defined(CONFIG_ANDROID_POWER) && defined (CONFIG_RESUME_IN_WORKQUEUE)
rtl8xxx_EU/include/drv_conf.h:58:	#warning "You have CONFIG_ANDROID_POWER enabled in your system, we disable CONFIG_RESUME_IN_WORKQUEUE automatically"
rtl8xxx_EU/include/drv_conf.h:63:	#if !defined( CONFIG_WAKELOCK) && !defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/include/drv_conf.h:64:	#error "enable CONFIG_RESUME_IN_WORKQUEUE without CONFIG_WAKELOCK or CONFIG_ANDROID_POWER will suffer from the danger of wifi's unfunctionality..."
rtl8xxx_EU/include/rtw_pwrctrl.h:288:	#ifdef CONFIG_ANDROID_POWER
rtl8xxx_EU/include/rtw_pwrctrl.h:289:	android_early_suspend_t early_suspend;
rtl8xxx_EU/include/rtw_pwrctrl.h:359:#if defined(CONFIG_HAS_EARLYSUSPEND ) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/include/rtw_pwrctrl.h:363:#endif //CONFIG_HAS_EARLYSUSPEND || CONFIG_ANDROID_POWER
rtl8xxx_EU/include/autoconf.h:51:	#define RTW_USE_CFG80211_STA_EVENT /* Opne this for Android 4.1's wpa_supplicant */
rtl8xxx_EU/include/ioctl_cfg80211.h:63:	u8 bandroid_scan;
rtl8xxx_EU/include/osdep_service.h:1557:#elif defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/include/osdep_service.h:1558:#include <linux/android_power.h>
rtl8xxx_EU/Makefile:48:CONFIG_PLATFORM_ANDROID_X86 = n
rtl8xxx_EU/Makefile:256:			os_dep/linux/rtw_android.o
rtl8xxx_EU/Makefile:383:EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN -DCONFIG_PLATFORM_ANDROID -DCONFIG_PLATFORM_ACTIONS_ATM702X
rtl8xxx_EU/Makefile:395:EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN -DCONFIG_PLATFORM_ANDROID -DCONFIG_PLATFORM_SHUTTLE
rtl8xxx_EU/Makefile:397:KSRC := $(shell pwd)/../../../Android/kernel
rtl8xxx_EU/Makefile:409:ifeq ($(CONFIG_PLATFORM_ANDROID_X86), y)
rtl8xxx_EU/Makefile:413:CROSS_COMPILE := /media/DATA-2/android-x86/ics-x86_20120130/prebuilt/linux-x86/toolchain/i686-unknown-linux-gnu-4.2.1/bin/i686-unknown-linux-gnu-
rtl8xxx_EU/Makefile:414:KSRC := /media/DATA-2/android-x86/ics-x86_20120130/out/target/product/generic_x86/obj/kernel
rtl8xxx_EU/Makefile:532:CROSS_COMPILE := /home/android_sdk/nvidia/tegra-16r3-partner-android-4.1_20120723/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
rtl8xxx_EU/Makefile:533:KSRC := /home/android_sdk/nvidia/tegra-16r3-partner-android-4.1_20120723/out/target/product/cardhu/obj/KERNEL
rtl8xxx_EU/Makefile:540:CROSS_COMPILE := /home/android_sdk/nvidia/tegra-17r9-partner-android-4.2-dalmore_20130131/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6/bin/arm-eabi-
rtl8xxx_EU/Makefile:541:KSRC := /home/android_sdk/nvidia/tegra-17r9-partner-android-4.2-dalmore_20130131/out/target/product/dalmore/obj/KERNEL
rtl8xxx_EU/Makefile:548:CROSS_COMPILE := /home/android_sdk/Telechips/SDK_2304_20110613/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
rtl8xxx_EU/Makefile:549:KSRC := /home/android_sdk/Telechips/SDK_2304_20110613/kernel
rtl8xxx_EU/Makefile:556:CROSS_COMPILE := /home/android_sdk/Telechips/v12.06_r1-tcc-android-4.0.4/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
rtl8xxx_EU/Makefile:557:KSRC := /home/android_sdk/Telechips/v12.06_r1-tcc-android-4.0.4/kernel
rtl8xxx_EU/Makefile:562:EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN -DCONFIG_PLATFORM_ANDROID -DCONFIG_PLATFORM_ROCKCHIPS -DCONFIG_MINIMAL_MEMORY_USAGE
rtl8xxx_EU/Makefile:581:#KSRC := /media/DATA-1/aosp/android-omap-panda-3.0_20120104
rtl8xxx_EU/Makefile:582:CROSS_COMPILE := /media/DATA-1/android-4.0/prebuilt/linux-x86/toolchain/arm-eabi-4.4.3/bin/arm-eabi-
rtl8xxx_EU/Makefile:583:KSRC := /media/DATA-1/android-4.0/panda_kernel/omap
rtl8xxx_EU/core/rtw_pwrctrl.c:1405:	#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/core/rtw_pwrctrl.c:1408:	#endif //CONFIG_HAS_EARLYSUSPEND || CONFIG_ANDROID_POWER
rtl8xxx_EU/core/rtw_pwrctrl.c:1433:	#if defined(CONFIG_HAS_EARLYSUSPEND) || defined(CONFIG_ANDROID_POWER)
rtl8xxx_EU/core/rtw_pwrctrl.c:1435:	#endif //CONFIG_HAS_EARLYSUSPEND || CONFIG_ANDROID_POWER
rtl8xxx_EU/core/rtw_pwrctrl.c:1526:#ifdef CONFIG_ANDROID_POWER
rtl8xxx_EU/core/rtw_pwrctrl.c:1530:static void rtw_early_suspend(android_early_suspend_t *h)
rtl8xxx_EU/core/rtw_pwrctrl.c:1539:static void rtw_late_resume(android_early_suspend_t *h)
rtl8xxx_EU/core/rtw_pwrctrl.c:1558:	pwrpriv->early_suspend.level = ANDROID_EARLY_SUSPEND_LEVEL_BLANK_SCREEN - 20;
rtl8xxx_EU/core/rtw_pwrctrl.c:1561:	android_register_early_suspend(&pwrpriv->early_suspend);	
rtl8xxx_EU/core/rtw_pwrctrl.c:1571:		android_unregister_early_suspend(&pwrpriv->early_suspend);
rtl8xxx_EU/core/rtw_pwrctrl.c:1576:#endif //CONFIG_ANDROID_POWER
rtl8xxx_SU/os_intf/linux/os_intfs.c:824:		#ifndef CONFIG_ANDROID
rtl8xxx_SU/os_dep/linux/ioctl_cfg80211.c:2154:#include <rtw_android.h>
rtl8xxx_SU/os_dep/linux/ioctl_cfg80211.c:2169:				ret = rtw_android_priv_cmd(dev, rq, cmd);
rtl8xxx_SU/os_dep/linux/rtw_android.c:24:#include <rtw_android.h>
rtl8xxx_SU/os_dep/linux/rtw_android.c:54: * Android private command strings, PLEASE define new private commands here
rtl8xxx_SU/os_dep/linux/rtw_android.c:58:const char *android_wifi_cmd_str[ANDROID_WIFI_CMD_MAX] = {
rtl8xxx_SU/os_dep/linux/rtw_android.c:111:typedef struct android_wifi_priv_cmd {
rtl8xxx_SU/os_dep/linux/rtw_android.c:115:} android_wifi_priv_cmd;
rtl8xxx_SU/os_dep/linux/rtw_android.c:153: * wl_android_wifi_on
rtl8xxx_SU/os_dep/linux/rtw_android.c:161:static int wl_android_get_link_speed(struct net_device *net, char *command, int total_len)
rtl8xxx_SU/os_dep/linux/rtw_android.c:171:	/* Convert Kbps to Android Mbps */
rtl8xxx_SU/os_dep/linux/rtw_android.c:178:static int wl_android_get_rssi(struct net_device *net, char *command, int total_len)
rtl8xxx_SU/os_dep/linux/rtw_android.c:203:static int wl_android_set_suspendopt(struct net_device *dev, char *command, int total_len)
rtl8xxx_SU/os_dep/linux/rtw_android.c:225:static int wl_android_get_band(struct net_device *dev, char *command, int total_len)
rtl8xxx_SU/os_dep/linux/rtw_android.c:240:static int wl_android_set_pno_setup(struct net_device *dev, char *command, int total_len)
rtl8xxx_SU/os_dep/linux/rtw_android.c:348:static int wl_android_get_p2p_dev_addr(struct net_device *ndev, char *command, int total_len)
rtl8xxx_SU/os_dep/linux/rtw_android.c:362: * Global function definitions (declared in wl_android.h)
rtl8xxx_SU/os_dep/linux/rtw_android.c:366:int wl_android_wifi_on(struct net_device *dev)
rtl8xxx_SU/os_dep/linux/rtw_android.c:391:int wl_android_wifi_off(struct net_device *dev)
rtl8xxx_SU/os_dep/linux/rtw_android.c:414:int rtw_android_cmdstr_to_num(char *cmdstr)
rtl8xxx_SU/os_dep/linux/rtw_android.c:417:	for(cmd_num=0 ; cmd_num<ANDROID_WIFI_CMD_MAX; cmd_num++)
rtl8xxx_SU/os_dep/linux/rtw_android.c:418:		if(0 == strnicmp(cmdstr , android_wifi_cmd_str[cmd_num], strlen(android_wifi_cmd_str[cmd_num])) )
rtl8xxx_SU/os_dep/linux/rtw_android.c:424:int rtw_android_get_rssi(struct net_device *net, char *command, int total_len)
rtl8xxx_SU/os_dep/linux/rtw_android.c:439:int rtw_android_get_link_speed(struct net_device *net, char *command, int total_len)
rtl8xxx_SU/os_dep/linux/rtw_android.c:453:int rtw_android_set_country(struct net_device *net, char *command, int total_len)
rtl8xxx_SU/os_dep/linux/rtw_android.c:456:	char *country_code = command + strlen(android_wifi_cmd_str[ANDROID_WIFI_CMD_COUNTRY]) + 1;
rtl8xxx_SU/os_dep/linux/rtw_android.c:465:int rtw_android_get_p2p_dev_addr(struct net_device *net, char *command, int total_len)
rtl8xxx_SU/os_dep/linux/rtw_android.c:478:int rtw_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd)
rtl8xxx_SU/os_dep/linux/rtw_android.c:484:	android_wifi_priv_cmd priv_cmd;
rtl8xxx_SU/os_dep/linux/rtw_android.c:492:	if (copy_from_user(&priv_cmd, ifr->ifr_data, sizeof(android_wifi_priv_cmd))) {
rtl8xxx_SU/os_dep/linux/rtw_android.c:508:	printk("%s: Android private cmd \"%s\" on %s\n"
rtl8xxx_SU/os_dep/linux/rtw_android.c:511:	cmd_num = rtw_android_cmdstr_to_num(command);
rtl8xxx_SU/os_dep/linux/rtw_android.c:514:	case ANDROID_WIFI_CMD_START:
rtl8xxx_SU/os_dep/linux/rtw_android.c:515:		//bytes_written = wl_android_wifi_on(net);
rtl8xxx_SU/os_dep/linux/rtw_android.c:517:	case ANDROID_WIFI_CMD_SETFWPATH:
rtl8xxx_SU/os_dep/linux/rtw_android.c:530:	case ANDROID_WIFI_CMD_STOP:
rtl8xxx_SU/os_dep/linux/rtw_android.c:531:		//bytes_written = wl_android_wifi_off(net);
rtl8xxx_SU/os_dep/linux/rtw_android.c:534:	case ANDROID_WIFI_CMD_SCAN_ACTIVE:
rtl8xxx_SU/os_dep/linux/rtw_android.c:537:	case ANDROID_WIFI_CMD_SCAN_PASSIVE:
rtl8xxx_SU/os_dep/linux/rtw_android.c:541:	case ANDROID_WIFI_CMD_RSSI:
rtl8xxx_SU/os_dep/linux/rtw_android.c:542:		bytes_written = rtw_android_get_rssi(net, command, priv_cmd.total_len);
rtl8xxx_SU/os_dep/linux/rtw_android.c:544:	case ANDROID_WIFI_CMD_LINKSPEED:
rtl8xxx_SU/os_dep/linux/rtw_android.c:545:		bytes_written = rtw_android_get_link_speed(net, command, priv_cmd.total_len);
rtl8xxx_SU/os_dep/linux/rtw_android.c:548:	case ANDROID_WIFI_CMD_RXFILTER_START:
rtl8xxx_SU/os_dep/linux/rtw_android.c:551:	case ANDROID_WIFI_CMD_RXFILTER_STOP:
rtl8xxx_SU/os_dep/linux/rtw_android.c:554:	case ANDROID_WIFI_CMD_RXFILTER_ADD:
rtl8xxx_SU/os_dep/linux/rtw_android.c:558:	case ANDROID_WIFI_CMD_RXFILTER_REMOVE:
rtl8xxx_SU/os_dep/linux/rtw_android.c:563:	case ANDROID_WIFI_CMD_BTCOEXSCAN_START:
rtl8xxx_SU/os_dep/linux/rtw_android.c:566:	case ANDROID_WIFI_CMD_BTCOEXSCAN_STOP:
rtl8xxx_SU/os_dep/linux/rtw_android.c:569:	case ANDROID_WIFI_CMD_BTCOEXMODE:
rtl8xxx_SU/os_dep/linux/rtw_android.c:582:	case ANDROID_WIFI_CMD_SETSUSPENDOPT:
rtl8xxx_SU/os_dep/linux/rtw_android.c:583:		//bytes_written = wl_android_set_suspendopt(net, command, priv_cmd.total_len);
rtl8xxx_SU/os_dep/linux/rtw_android.c:586:	case ANDROID_WIFI_CMD_SETBAND:
rtl8xxx_SU/os_dep/linux/rtw_android.c:590:	case ANDROID_WIFI_CMD_GETBAND:
rtl8xxx_SU/os_dep/linux/rtw_android.c:591:		//bytes_written = wl_android_get_band(net, command, priv_cmd.total_len);
rtl8xxx_SU/os_dep/linux/rtw_android.c:594:	case ANDROID_WIFI_CMD_COUNTRY:
rtl8xxx_SU/os_dep/linux/rtw_android.c:595:		bytes_written = rtw_android_set_country(net, command, priv_cmd.total_len);
rtl8xxx_SU/os_dep/linux/rtw_android.c:599:	case ANDROID_WIFI_CMD_PNOSSIDCLR_SET:
rtl8xxx_SU/os_dep/linux/rtw_android.c:602:	case ANDROID_WIFI_CMD_PNOSETUP_SET:
rtl8xxx_SU/os_dep/linux/rtw_android.c:603:		//bytes_written = wl_android_set_pno_setup(net, command, priv_cmd.total_len);
rtl8xxx_SU/os_dep/linux/rtw_android.c:605:	case ANDROID_WIFI_CMD_PNOENABLE_SET:
rtl8xxx_SU/os_dep/linux/rtw_android.c:611:	case ANDROID_WIFI_CMD_P2P_DEV_ADDR:
rtl8xxx_SU/os_dep/linux/rtw_android.c:612:		//bytes_written = rtw_android_get_p2p_dev_addr(net, command, priv_cmd.total_len);
rtl8xxx_SU/os_dep/linux/rtw_android.c:614:	case ANDROID_WIFI_CMD_P2P_SET_NOA:
rtl8xxx_SU/os_dep/linux/rtw_android.c:618:	case ANDROID_WIFI_CMD_P2P_GET_NOA:
rtl8xxx_SU/os_dep/linux/rtw_android.c:621:	case ANDROID_WIFI_CMD_P2P_SET_PS:
rtl8xxx_SU/os_dep/linux/rtw_android.c:627:	case ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE:
rtl8xxx_SU/os_dep/linux/rtw_android.c:629:		int skip = strlen(android_wifi_cmd_str[ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE]) + 3;
rtl8xxx_SU/os_dep/linux/rtw_android.c:672:int wl_android_init(void)
rtl8xxx_SU/os_dep/linux/rtw_android.c:689:int wl_android_exit(void)
rtl8xxx_SU/os_dep/linux/rtw_android.c:696:int wl_android_post_init(void)
rtl8xxx_SU/os_dep/linux/rtw_android.c:722: * Functions for Android WiFi card detection
rtl8xxx_SU/os_dep/linux/rtw_android.c:734:int wl_android_wifictrl_func_add(void)
rtl8xxx_SU/os_dep/linux/rtw_android.c:755:void wl_android_wifictrl_func_del(void)
rtl8xxx_SU/os_dep/linux/rtw_android.c:764:void *wl_android_prealloc(int section, unsigned long size)
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:520:	#ifdef CONFIG_ANDROID
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:2638:			#ifdef CONFIG_ANDROID
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3661:#include <rtw_android.h>
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3706:#ifdef CONFIG_ANDROID
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3715:	for(i=0 ; i<ANDROID_WIFI_CMD_MAX; i++)
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3716:		if(0 == strncmp(ext , android_wifi_cmd_str[i], strlen(android_wifi_cmd_str[i])) )
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3719:	i = rtw_android_cmdstr_to_num(ext);
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3722:		case ANDROID_WIFI_CMD_START :
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3725:		case ANDROID_WIFI_CMD_STOP :
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3728:		case ANDROID_WIFI_CMD_RSSI :
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3745:		case ANDROID_WIFI_CMD_LINKSPEED :
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3760:		case ANDROID_WIFI_CMD_MACADDR :
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3763:		case ANDROID_WIFI_CMD_SCAN_ACTIVE :
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3770:		case ANDROID_WIFI_CMD_SCAN_PASSIVE :
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3779:		case ANDROID_WIFI_CMD_COUNTRY :
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:3825:#endif //end of CONFIG_ANDROID
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:4047:		#ifdef CONFIG_ANDROID
rtl8xxx_SU/ioctl/rtl871x_ioctl_linux.c:4054:		#ifdef CONFIG_ANDROID
rtl8xxx_SU/include/rtw_android.h:2: * Linux cfg80211 driver - Android related functions
rtl8xxx_SU/include/rtw_android.h:24: * $Id: wl_android.c,v 1.1.4.1.2.14 2011/02/09 01:40:07 Exp $
rtl8xxx_SU/include/rtw_android.h:34: * Android platform dependent functions, feel free to add Android specific functions here
rtl8xxx_SU/include/rtw_android.h:36: * or cfg, define them as static in wl_android.c
rtl8xxx_SU/include/rtw_android.h:41: * wl_android_init will be called from module init function (dhd_module_init now), similarly
rtl8xxx_SU/include/rtw_android.h:42: * wl_android_exit will be called from module exit function (dhd_module_cleanup now)
rtl8xxx_SU/include/rtw_android.h:44:int wl_android_init(void);
rtl8xxx_SU/include/rtw_android.h:45:int wl_android_exit(void);
rtl8xxx_SU/include/rtw_android.h:46:int wl_android_post_init(void);
rtl8xxx_SU/include/rtw_android.h:47:int wl_android_wifi_on(struct net_device *dev);
rtl8xxx_SU/include/rtw_android.h:48:int wl_android_wifi_off(struct net_device *dev);
rtl8xxx_SU/include/rtw_android.h:51:enum ANDROID_WIFI_CMD {
rtl8xxx_SU/include/rtw_android.h:52:	ANDROID_WIFI_CMD_START,				
rtl8xxx_SU/include/rtw_android.h:53:	ANDROID_WIFI_CMD_STOP,			
rtl8xxx_SU/include/rtw_android.h:54:	ANDROID_WIFI_CMD_SCAN_ACTIVE,
rtl8xxx_SU/include/rtw_android.h:55:	ANDROID_WIFI_CMD_SCAN_PASSIVE,		
rtl8xxx_SU/include/rtw_android.h:56:	ANDROID_WIFI_CMD_RSSI,	
rtl8xxx_SU/include/rtw_android.h:57:	ANDROID_WIFI_CMD_LINKSPEED,
rtl8xxx_SU/include/rtw_android.h:58:	ANDROID_WIFI_CMD_RXFILTER_START,
rtl8xxx_SU/include/rtw_android.h:59:	ANDROID_WIFI_CMD_RXFILTER_STOP,	
rtl8xxx_SU/include/rtw_android.h:60:	ANDROID_WIFI_CMD_RXFILTER_ADD,	
rtl8xxx_SU/include/rtw_android.h:61:	ANDROID_WIFI_CMD_RXFILTER_REMOVE,
rtl8xxx_SU/include/rtw_android.h:62:	ANDROID_WIFI_CMD_BTCOEXSCAN_START,
rtl8xxx_SU/include/rtw_android.h:63:	ANDROID_WIFI_CMD_BTCOEXSCAN_STOP,
rtl8xxx_SU/include/rtw_android.h:64:	ANDROID_WIFI_CMD_BTCOEXMODE,
rtl8xxx_SU/include/rtw_android.h:65:	ANDROID_WIFI_CMD_SETSUSPENDOPT,
rtl8xxx_SU/include/rtw_android.h:66:	ANDROID_WIFI_CMD_P2P_DEV_ADDR,	
rtl8xxx_SU/include/rtw_android.h:67:	ANDROID_WIFI_CMD_SETFWPATH,		
rtl8xxx_SU/include/rtw_android.h:68:	ANDROID_WIFI_CMD_SETBAND,		
rtl8xxx_SU/include/rtw_android.h:69:	ANDROID_WIFI_CMD_GETBAND,			
rtl8xxx_SU/include/rtw_android.h:70:	ANDROID_WIFI_CMD_COUNTRY,			
rtl8xxx_SU/include/rtw_android.h:71:	ANDROID_WIFI_CMD_P2P_SET_NOA,
rtl8xxx_SU/include/rtw_android.h:72:	ANDROID_WIFI_CMD_P2P_GET_NOA,	
rtl8xxx_SU/include/rtw_android.h:73:	ANDROID_WIFI_CMD_P2P_SET_PS,	
rtl8xxx_SU/include/rtw_android.h:74:	ANDROID_WIFI_CMD_SET_AP_WPS_P2P_IE,
rtl8xxx_SU/include/rtw_android.h:76:	ANDROID_WIFI_CMD_PNOSSIDCLR_SET,
rtl8xxx_SU/include/rtw_android.h:77:	ANDROID_WIFI_CMD_PNOSETUP_SET,
rtl8xxx_SU/include/rtw_android.h:78:	ANDROID_WIFI_CMD_PNOENABLE_SET,
rtl8xxx_SU/include/rtw_android.h:79:	ANDROID_WIFI_CMD_PNODEBUG_SET,
rtl8xxx_SU/include/rtw_android.h:82:	ANDROID_WIFI_CMD_MACADDR,
rtl8xxx_SU/include/rtw_android.h:84:	ANDROID_WIFI_CMD_MAX
rtl8xxx_SU/include/rtw_android.h:87:int rtw_android_cmdstr_to_num(char *cmdstr);
rtl8xxx_SU/include/rtw_android.h:88:int rtw_android_priv_cmd(struct net_device *net, struct ifreq *ifr, int cmd);
rtl8xxx_SU/include/rtw_android.h:91:int wl_android_wifictrl_func_add(void);
rtl8xxx_SU/include/rtw_android.h:92:void wl_android_wifictrl_func_del(void);
rtl8xxx_SU/include/rtw_android.h:93:void* wl_android_prealloc(int section, unsigned long size);
rtl8xxx_SU/include/drv_conf.h:30://Older Android kernel doesn't has CONFIG_ANDROID defined,
rtl8xxx_SU/include/drv_conf.h:31://add this to force CONFIG_ANDROID defined
rtl8xxx_SU/include/drv_conf.h:32:#ifdef CONFIG_PLATFORM_ANDROID
rtl8xxx_SU/include/drv_conf.h:33:#define CONFIG_ANDROID
rtl8xxx_SU/include/drv_conf.h:36:#ifdef CONFIG_ANDROID
rtl8xxx_SU/include/drv_conf.h:37://Some Android build will restart the UI while non-printable ascii is passed
rtl8xxx_SU/include/drv_conf.h:39://for Android here. If you are sure there is no risk on your system about this,
rtl8xxx_SU/config:17:CONFIG_PLATFORM_ANDROID_X86	=	n
rtl8xxx_SU/cmd/rtl871x_cmd.c:543:		// In Android 4.0 system, it would set passive scan cmd before set scan
rtl8xxx_SU/Makefile:15:CONFIG_PLATFORM_ANDROID_X86     =       n
rtl8xxx_SU/Makefile:70:					os_dep/linux/rtw_android.o \
rtl8xxx_SU/Makefile:92:ifeq ($(CONFIG_PLATFORM_ANDROID_X86), y)
rtl8xxx_SU/Makefile:93:EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN -DCONFIG_PLATFORM_ANDROID
